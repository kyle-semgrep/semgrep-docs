"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[90134],{10872:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/semgrep-app-comment-gitlab-d043e12a45fc7433e42b3b6c9059cadf.png"},14345:(e,n,i)=>{i.d(n,{A:()=>o});i(96540);var s=i(34164);const r={tabItem:"tabItem_Ymn6"};var t=i(74848);function o(e){let{children:n,hidden:i,className:o}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,s.A)(r.tabItem,o),hidden:i,children:n})}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var s=i(96540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}},35540:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/ado-pr-comment-d8280d9f4251bd3506f6e99fe00d91a1.png"},42184:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>m,contentTitle:()=>x,default:()=>b,frontMatter:()=>p,metadata:()=>s,toc:()=>f});const s=JSON.parse('{"id":"semgrep-code/triage-remediation","title":"Triage and remediation","description":"Learn how about Semgrep Code\'s triage status for findings and how to triage and remediate findings.","source":"@site/docs/semgrep-code/triage-remediation.md","sourceDirName":"semgrep-code","slug":"/semgrep-code/triage-remediation","permalink":"/semgrep-docs/semgrep-code/triage-remediation","draft":false,"unlisted":false,"editUrl":"https://github.com/kyle-semgrep/semgrep-docs/edit/main/docs/semgrep-code/triage-remediation.md","tags":[{"inline":true,"label":"Semgrep Code","permalink":"/semgrep-docs/tags/semgrep-code"},{"inline":true,"label":"Semgrep AppSec Platform","permalink":"/semgrep-docs/tags/semgrep-app-sec-platform"}],"version":"current","lastUpdatedAt":1753220396000,"frontMatter":{"slug":"triage-remediation","append_help_link":true,"title":"Triage and remediation","hide_title":false,"toc_max_heading_level":2,"description":"Learn how about Semgrep Code\'s triage status for findings and how to triage and remediate findings.","tags":["Semgrep Code","Semgrep AppSec Platform"]},"sidebar":"scanSidebar","previous":{"title":"Manage rules and policies","permalink":"/semgrep-docs/semgrep-code/policies"},"next":{"title":"Perform cross-file analysis","permalink":"/semgrep-docs/semgrep-code/semgrep-pro-engine-intro"}}');var r=i(74848),t=i(28453),o=i(62464),l=i(14345),a=i(90422);const d=[];function c(e){const n={a:"a",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Comment"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsxs)("code",{children:["/fp ",(0,r.jsx)("span",{className:"placeholder",children:"<REASON>"})]})}),(0,r.jsxs)(n.td,{children:["Triage a finding as ",(0,r.jsx)(n.strong,{children:"Ignored"})," with the triage reason ",(0,r.jsx)(n.strong,{children:"false positive"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsxs)("code",{children:["/ar ",(0,r.jsx)("span",{className:"placeholder",children:"<REASON>"})]})}),(0,r.jsxs)(n.td,{children:["Triage a finding as ",(0,r.jsx)(n.strong,{children:"Ignored"})," with the triage reason ",(0,r.jsx)(n.strong,{children:"acceptable risk"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsxs)("code",{children:["/other ",(0,r.jsx)("span",{className:"placeholder",children:"<REASON>"})]})}),(0,r.jsxs)(n.td,{children:["Triage a finding as ",(0,r.jsx)(n.strong,{children:"Ignored"})," without specifying the reason; the triage reason value is set to ",(0,r.jsx)(n.strong,{children:"No triage reason"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsxs)("code",{children:["/open ",(0,r.jsx)("span",{className:"placeholder",children:"<REASON>"})]})}),(0,r.jsxs)(n.td,{children:["Reopen a finding that has been triaged as ",(0,r.jsx)(n.strong,{children:"Ignored"}),". The comment is optional."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsxs)("code",{children:["/remember ",(0,r.jsx)("span",{className:"placeholder",children:"<REASON>"})]})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.a,{href:"/semgrep-assistant/customize#add-memories",children:"Add Assistant Memories"}),"."]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}var g=i(76572),u=i(73277);const p={slug:"triage-remediation",append_help_link:!0,title:"Triage and remediation",hide_title:!1,toc_max_heading_level:2,description:"Learn how about Semgrep Code's triage status for findings and how to triage and remediate findings.",tags:["Semgrep Code","Semgrep AppSec Platform"]},x="Triage and remediate findings",m={},f=[{value:"Triage statuses",id:"triage-statuses",level:2},...a.RM,{value:"Manage findings",id:"manage-findings",level:2},{value:"Fix a finding",id:"fix-a-finding",level:3},{value:"Disable a ruleset or a rule",id:"disable-a-ruleset-or-a-rule",level:3},...g.RM,{value:"Ignore findings",id:"ignore-findings",level:3},...u.RM,{value:"Reopen findings",id:"reopen-findings",level:3},{value:"Triage findings through PR and MR comments",id:"triage-findings-through-pr-and-mr-comments",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Enable triage through Azure DevOps PR comments",id:"enable-triage-through-azure-devops-pr-comments",level:3},{value:"Triage a finding",id:"triage-a-finding",level:3},...d,{value:"Prerequisites",id:"prerequisites-1",level:3},{value:"Enable triage through Bitbucket PR comments",id:"enable-triage-through-bitbucket-pr-comments",level:3},{value:"Triage a finding",id:"triage-a-finding-1",level:3},...d,{value:"Prerequisites",id:"prerequisites-2",level:3},{value:"Enable triage through GitHub PR comments:",id:"enable-triage-through-github-pr-comments",level:3},{value:"Triage a finding",id:"triage-a-finding-2",level:3},...d,{value:"Prerequisites",id:"prerequisites-3",level:3},{value:"Enable triage through GitLab MR comments",id:"enable-triage-through-gitlab-mr-comments",level:3},{value:"Triage a finding",id:"triage-a-finding-3",level:3},...d,{value:"Triage findings in bulk through the Semgrep API",id:"triage-findings-in-bulk-through-the-semgrep-api",level:2},{value:"Reduce the number of false positive findings",id:"reduce-the-number-of-false-positive-findings",level:2}];function j(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"triage-and-remediate-findings",children:"Triage and remediate findings"})}),"\n","\n",(0,r.jsx)(n.p,{children:"This article shows you how to triage and manage findings identified by Semgrep Code using Semgrep AppSec Platform, including:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fixing the issue detected."})," This is Semgrep's primary goal. If the rule produces a ",(0,r.jsx)(n.strong,{children:"true positive"})," finding, such as a security issue, developers must change or address the code so that the rule no longer matches it."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Removing the rule or code that generated the finding."})," There are cases where Semgrep scans a file it should ignore or scans the file with an irrelevant rule. You can ",(0,r.jsx)(n.a,{href:"/semgrep-code/policies#disable-rules",children:"disable the rule"})," from the ",(0,r.jsx)(n.strong,{children:"Policies"})," page or ",(0,r.jsx)(n.a,{href:"/ignoring-files-folders-code",children:"add the file to the ignore list"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Triaging the finding."})," Deprioritize a finding if it's not useful or important through triage. Triage actions include ignoring and reopening a finding that was previously ignored. Triaging a finding to ",(0,r.jsx)(n.strong,{children:"ignore"})," is one method to handle ",(0,r.jsx)(n.strong,{children:"false positives"})," without changing a rule or your code."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Additionally, if you have Semgrep Assistant enabled, you receive AI-powered security recommendations to help you review, triage, and remediate your Semgrep findings, including:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/semgrep-assistant/overview#remediation",children:"Remediation advice"})," and autofixes, or suggested fixes, shown in Semgrep AppSec Platform."]}),"\n",(0,r.jsx)(n.li,{children:"Remediation guidance with step-by-step instructions on how to remediate the finding identified by Semgrep Code in every pull request or merge request comment Semgrep pushes"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/semgrep-assistant/overview#component-tags",children:"Component tagging"})," to help identify high-priority issues."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Semgrep Assistant can also ",(0,r.jsx)(n.a,{href:"/semgrep-assistant/overview#auto-triage",children:"auto-triage findings"}),", suggesting whether a finding can safely be ignored, and ",(0,r.jsx)(n.a,{href:"/semgrep-assistant/overview#noise-filtering-beta",children:"filter out potential false positives"})," to help increase developer velocity."]}),"\n",(0,r.jsx)(n.h2,{id:"triage-statuses",children:"Triage statuses"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Triage"})," is the prioritization of a finding based on policies or criteria set by your team or organization, such as severity, coding standards, business goals, and product goals."]}),"\n",(0,r.jsxs)(n.p,{children:["Semgrep AppSec Platform uses the logic specified in the table below to automatically mark findings as either fixed or removed when a finding is no longer present in the code. You can also manually ignore findings in Semgrep AppSec Platform directly through ",(0,r.jsx)(n.strong,{children:"triage"})," or ",(0,r.jsx)(n.strong,{children:"bulk triage"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"The triage statuses are as follows:"}),"\n",(0,r.jsx)(a.Ay,{}),"\n",(0,r.jsx)(n.h2,{id:"manage-findings",children:"Manage findings"}),"\n",(0,r.jsx)(n.p,{children:"The following sections show you have to manage your findings by:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Fixing the underlying code"}),"\n",(0,r.jsx)(n.li,{children:"Disabling a rule or a ruleset"}),"\n",(0,r.jsx)(n.li,{children:"Ignoring a finding"}),"\n",(0,r.jsx)(n.li,{children:"Reopening a finding"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Note that some actions, such as ignoring and reopening findings, require different steps based on whether you have chosen ",(0,r.jsx)(n.strong,{children:"Group by Rule"})," or ",(0,r.jsx)(n.strong,{children:"No Grouping"})," when viewing your results on the ",(0,r.jsx)(n.strong,{children:"Findings"})," page."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Screenshot of Semgrep AppSec Platform triage menu",src:i(58764).A+"#md-width",width:"2244",height:"1196"})}),"\n",(0,r.jsx)(n.h3,{id:"fix-a-finding",children:"Fix a finding"}),"\n",(0,r.jsxs)(n.p,{children:["To ",(0,r.jsx)(n.strong,{children:"fix a finding"}),", update or refactor the code such that the Semgrep rule pattern no longer matches the code."]}),"\n",(0,r.jsx)(n.h3,{id:"disable-a-ruleset-or-a-rule",children:"Disable a ruleset or a rule"}),"\n",(0,r.jsx)(g.Ay,{}),"\n",(0,r.jsx)(n.h3,{id:"ignore-findings",children:"Ignore findings"}),"\n",(0,r.jsxs)(n.p,{children:["One way to handle ",(0,r.jsx)(n.strong,{children:"false positives"})," without changing the rule or your code is to set the finding's triage status to ",(0,r.jsx)(n.strong,{children:"ignore"}),"."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsxs)("summary",{children:["Ignore findings in ",(0,r.jsx)("b",{children:"Group by Rule"})," view"]}),(0,r.jsxs)(n.p,{children:["To ",(0,r.jsx)(n.strong,{children:"ignore findings"})," in the ",(0,r.jsx)(n.strong,{children:"Group by Rule"})," view:"]}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["On the ",(0,r.jsx)(n.a,{href:"https://semgrep.dev/orgs/-/findings?tab=open",children:"Findings"})," page, click the ",(0,r.jsx)(n.strong,{children:"Status"})," filter, and then select ",(0,r.jsx)(n.strong,{children:"Open"})," status to see all open findings."]}),"\n",(0,r.jsxs)(n.li,{children:["Perform one of these steps:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["To select more findings from the same rule, click the ",(0,r.jsx)(n.strong,{children:"Triage"})," button on the card of the finding."]}),"\n",(0,r.jsxs)(n.li,{children:["To select individual findings reported by a rule, fill in the checkboxes of the finding, and then click the ",(0,r.jsx)(n.strong,{children:"Triage"})," button on the card of the finding."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Optional: Write a reason to describe why the finding was ignored."}),"\n",(0,r.jsxs)(n.li,{children:["Click ",(0,r.jsx)(n.strong,{children:"Ignore"}),"."]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsxs)("summary",{children:["Ignore findings in ",(0,r.jsx)("b",{children:" No grouping"})," view"]}),(0,r.jsxs)(n.p,{children:["To ",(0,r.jsx)(n.strong,{children:"ignore individual finding"})," in the ",(0,r.jsx)(n.strong,{children:"No grouping"})," view, follow these steps:"]}),(0,r.jsx)(u.Ay,{}),(0,r.jsxs)(n.p,{children:["To ",(0,r.jsx)(n.strong,{children:"ignore multiple findings"})," in the ",(0,r.jsx)(n.strong,{children:"No grouping"})," view, follow these steps:"]}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["On the ",(0,r.jsx)(n.a,{href:"https://semgrep.dev/orgs/-/findings?tab=open",children:"Findings"})," page, click the ",(0,r.jsx)(n.strong,{children:"Status"})," filter, and then select ",(0,r.jsx)(n.strong,{children:"Open"})," status to see all open findings."]}),"\n",(0,r.jsxs)(n.li,{children:["Perform one of these steps:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Select all findings by clicking on the header row checkbox that states ",(0,r.jsx)(n.strong,{children:"Showing X open findings"}),". You can navigate to succeeding pages and add other results to the current selection."]}),"\n",(0,r.jsx)(n.li,{children:"Select more findings by clicking on their checkboxes."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Click the ",(0,r.jsx)(n.strong,{children:"Triage"})," button."]}),"\n",(0,r.jsxs)(n.li,{children:["Optional: Select a reason of why you are ignoring a finding. Choose one of the following options: ",(0,r.jsx)(n.strong,{children:"False positive"}),", ",(0,r.jsx)(n.strong,{children:"Acceptable risk"}),", ",(0,r.jsx)(n.strong,{children:"No time to fix"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Select ",(0,r.jsx)(n.strong,{children:"Ignored"})," from the dropdown menu."]}),"\n",(0,r.jsxs)(n.li,{children:["Click ",(0,r.jsx)(n.strong,{children:"Save"}),"."]}),"\n"]})]}),"\n",(0,r.jsx)(n.h3,{id:"reopen-findings",children:"Reopen findings"}),"\n",(0,r.jsxs)(n.p,{children:["You can ",(0,r.jsx)(n.strong,{children:"reopen"})," a finding that you previously marked as ",(0,r.jsx)(n.strong,{children:"ignore"})," at any time."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsxs)("summary",{children:["Reopen findings in ",(0,r.jsx)("b",{children:"Group by Rule"})," view"]}),(0,r.jsxs)(n.p,{children:["To ",(0,r.jsx)(n.strong,{children:"reopen findings"})," in the ",(0,r.jsx)(n.strong,{children:"Group by Rule"})," view, follow these steps:"]}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["On the ",(0,r.jsx)(n.a,{href:"https://semgrep.dev/orgs/-/findings?tab=open",children:"Findings"})," page, click the ",(0,r.jsx)(n.strong,{children:"Status"})," filter, and then select the ",(0,r.jsx)(n.strong,{children:"Ignored"})," or ",(0,r.jsx)(n.strong,{children:"Fixed"})," status to see all ignored or fixed findings."]}),"\n",(0,r.jsxs)(n.li,{children:["Perform one of these steps:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["To select more findings from the same rule, click the ",(0,r.jsx)(n.strong,{children:"Triage"})," button on the card of the finding."]}),"\n",(0,r.jsxs)(n.li,{children:["To select individual findings reported by a rule, fill in the checkboxes for the finding, and then click the ",(0,r.jsx)(n.strong,{children:"Triage"})," button on the finding card."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Optional: Write a reason to describe why the finding was ignored."}),"\n",(0,r.jsxs)(n.li,{children:["Click ",(0,r.jsx)(n.strong,{children:"Reopen"}),"."]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsxs)("summary",{children:["Reopen findings in ",(0,r.jsx)("b",{children:"No grouping"})," view"]}),(0,r.jsxs)(n.p,{children:["To ",(0,r.jsx)(n.strong,{children:"reopen individual findings"})," in the No grouping view, follow these steps:"]}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["On the ",(0,r.jsx)(n.a,{href:"https://semgrep.dev/orgs/-/findings?tab=open",children:"Findings"})," page, click the ",(0,r.jsx)(n.strong,{children:"Status"})," filter, and then select ",(0,r.jsx)(n.strong,{children:"Ignored"})," or ",(0,r.jsx)(n.strong,{children:"Fixed"})," status to see all ignored or fixed findings."]}),"\n",(0,r.jsxs)(n.li,{children:["Next to a finding you want to ignore, click the ",(0,r.jsx)(n.strong,{children:"Reopen"})," ",(0,r.jsx)("i",{class:"fa-regular fa-chevron-down"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Optional: Add a note."}),"\n",(0,r.jsxs)(n.li,{children:["Click ",(0,r.jsx)(n.strong,{children:"Save"}),"."]}),"\n"]}),(0,r.jsxs)(n.p,{children:["To ",(0,r.jsx)(n.strong,{children:"reopen multiple findings"})," in the ",(0,r.jsx)(n.strong,{children:"No grouping"})," view, follow these steps:"]}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["On the ",(0,r.jsx)(n.a,{href:"https://semgrep.dev/orgs/-/findings?tab=open",children:"Findings"})," page, click the ",(0,r.jsx)(n.strong,{children:"Status"})," filter, and then select the ",(0,r.jsx)(n.strong,{children:"Ignored"})," or ",(0,r.jsx)(n.strong,{children:"Fixed"})," status to see all ignored or fixed findings."]}),"\n",(0,r.jsxs)(n.li,{children:["Perform one of these steps:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Select all findings by clicking on the header row checkbox that states ",(0,r.jsx)(n.strong,{children:"Showing X open findings"}),". You can navigate to succeeding pages and add other results to the current selection."]}),"\n",(0,r.jsx)(n.li,{children:"Select relevant findings one by one by clicking on their checkboxes."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Click the ",(0,r.jsx)(n.strong,{children:"Triage"})," button."]}),"\n",(0,r.jsxs)(n.li,{children:["In the ",(0,r.jsx)(n.strong,{children:"Triage state"})," dropdown menu, select ",(0,r.jsx)(n.strong,{children:"Reopened"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Click ",(0,r.jsx)(n.strong,{children:"Save"}),"."]}),"\n"]})]}),"\n",(0,r.jsx)(n.h2,{id:"triage-findings-through-pr-and-mr-comments",children:"Triage findings through PR and MR comments"}),"\n",(0,r.jsx)(n.p,{children:"Triage your Semgrep AppSec Platform findings displayed as comments in PRs and MRs by replying with another comment."}),"\n",(0,r.jsxs)(o.A,{defaultValue:"gh",values:[{label:"Azure DevOps",value:"ado"},{label:"Bitbucket",value:"bb"},{label:"GitHub",value:"gh"},{label:"GitLab",value:"gl"}],children:[(0,r.jsxs)(l.A,{value:"ado",children:[(0,r.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"You have one or more repositories hosted by Azure DevOps Cloud."}),"\n",(0,r.jsxs)(n.li,{children:["You have completed a ",(0,r.jsx)(n.a,{href:"/deployment/core-deployment",children:"Semgrep core deployment"}),"."]}),"\n"]}),(0,r.jsx)(n.h3,{id:"enable-triage-through-azure-devops-pr-comments",children:"Enable triage through Azure DevOps PR comments"}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Sign in to Semgrep, and go to your organization's ",(0,r.jsx)(n.a,{href:"https://semgrep.dev/orgs/-/settings/general/code",children:"Settings > General > Code"})," page."]}),"\n",(0,r.jsxs)(n.li,{children:["Click the ",(0,r.jsx)(n.strong,{children:"Triage via code review comments"})," ",(0,r.jsx)("i",{class:"fa-solid fa-toggle-large-on"})," toggle to turn on this feature."]}),"\n"]}),(0,r.jsx)(n.h3,{id:"triage-a-finding",children:"Triage a finding"}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Find an open comment created by Semgrep in your pull request:\n",(0,r.jsx)(n.img,{alt:"Azure DevOps PR comment with Semgrep triage options",src:i(35540).A+"#md-width",width:"1224",height:"1310"})]}),"\n",(0,r.jsxs)(n.li,{children:["In a subsequent comment, reply with the action you want to take. You must provide a reason to help the reader understand why the finding has been triaged as ignored:","\n",(0,r.jsx)(h,{}),"\n"]}),"\n"]}),(0,r.jsxs)(n.p,{children:["Triaging a finding as ",(0,r.jsx)(n.strong,{children:"Ignored"})," through a comment in Azure DevOps changes the status of the finding to ",(0,r.jsx)(n.strong,{children:"Ignored"})," in Semgrep AppSec Platform. However, the Azure DevOps conversation itself is ",(0,r.jsx)(n.strong,{children:"not"})," automatically resolved by this process."]})]}),(0,r.jsxs)(l.A,{value:"bb",children:[(0,r.jsx)(n.h3,{id:"prerequisites-1",children:"Prerequisites"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"You have one or more repositories hosted by Bitbucket Cloud Premium, or Bitbucket Data Center v8.8 or above."}),"\n",(0,r.jsxs)(n.li,{children:["You have completed a ",(0,r.jsx)(n.a,{href:"/deployment/core-deployment",children:"Semgrep core deployment"}),". Particularly, you must have a successful connection to Bitbucket."]}),"\n"]}),(0,r.jsx)(n.h3,{id:"enable-triage-through-bitbucket-pr-comments",children:"Enable triage through Bitbucket PR comments"}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Sign in to Semgrep, and go to your organization's ",(0,r.jsx)(n.a,{href:"https://semgrep.dev/orgs/-/settings/general/code",children:"Settings > General > Code"})," page."]}),"\n",(0,r.jsxs)(n.li,{children:["Click the ",(0,r.jsx)(n.strong,{children:"Triage via code review comments"})," ",(0,r.jsx)("i",{class:"fa-solid fa-toggle-large-on"})," toggle to turn on this feature."]}),"\n"]}),(0,r.jsx)(n.h3,{id:"triage-a-finding-1",children:"Triage a finding"}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Find an open comment created by Semgrep AppSec Platform in your pull request:\n",(0,r.jsx)(n.img,{alt:"Semgrep AppSec Platform PR comment in Bitbucket",src:i(78609).A+"#md-width",width:"1536",height:"878"})]}),"\n",(0,r.jsxs)(n.li,{children:["In a subsequent comment, reply with the action you want to take. You must provide a reason to help the reader understand why the finding has been triaged as ignored:","\n",(0,r.jsx)(h,{}),"\n"]}),"\n"]}),(0,r.jsxs)(n.p,{children:["Triaging a finding as ",(0,r.jsx)(n.strong,{children:"Ignored"})," through a comment in Bitbucket changes the status of the finding to ",(0,r.jsx)(n.strong,{children:"Ignored"})," in Semgrep AppSec Platform. However, the Bitbucket conversation itself is ",(0,r.jsx)(n.strong,{children:"not"})," automatically resolved by this process."]})]}),(0,r.jsxs)(l.A,{value:"gh",children:[(0,r.jsx)(n.h3,{id:"prerequisites-2",children:"Prerequisites"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.strong,{children:"private"})," GitHub Free or Team cloud-hosted repository or GitHub Enterprise repository. This feature is not enabled for public GitHub Cloud repositories."]}),"\n",(0,r.jsxs)(n.li,{children:["You have completed a ",(0,r.jsx)(n.a,{href:"/deployment/core-deployment",children:"Semgrep core deployment"}),"."]}),"\n"]}),(0,r.jsx)(n.h3,{id:"enable-triage-through-github-pr-comments",children:"Enable triage through GitHub PR comments:"}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Sign in to Semgrep, and go to your organization's ",(0,r.jsx)(n.a,{href:"https://semgrep.dev/orgs/-/settings/general/code",children:"Settings > General > Code"})," page."]}),"\n",(0,r.jsxs)(n.li,{children:["Click the ",(0,r.jsx)(n.strong,{children:"Triage via code review comments"})," ",(0,r.jsx)("i",{class:"fa-solid fa-toggle-large-on"})," toggle to turn on this feature."]}),"\n"]}),(0,r.jsx)(n.h3,{id:"triage-a-finding-2",children:"Triage a finding"}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Find an open comment created by Semgrep AppSec Platform in your pull request or merge request:\n",(0,r.jsx)(n.img,{alt:"Screenshot of Semgrep AppSec Platform comment in GitHub",src:i(81273).A+"#md-width",width:"1254",height:"621"})]}),"\n",(0,r.jsxs)(n.li,{children:["In a subsequent comment, reply with the action you want to take. You must provide a ",(0,r.jsx)(n.strong,{children:"reason"})," to help the reader understand why the finding has been triaged as ",(0,r.jsx)(n.strong,{children:"ignored"}),":","\n",(0,r.jsx)(h,{}),"\n"]}),"\n"]}),(0,r.jsx)(n.p,{children:"Semgrep supports older versions of this functionality that used the following commands:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)("code",{children:["/semgrep ignore ",(0,r.jsx)("span",{className:"placeholder",children:"<REASON>"})]})," - triage a finding as ",(0,r.jsx)(n.strong,{children:"Ignored"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)("code",{children:["/semgrep open ",(0,r.jsx)("span",{className:"placeholder",children:"<REASON>"})]})," - reopen a finding that has been triaged as ",(0,r.jsx)(n.strong,{children:"Ignored"}),"."]}),"\n"]}),(0,r.jsxs)(n.p,{children:["Triaging a finding as ",(0,r.jsx)(n.strong,{children:"Ignored"})," through a comment in GitHub changes the status of the finding to ",(0,r.jsx)(n.strong,{children:"Ignored"})," in Semgrep AppSec Platform. However, the GitHub conversation itself is ",(0,r.jsx)(n.strong,{children:"not"})," automatically resolved by this process."]})]}),(0,r.jsxs)(l.A,{value:"gl",children:[(0,r.jsx)(n.h3,{id:"prerequisites-3",children:"Prerequisites"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"A repository hosted by GitLab. Semgrep supports the use of both GitLab.com and GitLab self-managed plans."}),"\n",(0,r.jsxs)(n.li,{children:["You have completed a ",(0,r.jsx)(n.a,{href:"/deployment/core-deployment",children:"Semgrep core deployment"}),"."]}),"\n"]}),(0,r.jsx)(n.h3,{id:"enable-triage-through-gitlab-mr-comments",children:"Enable triage through GitLab MR comments"}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Sign in to Semgrep, and go to your organization's ",(0,r.jsx)(n.a,{href:"https://semgrep.dev/orgs/-/settings/general/code",children:"Settings > General > Code"})," page."]}),"\n",(0,r.jsxs)(n.li,{children:["Click the ",(0,r.jsx)(n.strong,{children:"Triage via code review comments"})," ",(0,r.jsx)("i",{class:"fa-solid fa-toggle-large-on"})," toggle to turn on this feature."]}),"\n"]}),(0,r.jsx)(n.h3,{id:"triage-a-finding-3",children:"Triage a finding"}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Find an open comment created by Semgrep AppSec Platform in your pull request or merge request:\n",(0,r.jsx)(n.img,{alt:"Screenshot of Semgrep AppSec Platform comment in GitLab",src:i(10872).A+"#md-width",width:"1342",height:"888"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["In a subsequent comment, reply with the corresponds with the action you want to take. If necessary, ensure that you substitute the colored placeholder ",(0,r.jsx)(n.code,{children:"<REASON>"})," with text to help the reader understand why the finding has been triaged as ",(0,r.jsx)(n.strong,{children:"ignored"}),":"]}),"\n",(0,r.jsx)(h,{}),"\n"]}),"\n"]}),(0,r.jsxs)(n.p,{children:["Triaging a finding as ",(0,r.jsx)(n.strong,{children:"Ignored"})," through a comment in GitLab changes the status of the finding to ",(0,r.jsx)(n.strong,{children:"Ignored"})," in Semgrep AppSec Platform. However, the GitLab conversation itself is ",(0,r.jsx)(n.strong,{children:"not"})," automatically resolved by this process."]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"triage-findings-in-bulk-through-the-semgrep-api",children:"Triage findings in bulk through the Semgrep API"}),"\n",(0,r.jsxs)(n.p,{children:["Semgrep provides an API endpoint you can use to triage findings in bulk, either by passing a list of ",(0,r.jsx)(n.code,{children:"issue_ids"})," or filter query parameters to select findings. You must also specify an ",(0,r.jsx)(n.code,{children:"issue_type"}),", such as ",(0,r.jsx)(n.code,{children:"sast"})," or ",(0,r.jsx)(n.code,{children:"sca"}),", and either  ",(0,r.jsx)(n.code,{children:"new_triage_state"})," or ",(0,r.jsx)(n.code,{children:"new_note"}),". Refer to ",(0,r.jsxs)(n.a,{href:"https://semgrep.dev/api/v1/docs/#tag/TriageService",children:[(0,r.jsx)("i",{class:"fas fa-external-link fa-xs"})," Bulk triage API documentation"]}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"reduce-the-number-of-false-positive-findings",children:"Reduce the number of false positive findings"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["One way to address false positives is to improve the rule. Create ",(0,r.jsx)(n.a,{href:"/docs/writing-rules/testing-rules",children:"test cases"})," to ensure that the rule performs as intended."]}),"\n",(0,r.jsxs)(n.li,{children:["If a rule authored by the Semgrep team, available on the Registry, is useful, but captures too many false positives, you can reach out to ",(0,r.jsx)(n.a,{href:"/support",children:"Support"}),". This helps Semgrep's rule-writing efforts and improves the quality of rules that you run."]}),"\n",(0,r.jsxs)(n.li,{children:["You can report rules with a high false positive rate from your source code manager (SCM) if you ",(0,r.jsx)(n.a,{href:"/category/pr-or-mr-comments",children:"enable Semgrep AppSec Platform to leave comments in PRs or MRs"}),". Semgrep AppSec Platform provides a link after each comment for users to indicate if the finding is a false positive."]}),"\n",(0,r.jsxs)(n.li,{children:["Semgrep Assistant's ",(0,r.jsx)(n.a,{href:"/semgrep-assistant/overview#noise-filtering-beta",children:"noise filtering"})," feature can minimize the number of false positives shown to developers."]}),"\n"]})]})}function b(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(j,{...e})}):j(e)}},58764:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/app-findings-triage-21b5c28425eae74f1f275972bf060132.png"},62464:(e,n,i)=>{i.d(n,{A:()=>w});var s=i(96540),r=i(34164),t=i(80052),o=i(56347),l=i(35793),a=i(99025),d=i(4430),c=i(44148);function h(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function g(e){const{values:n,children:i}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:i,attributes:s,default:r}}=e;return{value:n,label:i,attributes:s,default:r}}))}(i);return function(e){const n=(0,d.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,i])}function u(e){let{value:n,tabValues:i}=e;return i.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:i}=e;const r=(0,o.W6)(),t=function(e){let{queryString:n=!1,groupId:i}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:n,groupId:i});return[(0,a.aZ)(t),(0,s.useCallback)((e=>{if(!t)return;const n=new URLSearchParams(r.location.search);n.set(t,e),r.replace({...r.location,search:n.toString()})}),[t,r])]}function x(e){const{defaultValue:n,queryString:i=!1,groupId:r}=e,t=g(e),[o,a]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:i}=e;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!u({value:n,tabValues:i}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${i.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=i.find((e=>e.default))??i[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:t}))),[d,h]=p({queryString:i,groupId:r}),[x,m]=function(e){let{groupId:n}=e;const i=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,t]=(0,c.Dv)(i);return[r,(0,s.useCallback)((e=>{i&&t.set(e)}),[i,t])]}({groupId:r}),f=(()=>{const e=d??x;return u({value:e,tabValues:t})?e:null})();(0,l.A)((()=>{f&&a(f)}),[f]);return{selectedValue:o,selectValue:(0,s.useCallback)((e=>{if(!u({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);a(e),h(e),m(e)}),[h,m,t]),tabValues:t}}var m=i(75251);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=i(74848);function b(e){let{className:n,block:i,selectedValue:s,selectValue:o,tabValues:l}=e;const a=[],{blockElementScrollPositionUntilNextRender:d}=(0,t.a_)(),c=e=>{const n=e.currentTarget,i=a.indexOf(n),r=l[i].value;r!==s&&(d(n),o(r))},h=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const i=a.indexOf(e.currentTarget)+1;n=a[i]??a[0];break}case"ArrowLeft":{const i=a.indexOf(e.currentTarget)-1;n=a[i]??a[a.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":i},n),children:l.map((e=>{let{value:n,label:i,attributes:t}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>{a.push(e)},onKeyDown:h,onClick:c,...t,className:(0,r.A)("tabs__item",f.tabItem,t?.className,{"tabs__item--active":s===n}),children:i??n},n)}))})}function v(e){let{lazy:n,children:i,selectedValue:t}=e;const o=(Array.isArray(i)?i:[i]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===t));return e?(0,s.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function y(e){const n=x(e);return(0,j.jsxs)("div",{className:(0,r.A)("tabs-container",f.tabList),children:[(0,j.jsx)(b,{...n,...e}),(0,j.jsx)(v,{...n,...e})]})}function w(e){const n=(0,m.A)();return(0,j.jsx)(y,{...e,children:h(e.children)},String(n))}},73277:(e,n,i)=>{i.d(n,{Ay:()=>l,RM:()=>t});var s=i(74848),r=i(28453);const t=[];function o(e){const n={a:"a",li:"li",ol:"ol",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["On the Semgrep Code ",(0,s.jsx)(n.a,{href:"https://semgrep.dev/orgs/-/findings?tab=open",children:"Findings"})," page, click the ",(0,s.jsx)(n.strong,{children:"Status"})," filter, and then select the ",(0,s.jsx)(n.strong,{children:"Open"})," status to see all open findings."]}),"\n",(0,s.jsxs)(n.li,{children:["Next to a finding you want to ignore, click ",(0,s.jsx)(n.strong,{children:"Open"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Optional: Select ",(0,s.jsx)(n.strong,{children:"Ignore reason"}),". Choose either: ",(0,s.jsx)(n.strong,{children:"False positive"}),", ",(0,s.jsx)(n.strong,{children:"Acceptable risk"}),", ",(0,s.jsx)(n.strong,{children:"No time to fix"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Click ",(0,s.jsx)(n.strong,{children:"Done"}),"."]}),"\n"]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},76572:(e,n,i)=>{i.d(n,{Ay:()=>l,RM:()=>t});var s=i(74848),r=i(28453);const t=[];function o(e){const n={a:"a",admonition:"admonition",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"You can disable a specific rule or ruleset to prevent Semgrep Code from using it when scanning your codebase."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"When you disable a rule, existing findings from that rule remains open until you re-scan your code."})}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsxs)("summary",{children:["Disable rules using the ",(0,s.jsx)("b",{children:"Policies"})," page"]}),(0,s.jsxs)(n.p,{children:["To disable a ",(0,s.jsx)(n.strong,{children:"rule"}),", follow these steps:"]}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["On the ",(0,s.jsx)(n.strong,{children:"Policies"})," page, select either:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The top ",(0,s.jsxs)(n.strong,{children:[(0,s.jsx)("span",{className:"placeholder",children:"Number"})," Matching Rules"]})," checkbox to select all rules."]}),"\n",(0,s.jsx)(n.li,{children:"Select individual checkboxes next to a rule to disable rules one by one."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Click ",(0,s.jsxs)(n.strong,{children:["(",(0,s.jsx)("span",{className:"placeholder",children:"Number"}),") Edit"]}),", and then click ",(0,s.jsx)(n.strong,{children:"Disabled"}),"."]}),"\n"]}),(0,s.jsxs)(n.p,{children:["You can also select individual rules under the ",(0,s.jsx)(n.strong,{children:"Mode"})," column and disable them one by one."]}),(0,s.jsxs)(n.p,{children:["To disable a ",(0,s.jsx)(n.strong,{children:"ruleset"})," using the Policies page:"]}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["In Semgrep AppSec Platform, click ",(0,s.jsxs)("b",{children:["Rules > ",(0,s.jsx)(n.a,{href:"https://semgrep.dev/orgs/-/policies",children:"Policies"})]}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["From the ",(0,s.jsx)(n.strong,{children:"Ruleset"})," drop-down box, click the ruleset to remove."]}),"\n",(0,s.jsxs)(n.li,{children:["Click the ",(0,s.jsx)("i",{class:"fas fa-check-square"})," ",(0,s.jsx)(n.strong,{children:"Matching rules"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Click ",(0,s.jsx)(n.strong,{children:"Change modes > Disabled"}),"."]}),"\n"]})]}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsxs)("summary",{children:["Disable a rule using the ",(0,s.jsx)("b",{children:"Findings"})," page while in ",(0,s.jsx)("b",{children:"Group by rule"})," view"]}),(0,s.jsxs)(n.p,{children:["Follow these steps to remove a rule in the ",(0,s.jsx)(n.strong,{children:"Group by rule"})," view:"]}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Go to the Semgrep AppSec Platform ",(0,s.jsx)(n.a,{href:"https://semgrep.dev/orgs/-/findings?tab=open",children:"Findings"})," page."]}),"\n",(0,s.jsxs)(n.li,{children:["Next to a finding with status ",(0,s.jsx)(n.strong,{children:"Open"}),", click ",(0,s.jsxs)(n.strong,{children:[(0,s.jsx)("i",{class:"fa-solid fa-window-restore"})," Details"]}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Click ",(0,s.jsx)(n.strong,{children:"Open > Disable rule..."}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Click the ",(0,s.jsx)(n.strong,{children:"Disable from policy"})," checkbox."]}),"\n",(0,s.jsxs)(n.li,{children:["Click ",(0,s.jsx)(n.strong,{children:"Ignore"}),"."]}),"\n"]})]}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsxs)("summary",{children:["Disable a rule using the ",(0,s.jsx)("b",{children:"Findings"})," page while in ",(0,s.jsx)("b",{children:"No grouping"})," view"]}),(0,s.jsxs)(n.p,{children:["To remove a rule in the ",(0,s.jsx)(n.strong,{children:"No grouping"})," view, perform the following steps:"]}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Go to the Semgrep AppSec Platform ",(0,s.jsx)(n.a,{href:"https://semgrep.dev/orgs/-/findings?tab=open",children:"Findings"})," page."]}),"\n",(0,s.jsxs)(n.li,{children:["Next to a finding with status ",(0,s.jsx)(n.strong,{children:"Open"}),", click ",(0,s.jsx)(n.strong,{children:"Open > Disable rule... > Disable from policy"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Click ",(0,s.jsx)(n.strong,{children:"Ignore"}),"."]}),"\n"]})]})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},78609:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/bb-triage-by-pr-b3b2e10b77d9149a44ac8e811814e5ec.png"},81273:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/semgrep-app-comment-github-beta-60a515fe87feaa9d54a84c22cb8c7971.png"},90422:(e,n,i)=>{i.d(n,{Ay:()=>l,RM:()=>t});var s=i(74848),r=i(28453);const t=[{value:"Removed findings",id:"removed-findings",level:3},{value:"Triage behavior across refs and branches",id:"triage-behavior-across-refs-and-branches",level:3}];function o(e){const n={a:"a",code:"code",em:"em",h3:"h3",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Status"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Open"})}),(0,s.jsx)(n.td,{children:"Findings are open by default. A finding is open if it was present the last time Semgrep scanned the code and has not been ignored. An open finding represents a match between the code and a rule enabled in the repository. Open findings require action, such as rewriting the code to eliminate the detected vulnerability."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Reviewing"})}),(0,s.jsx)(n.td,{children:"Indicates that the finding requires investigation to determine what the next steps in the triage process should be."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Fixing"})}),(0,s.jsx)(n.td,{children:"Findings for which you have decided to fix. Commonly used to indicate that these findings are tracked in Jira or assigned to developers for further work."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Fixed"})}),(0,s.jsx)(n.td,{children:"Fixed findings were detected in a previous scan but are no longer detected in the most recent scan of that same branch due to changes in the code."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Ignored"})}),(0,s.jsxs)(n.td,{children:["Findings that are ignored are present in the code but have been labeled as unimportant. Ignore findings that are false positives or deprioritized issues. Mark findings as ",(0,s.jsx)(n.a,{href:"/semgrep-code/triage-remediation",children:"ignored through Semgrep AppSec Platform"})," or by adding a ",(0,s.jsx)(n.a,{href:"/ignoring-files-folders-code/#reference-summary",children:"nosemgrep code comment"}),". You can also provide a reason for why you are ignoring a finding: ",(0,s.jsx)(n.strong,{children:"False positive"}),", ",(0,s.jsx)(n.strong,{children:"Acceptable risk"}),", ",(0,s.jsx)(n.strong,{children:"No time to fix"}),"."]})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"removed-findings",children:"Removed findings"}),"\n",(0,s.jsxs)(n.p,{children:["Findings can also be ",(0,s.jsx)(n.strong,{children:"removed"}),". Semgrep considers a finding removed if it is not found in the most recent scan of the branch where Semgrep initially detected it due to any of the following conditions:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The rule that detected the finding isn't enabled in the policy anymore."}),"\n",(0,s.jsx)(n.li,{children:"The rule that detected the finding was updated such that it no longer detects the finding."}),"\n",(0,s.jsxs)(n.li,{children:["The file path where the finding appeared is no longer found. The file path was deleted, renamed, added to a ",(0,s.jsx)(n.code,{children:".semgrepignore"})," file, added to a ",(0,s.jsx)(n.code,{children:".gitignore"})," file, or added to the list of ignored paths in Semgrep AppSec Platform."]}),"\n",(0,s.jsx)(n.li,{children:"For GitHub organization accounts: the PR or MR where the finding was detected has been closed without merging."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Your removed findings do not count toward the fix rate or the number of findings. The removed findings also do not appear in Semgrep AppSec Platform."}),"\n",(0,s.jsx)(n.h3,{id:"triage-behavior-across-refs-and-branches",children:"Triage behavior across refs and branches"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["When you triage a finding as ignored, reviewing, fixing, or reopened, Semgrep always triages across other branches and ",(0,s.jsx)(n.a,{href:"https://git-scm.com/book/en/v2/Git-Internals-Git-References",children:"Git references"})," (refs)."]}),"\n",(0,s.jsxs)(n.li,{children:["At scan time, there's automatic triaging that occurs in specific cases, and the behavior changes depending on the type of scan:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Full scans"}),": if the current branch includes a finding that was","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Previously introduced in another branch ",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"and"})})]}),"\n",(0,s.jsx)(n.li,{children:"Triaged to a specific state\nThen the finding in the current branch is triaged to that same state."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Diff-aware scan"}),": findings introduced in a diff-aware scan are ",(0,s.jsx)(n.strong,{children:"not"})," automatically triaged at scan time, even if there are other instances of that finding on branches that have been triaged."]}),"\n"]}),"\n"]}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}}}]);