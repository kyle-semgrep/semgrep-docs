"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[26117],{11589:(e,s,r)=>{r.d(s,{Ay:()=>o,RM:()=>i});var t=r(74848),n=r(28453);const i=[];function a(e){const s={code:"code",li:"li",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Confirmed valid:"})," Semgrep made an HTTP request using the secret, and it returned an HTTP status code of 200 or similar ",(0,t.jsx)(s.strong,{children:"and"})," some indication of valid access. For example, a service can include a ",(0,t.jsx)(s.code,{children:'"message": "ok"'})," in the response body."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Confirmed invalid:"})," Semgrep made an HTTP request using the secret and it returned an HTTP status code of 401 or similar."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Validation error:"})," Semgrep made an HTTP request using the secret, but either the network request could not be made, a timeout occurred, or the HTTP status code returned a different HTTP status code. In this case, the Semgrep Team recommends manually reviewing the finding."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"No Validator:"})," The rule does not have a validator. The Semgrep Team recommends manually reviewing the finding."]}),"\n"]})}function o(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>a,x:()=>o});var t=r(96540);const n={},i=t.createContext(n);function a(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),t.createElement(i.Provider,{value:s},e.children)}},41543:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"semgrep-secrets/conceptual-overview","title":"Overview","description":"Learn how Semgrep Secrets detects leaked secrets and helps you prioritize what keys to rotate.","source":"@site/docs/semgrep-secrets/conceptual-overview.md","sourceDirName":"semgrep-secrets","slug":"/semgrep-secrets/conceptual-overview","permalink":"/semgrep-docs/semgrep-secrets/conceptual-overview","draft":false,"unlisted":false,"editUrl":"https://github.com/kyle-semgrep/semgrep-docs/edit/main?base=kyle-semgrep:main/docs/semgrep-secrets/conceptual-overview.md","tags":[{"inline":true,"label":"Semgrep Secrets","permalink":"/semgrep-docs/tags/semgrep-secrets"}],"version":"current","lastUpdatedAt":1752254305000,"frontMatter":{"slug":"/semgrep-secrets/conceptual-overview","append_help_link":true,"title":"Overview","hide_title":true,"description":"Learn how Semgrep Secrets detects leaked secrets and helps you prioritize what keys to rotate.","tags":["Semgrep Secrets"]},"sidebar":"scanSidebar","previous":{"title":"Detect and remove malicious dependencies","permalink":"/semgrep-docs/semgrep-supply-chain/malicious-dependencies"},"next":{"title":"Scan for secrets","permalink":"/semgrep-docs/semgrep-secrets/getting-started"}}');var n=r(74848),i=r(28453),a=r(11589);const o={slug:"/semgrep-secrets/conceptual-overview",append_help_link:!0,title:"Overview",hide_title:!0,description:"Learn how Semgrep Secrets detects leaked secrets and helps you prioritize what keys to rotate.",tags:["Semgrep Secrets"]},c="Semgrep Secrets overview",l={},d=[{value:"How Semgrep Secrets works",id:"how-semgrep-secrets-works",level:2},{value:"Detect secrets through regex",id:"detect-secrets-through-regex",level:3},{value:"Detect secrets through semantic analysis",id:"detect-secrets-through-semantic-analysis",level:3},{value:"Validate secrets",id:"validate-secrets",level:3},...a.RM,{value:"Fine-tune findings through entropy analysis",id:"fine-tune-findings-through-entropy-analysis",level:3},{value:"Next steps",id:"next-steps",level:2}];function h(e){const s={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"semgrep-secrets-overview",children:"Semgrep Secrets overview"})}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Semgrep Secrets"})," scans code to detect exposed API keys, passwords, and other\ncredentials. When exposed, these can be used by malicious actors to leak data\nor gain access to sensitive systems. Semgrep Secrets allows you to determine:"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"What secrets have been committed to your repository."}),"\n",(0,n.jsxs)(s.li,{children:["The validation status of the secret; for example, ",(0,n.jsx)(s.strong,{children:"valid"})," secrets are those that have been tested against a web service and\nconfirmed to successfully grant resources or authentication. They are actively\nin use."]}),"\n",(0,n.jsx)(s.li,{children:"For GitHub repositories: if there are credentials in public or private repositories."}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Semgrep saves security engineers time and effort by prioritizing valid leaked secrets and informs developers of valid secrets in their PRs and MRs by posting comments directly."}),"\n",(0,n.jsx)(s.h2,{id:"how-semgrep-secrets-works",children:"How Semgrep Secrets works"}),"\n",(0,n.jsx)(s.p,{children:"To ensure that findings are high-signal, comprehensive, and easy for users to\nprioritize, a Semgrep Secrets scan performs the following:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Search using regex"}),"\n",(0,n.jsx)(s.li,{children:"Semantic analysis"}),"\n",(0,n.jsx)(s.li,{children:"Validation"}),"\n",(0,n.jsx)(s.li,{children:"Entropy analysis"}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"The following sections explain how each step works."}),"\n",(0,n.jsx)(s.h3,{id:"detect-secrets-through-regex",children:"Detect secrets through regex"}),"\n",(0,n.jsx)(s.p,{children:"Semgrep Secrets uses a regex language detector to find secrets in various file types. This is done by detecting a commonly defined prefix and then searching for the secret using its expected length and format."}),"\n",(0,n.jsx)(s.p,{children:"To reduce the number of false positives this process raises, Semgrep uses and combines as many of the following processes with its search using regex when possible:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Removal of results that are likely to be false positives"}),"\n",(0,n.jsx)(s.li,{children:"Validation"}),"\n",(0,n.jsx)(s.li,{children:"Entropy analysis"}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"detect-secrets-through-semantic-analysis",children:"Detect secrets through semantic analysis"}),"\n",(0,n.jsx)(s.p,{children:"Semantic analysis refers to Semgrep Secrets' ability to understand how data is\nused within your code. This differentiates Semgrep Secrets from regex-based\ndetectors that simply define a pattern to match a piece of code."}),"\n",(0,n.jsxs)(s.p,{children:["Semgrep Secrets uses several mechanisms to perform semantic analysis. It uses\n",(0,n.jsxs)(s.a,{href:"/writing-rules/data-flow/data-flow-overview",children:[(0,n.jsx)("i",{class:"fa-regular fa-file-lines"})," data-flow\nanalysis"]})," and ",(0,n.jsxs)(s.a,{href:"/writing-rules/data-flow/constant-propagation",children:[(0,n.jsx)("i",{class:"fa-regular fa-file-lines"})," constant\npropagation"]})," which means that it\nis able to track data, such as variables, and the flow of that data across files\nand functions in your codebase."]}),"\n",(0,n.jsxs)(s.p,{children:["Performing semantic analysis is encapsulated in ",(0,n.jsxs)(s.a,{href:"/running-rules",children:[(0,n.jsx)("i",{class:"fa-regular\nfa-file-lines"})," rules"]}),". By running these rules, Semgrep\nSecrets is able to detect if a variable is renamed,\nreassigned, or used in a function in such a way that a secret is exposed."]}),"\n",(0,n.jsx)(s.p,{children:"See the following rule and JavaScript test code for an example."}),"\n",(0,n.jsx)("iframe",{title:"AWS hardcoded access key",src:"https://semgrep.dev/embed/editor?snippet=EPj5",width:"100%",height:"432px",frameBorder:"0"}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(s.h3,{id:"validate-secrets",children:"Validate secrets"}),"\n",(0,n.jsxs)(s.p,{children:["After scanning your codebase, Semgrep Secrets uses a proprietary\n",(0,n.jsx)(s.strong,{children:"validator"})," to determine if a secret is actively being used or some other state if there is a validator defined in the rule used."]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsxs)(s.p,{children:["All validations, such as API calls, are done ",(0,n.jsx)(s.strong,{children:"locally"})," in your environment. No tokens are sent to Semgrep servers."]})}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsx)(s.li,{children:"The validator detects the service, such as Slack or AWS, that the secret\nis used for."}),"\n",(0,n.jsxs)(s.li,{children:["If the validator doesn't support the service that the secret is used\nfor, Semgrep notes that there is ",(0,n.jsx)(s.strong,{children:"No validator"})," finding for the secret."]}),"\n",(0,n.jsxs)(s.li,{children:["Semgrep Secrets performs an API\ncall if the validator supports the service. The following outcomes can occur:","\n",(0,n.jsx)(a.Ay,{}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"By performing this validation check, you can prioritize and triage the most\nhigh-priority, active findings."}),"\n",(0,n.jsx)(s.admonition,{type:"note",children:(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["For a list of all supported detectors that Semgrep offers, see the ",(0,n.jsx)(s.a,{href:"/semgrep-secrets/policies",children:"Policies"})," page in your deployment."]}),"\n",(0,n.jsxs)(s.li,{children:["See ",(0,n.jsx)(s.a,{href:"/semgrep-secrets/validators",children:"Validators"})," for syntax and examples."]}),"\n"]})}),"\n",(0,n.jsx)(s.h3,{id:"fine-tune-findings-through-entropy-analysis",children:"Fine-tune findings through entropy analysis"}),"\n",(0,n.jsxs)(s.p,{children:["Entropy is the measure of a ",(0,n.jsx)(s.strong,{children:"string's randomness"}),". It's used to measure how\nlikely a string is random. If a string is highly entropic, it's highly\nrandom. For certain types of secrets, such as API keys, randomness indicates\nthat a string could be a secret. By performing entropy analysis, Semgrep Secrets\ncan reduce false positives and produce more true positives."]}),"\n",(0,n.jsx)(s.p,{children:"Examples of high-entropy (random) strings:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"VERZVs+/nd56Z+/Qxy1mzEqqBwUS1l9D4YbqmPoO\xdf\n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\n"})}),"\n",(0,n.jsx)(s.p,{children:"Examples of low-entropy strings:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"XXXXXX\ntxtPassword1\n"})}),"\n",(0,n.jsx)(s.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,n.jsxs)(s.p,{children:["See ",(0,n.jsxs)(s.a,{href:"/semgrep-secrets/getting-started",children:[(0,n.jsx)("i",{class:"fa-regular fa-file-lines"})," Scan for secrets"]})," to learn how to:"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Enable secrets scanning for your repositories"}),"\n",(0,n.jsxs)(s.li,{children:["Manage the rules in your ",(0,n.jsx)(s.a,{href:"/semgrep-secrets/policies",children:"policy"})," to control how your scan runs."]}),"\n",(0,n.jsx)(s.li,{children:"View and triage secrets-related findings"}),"\n",(0,n.jsx)(s.li,{children:"Receive notifications and post tickets whenever Semgrep Secrets identifies issues"}),"\n",(0,n.jsxs)(s.li,{children:["Write ",(0,n.jsx)(s.a,{href:"/semgrep-secrets/rules",children:"custom rules"})," with ",(0,n.jsx)(s.a,{href:"/semgrep-secrets/validators",children:"validators"})," to find bespoke secrets"]}),"\n"]})]})}function p(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);