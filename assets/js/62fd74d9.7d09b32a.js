"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[80725],{3359:(e,i,n)=>{n.d(i,{Ay:()=>o,RM:()=>r});var s=n(74848),t=n(28453);const r=[];function d(e){const i={admonition:"admonition",em:"em",img:"img",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(i.admonition,{type:"tip",children:[(0,s.jsx)(i.mdxAdmonitionTitle,{}),(0,s.jsx)(i.p,{children:"Quickly view all the findings your organization has fixed in a previous time period, such as a quarter or half-year, by using this filter."})]}),"\n",(0,s.jsxs)(i.p,{children:["The time period filter allows you to see which vulnerabilities were opened, fixed, or triaged during a certain period of time. The time period filter is ",(0,s.jsx)(i.strong,{children:"not"})," additive; it is a filter operation that precedes other filters on the page. For example, if you select ",(0,s.jsx)(i.strong,{children:"Last triaged"})," and select the status ",(0,s.jsx)(i.strong,{children:"Status Open"})," filter, no findings appear because, by definition, there are no triaged findings that are also open."]}),"\n",(0,s.jsx)(i.p,{children:"The following filters are available:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Triage state:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Last opened"}),"\n",(0,s.jsx)(i.li,{children:"Last triaged"}),"\n",(0,s.jsx)(i.li,{children:"Last fixed"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Time period:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Last day"}),"\n",(0,s.jsx)(i.li,{children:"Last 7 days"}),"\n",(0,s.jsx)(i.li,{children:"Last 30 days"}),"\n",(0,s.jsx)(i.li,{children:"Last 3 months"}),"\n",(0,s.jsx)(i.li,{children:"Last 6 months"}),"\n",(0,s.jsx)(i.li,{children:"Last year"}),"\n",(0,s.jsx)(i.li,{children:"All time"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.img,{alt:"Time period and status filters",src:n(35193).A+"#sm-width",width:"1188",height:"710"}),"\n",(0,s.jsxs)(i.em,{children:[(0,s.jsx)(i.strong,{children:"Figure"}),". Time period and status filters."]})]})]})}function o(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},11745:(e,i,n)=>{n.d(i,{Ay:()=>o,RM:()=>r});var s=n(74848),t=n(28453);const r=[{value:"Get cross-file findings",id:"get-cross-file-findings",level:3}];function d(e){const i={a:"a",code:"code",em:"em",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(i.p,{children:["With ",(0,s.jsx)(i.strong,{children:"dataflow traces"}),", Semgrep Code can provide you with a visualization of\nthe path of tainted, or untrusted, data in specific findings. This path can help\nyou track the sources and sinks of the tainted data as they propagate through\nthe body of a function or a method. For general information about taint\nanalysis, see ",(0,s.jsx)(i.a,{href:"/writing-rules/data-flow/taint-mode",children:"Taint tracking"}),"."]}),"\n",(0,s.jsxs)(i.p,{children:["When running Semgrep Code from the command line, you can pass in the flag\n",(0,s.jsx)(i.code,{children:"--dataflow-traces"})," to use this feature."]}),"\n",(0,s.jsx)(i.p,{children:"You can view dataflow traces in:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Semgrep AppSec Platform by going to Semgrep Code's ",(0,s.jsx)(i.a,{href:"https://semgrep.dev/orgs/-/findings?tab=open",children:"Findings page"}),". For more details, see ",(0,s.jsx)(i.a,{href:"/semgrep-code/semgrep-pro-engine-data-flow",children:"Path of tainted data in Semgrep\nCode"}),"."]}),"\n",(0,s.jsxs)(i.li,{children:["The PR or MR comments created by Semgrep Code running in your CI/CD system. To enable\nthis feature, see:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.em,{children:"GitHub users"}),": ",(0,s.jsx)(i.a,{href:"/semgrep-appsec-platform/github-pr-comments/#view-the-path-of-tainted-data-in-pr-comments",children:"Dataflow traces in PR\ncomments"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.em,{children:"GitLab users"}),": ",(0,s.jsx)(i.a,{href:"/semgrep-appsec-platform/gitlab-mr-comments/#view-the-path-of-tainted-data-in-mr-comments",children:"Dataflow traces in MR\ncomments"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"get-cross-file-findings",children:"Get cross-file findings"}),"\n",(0,s.jsxs)(i.p,{children:["To get cross-file (interfile) findings in your organization, follow the steps in ",(0,s.jsxs)(i.a,{href:"/semgrep-code/semgrep-pro-engine-intro",children:[(0,s.jsx)("i",{class:"fa-regular fa-file-lines"})," Perform cross-file analysis"]}),"."]})]})}function o(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},13543:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/cloud-platform-findings-group-by-rule-view-details-a44d25e98803225d090f500436bf160e.png"},23437:(e,i,n)=>{n.d(i,{Ay:()=>o,RM:()=>r});var s=n(74848),t=n(28453);const r=[];function d(e){const i={a:"a",code:"code",em:"em",img:"img",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components},{Details:r}=i;return r||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(i.p,{children:["You can export findings to a ",(0,s.jsx)(i.strong,{children:"CSV"})," file. Semgrep can export up to ",(0,s.jsx)(i.strong,{children:"10,000 most recent findings"}),". To export more than 10,000 findings, you must use the ",(0,s.jsxs)(i.a,{href:"https://semgrep.dev/api/v1/docs/",children:[(0,s.jsx)("i",{class:"fas fa-external-link fa-xs"})," API"]}),"."]}),"\n",(0,s.jsx)(i.p,{children:"Semgrep exports all findings to the CSV file regardless of the filters you apply on the page."}),"\n",(0,s.jsxs)(i.p,{children:["Export findings by navigating to the product page and clicking the ",(0,s.jsxs)(i.strong,{children:[(0,s.jsx)("i",{class:"fa-regular fa-download"})," icon"]})," near the time filters."]}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.img,{alt:"The download findings CSV button",src:n(96598).A+"#md-width",width:"1034",height:"240"}),"\n",(0,s.jsxs)(i.em,{children:[(0,s.jsx)(i.strong,{children:"Figure"}),". The download findings CSV button."]})]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Click to view a description of fields included in the CSV."}),(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Id"}),(0,s.jsx)(i.td,{children:"The unique ID number of the finding."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Rule name"}),(0,s.jsx)(i.td,{children:"The name of the rule."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Product"}),(0,s.jsxs)(i.td,{children:["The Semgrep product. Possible values are ",(0,s.jsx)(i.strong,{children:"Code"}),", ",(0,s.jsx)(i.strong,{children:"Supply Chain"}),", or ",(0,s.jsx)(i.strong,{children:"Secrets"}),"."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Severity"}),(0,s.jsxs)(i.td,{children:["The finding's severity. Possible values are ",(0,s.jsx)(i.strong,{children:"Critical"}),", ",(0,s.jsx)(i.strong,{children:"High"}),", ",(0,s.jsx)(i.strong,{children:"Medium"}),", or ",(0,s.jsx)(i.strong,{children:"Low"}),"."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Status"}),(0,s.jsx)(i.td,{children:"The finding's triage status."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Assistant component"}),(0,s.jsxs)(i.td,{children:["A descriptor, such as ",(0,s.jsx)(i.code,{children:"API"}),", ",(0,s.jsx)(i.code,{children:"Payments processing"}),", ",(0,s.jsx)(i.code,{children:"Infrastructure"}),", that Assistant tags the finding with, based on the code's context."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Repository name"}),(0,s.jsx)(i.td,{children:"The name of the repository where Semgrep found the finding."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Repository URL"}),(0,s.jsx)(i.td,{children:"The repository URL."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Line of code URL"}),(0,s.jsx)(i.td,{children:"The URL to the specific line of code where the finding match began. A finding may be several lines long."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Semgrep platform link"}),(0,s.jsxs)(i.td,{children:["A link to the finding's ",(0,s.jsx)(i.strong,{children:"Details"})," page in Semgrep AppSec Platform."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Created at"}),(0,s.jsx)(i.td,{children:"The time the finding was created in your timezone."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Last Opened at"}),(0,s.jsx)(i.td,{children:"The time the finding was last opened."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Branch"}),(0,s.jsx)(i.td,{children:"The name of the branch where the finding was detected."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Triaged at"}),(0,s.jsx)(i.td,{children:"The most recent time that the finding was triaged."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Triage comment"}),(0,s.jsx)(i.td,{children:"A triage comment created by the user."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Triage reason"}),(0,s.jsx)(i.td,{children:"The reason why the finding was triaged, created by the user."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Rule description"}),(0,s.jsxs)(i.td,{children:["The description of the rule. This is the same as the rule's ",(0,s.jsx)(i.code,{children:"message"})," key."]})]})]})]}),(0,s.jsxs)(i.p,{children:["The following fields are exclusive to ",(0,s.jsx)(i.strong,{children:"Code"})," scans:"]}),(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Confidence"}),(0,s.jsxs)(i.td,{children:["The finding's confidence. Possible values are ",(0,s.jsx)(i.strong,{children:"High"}),", ",(0,s.jsx)(i.strong,{children:"Medium"}),", or ",(0,s.jsx)(i.strong,{children:"Low"}),". ",(0,s.jsx)("br",{}),"Only Semgrep Supply Chain and Code findings provide this field."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Category"}),(0,s.jsxs)(i.td,{children:["The finding's category, such as ",(0,s.jsx)(i.strong,{children:"best practices"}),", ",(0,s.jsx)(i.strong,{children:"security"}),", or ",(0,s.jsx)(i.strong,{children:"correctness"}),"."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Is pro rule"}),(0,s.jsxs)(i.td,{children:["Boolean value that returns ",(0,s.jsx)(i.code,{children:"TRUE"})," if the rule that generated the finding is a pro rule."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Assistant triage result"}),(0,s.jsxs)(i.td,{children:["Provides Semgrep Assistant's assessment. Possible values are ",(0,s.jsx)(i.code,{children:"True positive"})," or ",(0,s.jsx)(i.code,{children:"False positive"}),". These values appear only if Assistant is enabled."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Assistant triage reason"}),(0,s.jsx)(i.td,{children:"A short AI-generated reason why Assistant thinks the finding is a true or false positive. These values appear only if Assistant is enabled."})]})]})]}),(0,s.jsxs)(i.p,{children:["The following fields are exclusive to ",(0,s.jsx)(i.strong,{children:"Supply Chain"})," scans:"]}),(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Dependency"}),(0,s.jsx)(i.td,{children:"The name of the dependency where the findings was found."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Reachability"}),(0,s.jsxs)(i.td,{children:["The reachability status of the finding, such as ",(0,s.jsx)(i.strong,{children:"Reachable"}),", ",(0,s.jsx)(i.strong,{children:"No Reachability Analysis"}),", or ",(0,s.jsx)(i.strong,{children:"Unreachable"}),"."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Transitivity"}),(0,s.jsx)(i.td,{children:"States whether the finding originates from a direct or transitive dependency."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"CVE"}),(0,s.jsx)(i.td,{children:"The CVE number that the finding is assigned to."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"EPSS"}),(0,s.jsx)(i.td,{children:"The EPSS score, which estimates the likelihood that a software vulnerability can be exploited in the wild."})]})]})]}),(0,s.jsxs)(i.p,{children:["The following fields are exclusive to ",(0,s.jsx)(i.strong,{children:"Secrets"})," scans:"]}),(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Secret type"}),(0,s.jsxs)(i.td,{children:["Possible values include ",(0,s.jsx)(i.strong,{children:"AI-detected"}),", ",(0,s.jsx)(i.strong,{children:"Generic secret"}),", ",(0,s.jsx)(i.strong,{children:"Connection URI"}),", and so on."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Validation"}),(0,s.jsx)(i.td,{children:"States whether or not the secret was validated."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Project visibility"}),(0,s.jsxs)(i.td,{children:["States whether the project (repository) is public or private. This feature supports GitHub-hosted repositories only. It returns an ",(0,s.jsx)(i.strong,{children:"Unknown"})," value for non-GitHub SCMs."]})]})]})]})]})]})}function o(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},23550:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/findings-security-badge-56a10b26d1882f62d6f84d033455999f.png"},27743:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>p,contentTitle:()=>g,default:()=>j,frontMatter:()=>h,metadata:()=>s,toc:()=>f});const s=JSON.parse('{"id":"semgrep-code/findings","title":"View findings","description":"The Code page allows users to view findings identified by Semgrep Code.","source":"@site/docs/semgrep-code/findings.md","sourceDirName":"semgrep-code","slug":"/semgrep-code/findings","permalink":"/semgrep-docs/semgrep-code/findings","draft":false,"unlisted":false,"editUrl":"https://github.com/kyle-semgrep/semgrep-docs/edit/main/docs/semgrep-code/findings.md","tags":[{"inline":true,"label":"Semgrep Code","permalink":"/semgrep-docs/tags/semgrep-code"},{"inline":true,"label":"Semgrep AppSec Platform","permalink":"/semgrep-docs/tags/semgrep-app-sec-platform"}],"version":"current","lastUpdatedAt":1752262761000,"frontMatter":{"slug":"findings","append_help_link":true,"title":"View findings","description":"The Code page allows users to view findings identified by Semgrep Code.","hide_title":true,"toc_max_heading_level":5,"tags":["Semgrep Code","Semgrep AppSec Platform"]},"sidebar":"scanSidebar","previous":{"title":"Overview","permalink":"/semgrep-docs/semgrep-code/overview"},"next":{"title":"View findings","permalink":"/semgrep-docs/semgrep-code/findings"}}');var t=n(74848),r=n(28453),d=n(11745),o=n(43672),l=n(54016),a=n(3359),c=n(23437);const h={slug:"findings",append_help_link:!0,title:"View findings",description:"The Code page allows users to view findings identified by Semgrep Code.",hide_title:!0,toc_max_heading_level:5,tags:["Semgrep Code","Semgrep AppSec Platform"]},g="View findings in Semgrep AppSec Platform",p={},f=[{value:"Navigate to the Production and Pre-production backlogs",id:"navigate-to-the-production-and-pre-production-backlogs",level:2},{value:"Page structure",id:"page-structure",level:2},{value:"Group findings",id:"group-findings",level:3},{value:"Time period and triage",id:"time-period-and-triage",level:3},...a.RM,{value:"Default page view",id:"default-page-view",level:3},...l.RM,{value:"Export findings",id:"export-findings",level:3},...c.RM,{value:"Filter findings",id:"filter-findings",level:3},{value:"Finding categories",id:"finding-categories",level:4},{value:"View details about a specific finding",id:"view-details-about-a-specific-finding",level:3},{value:"Add notes to findings",id:"add-notes-to-findings",level:4},{value:"Dataflow traces",id:"dataflow-traces",level:2},...d.RM,{value:"View dataflow traces",id:"view-dataflow-traces",level:3},...o.RM,{value:"Data retention",id:"data-retention",level:2},{value:"Further reading",id:"further-reading",level:2}];function x(e){const i={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"view-findings-in-semgrep-appsec-platform",children:"View findings in Semgrep AppSec Platform"})}),"\n",(0,t.jsxs)(i.p,{children:["Semgrep Code generates a ",(0,t.jsx)(i.strong,{children:"finding"})," when a rule matches a piece of code in your codebase. You can use Semgrep AppSec Platform's ",(0,t.jsxs)(i.a,{href:"https://semgrep.dev/orgs/-/findings",children:[(0,t.jsx)(i.strong,{children:"Code > Production backlog"})," page"]})," to view all of the findings generated by Semgrep Code after it scans your codebase."]}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.img,{alt:"Semgrep AppSec Platform&#39;s Production backlog page",src:n(95921).A+"",width:"2704",height:"1570"}),"\n",(0,t.jsxs)(i.em,{children:[(0,t.jsx)(i.strong,{children:"Figure"}),". Semgrep AppSec Platform's Production backlog page."]})]}),"\n",(0,t.jsxs)(i.p,{children:["Semgrep Assistant users can also view the ",(0,t.jsx)(i.a,{href:"https://semgrep.dev/orgs/-/findings?tab=open&last_opened=All+time&backlog=preprod",children:(0,t.jsx)(i.strong,{children:"Pre-production"})})," list of findings. This beta feature allows users to see the findings that have been ",(0,t.jsx)(i.a,{href:"/semgrep-assistant/customize#noise-filtering",children:"filtered out by Assistant"})," for auditing purposes."]}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.img,{alt:"Semgrep AppSec Platform&#39;s Pre-production backlog page",src:n(64368).A+"",width:"2686",height:"1610"}),"\n",(0,t.jsxs)(i.em,{children:[(0,t.jsx)(i.strong,{children:"Figure"}),".Semgrep AppSec Platform's Pre-production backlog page."]})]}),"\n",(0,t.jsx)(i.h2,{id:"navigate-to-the-production-and-pre-production-backlogs",children:"Navigate to the Production and Pre-production backlogs"}),"\n",(0,t.jsx)(i.p,{children:"To view your findings in the Production backlog:"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:["Log in to ",(0,t.jsx)(i.a,{href:"https://semgrep.dev/login",children:"Semgrep AppSec Platform"}),"."]}),"\n",(0,t.jsxs)(i.li,{children:["Click ",(0,t.jsx)(i.strong,{children:(0,t.jsx)(i.a,{href:"https://semgrep.dev/orgs/-/findings",children:"Code"})}),"."]}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"To view your findings in the Pre-production backlog:"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:["Log in to ",(0,t.jsx)(i.a,{href:"https://semgrep.dev/login",children:"Semgrep AppSec Platform"}),"."]}),"\n",(0,t.jsxs)(i.li,{children:["Click ",(0,t.jsx)(i.strong,{children:(0,t.jsx)(i.a,{href:"https://semgrep.dev/orgs/-/findings?tab=open&last_opened=All+time&backlog=preprod",children:"Code > Pre-production"})}),"."]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"page-structure",children:"Page structure"}),"\n",(0,t.jsx)(i.p,{children:"The page structure of the Production backlog and Pre-production tabs are identical. These pages consist of:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["The ",(0,t.jsx)(i.strong,{children:"top bar"}),", where you can set the page's grouping view and ",(0,t.jsx)(i.a,{href:"#time-period-and-triage",children:"time period"}),"."]}),"\n",(0,t.jsxs)(i.li,{children:["The ",(0,t.jsx)(i.strong,{children:"filter panel"}),", which you can use to group and filter for specific findings."]}),"\n",(0,t.jsxs)(i.li,{children:["Information about findings identified by Semgrep Code. Each finding in the list includes:","\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"The name and description of the rule used to generate the finding."}),"\n",(0,t.jsx)(i.li,{children:"The name of the project."}),"\n",(0,t.jsx)(i.li,{children:"A link to the commit where the finding was first identified."}),"\n",(0,t.jsx)(i.li,{children:"A link to the lines of code where the finding was most recently seen."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"group-findings",children:"Group findings"}),"\n",(0,t.jsxs)(i.p,{children:["By default, Semgrep groups all of the findings by the rule Semgrep used to match the code. This view is called the ",(0,t.jsx)(i.strong,{children:"Group by Rule"})," view."]}),"\n",(0,t.jsx)(i.p,{children:"Semgrep sorts findings by severity. For a given severity, Semgrep further sorts findings as follows:"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsx)(i.li,{children:"Findings generated by custom rules"}),"\n",(0,t.jsxs)(i.li,{children:["Findings generated by ",(0,t.jsx)(i.a,{href:"/semgrep-code/pro-rules",children:"Pro rules"})]}),"\n",(0,t.jsx)(i.li,{children:"Issue count in descending order"}),"\n",(0,t.jsx)(i.li,{children:"Findings ID in ascending order"}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.img,{alt:"Findings grouped by rule",src:n(83617).A+"#md-width",width:"2262",height:"1630"})}),"\n",(0,t.jsxs)(i.p,{children:["To view findings individually, toggle ",(0,t.jsx)(i.strong,{children:"Group by Rule"})," to ",(0,t.jsx)(i.strong,{children:"No grouping"})," using the drop-down menu in the header. Findings are displayed based on the date they were found, with the most recent finding listed at the top."]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.img,{alt:"Group by Rule option",src:n(93215).A+"#md-width",width:"2244",height:"1628"})}),"\n",(0,t.jsx)(i.h3,{id:"time-period-and-triage",children:"Time period and triage"}),"\n",(0,t.jsx)(a.Ay,{}),"\n",(0,t.jsx)(i.h3,{id:"default-page-view",children:"Default page view"}),"\n",(0,t.jsx)(l.Ay,{product_name:"Code"}),"\n",(0,t.jsx)(i.h3,{id:"export-findings",children:"Export findings"}),"\n",(0,t.jsx)(c.Ay,{}),"\n",(0,t.jsx)(i.h3,{id:"filter-findings",children:"Filter findings"}),"\n",(0,t.jsx)(i.p,{children:"Use filters to narrow down your results. The following criteria are available for filtering:"}),"\n",(0,t.jsxs)(i.table,{children:[(0,t.jsx)(i.thead,{children:(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.th,{children:"Filter"}),(0,t.jsx)(i.th,{children:"Description"})]})}),(0,t.jsxs)(i.tbody,{children:[(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.strong,{children:"Projects and branches"})}),(0,t.jsx)(i.td,{children:"Filter by repositories connected to Semgrep AppSec Platform and by findings in different Git branches."})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.strong,{children:"Tags"})}),(0,t.jsx)(i.td,{children:"Filter for findings based on the tags associated with the project."})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.strong,{children:"Status"})}),(0,t.jsxs)(i.td,{children:["Filter the triage state of a finding. Refer to ",(0,t.jsx)(i.a,{href:"/semgrep-code/triage-remediation#triage-statuses",children:"Triage statuses"})," to understand triage states. You can filter findings with a status of ",(0,t.jsx)(i.strong,{children:"Ignored"})," further by reason: ",(0,t.jsx)(i.strong,{children:"False positive"}),", ",(0,t.jsx)(i.strong,{children:"Acceptable risk"}),", ",(0,t.jsx)(i.strong,{children:"No time to fix"}),", or ",(0,t.jsx)(i.strong,{children:"No triage reason"}),"."]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.strong,{children:"Severity"})}),(0,t.jsxs)(i.td,{children:["Filter by the severity of a finding. Severity is computed based on the values assigned for ",(0,t.jsx)(i.a,{href:"/contributing/contributing-to-semgrep-rules-repository/#likelihood",children:"Likelihood"})," and ",(0,t.jsx)(i.a,{href:"/contributing/contributing-to-semgrep-rules-repository/#impact",children:"Impact"})," by the rule's author. Possible values: ",(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{children:"Low"}),(0,t.jsx)("li",{children:"Medium"}),(0,t.jsx)("li",{children:"High"}),(0,t.jsx)("li",{children:"Critical"})]})]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.strong,{children:"Confidence"})}),(0,t.jsx)(i.td,{children:"Filter by the likelihood of the rule to detect true positives. The higher the confidence, the more true positives the rule may detect."})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.strong,{children:"Pro findings only"})}),(0,t.jsx)(i.td,{children:"Filter for findings identified using Semgrep Pro rules. Also includes findings originating from cross-file or cross-function analysis."})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.strong,{children:"Category"})}),(0,t.jsxs)(i.td,{children:["Filter by the type of security issue or vulnerability the rule detects, such as ",(0,t.jsx)(i.code,{children:"security"}),", ",(0,t.jsx)(i.code,{children:"correctness"}),", and ",(0,t.jsx)(i.code,{children:"maintainability"}),". You can select more than one category at a time. See ",(0,t.jsx)(i.a,{href:"#finding-categories",children:"Finding categories"})," for information on how Semgrep categorizes your findings."]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.strong,{children:"Assistant risk category"})}),(0,t.jsxs)(i.td,{children:["Filter for findings based on Assistant's assessment of risk level of files based on the type of code identified. High-risk files contain sensitive information, such as authorization and authentication details, while low-risk files may be things like test files. You can further filter by file type, such as ",(0,t.jsx)(i.strong,{children:"payments"})," or ",(0,t.jsx)(i.strong,{children:"tests"}),"."]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.strong,{children:"Assistant autotriage"})}),(0,t.jsxs)(i.td,{children:["Filter by whether ",(0,t.jsx)(i.a,{href:"/semgrep-assistant/overview#auto-triage",children:"Assistant autotriage"})," has determined the finding to be a ",(0,t.jsx)(i.strong,{children:"True positive"})," or ",(0,t.jsx)(i.strong,{children:"False positive"}),"."]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.strong,{children:"Action"})}),(0,t.jsx)(i.td,{children:"Filter by monitoring, commenting, or blocking rules in your Policies."})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.strong,{children:"Rule"})}),(0,t.jsx)(i.td,{children:"Filter by rules included in your Policies page. You can select more than one rule or ruleset for filtering."})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.strong,{children:"Ruleset"})}),(0,t.jsx)(i.td,{children:"Filter by the ruleset name where rules that match the code belong. More than one rule or ruleset can be selected for filtering."})]})]})]}),"\n",(0,t.jsx)(i.h4,{id:"finding-categories",children:"Finding categories"}),"\n",(0,t.jsx)(i.p,{children:"A finding can be categorized in two ways:"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"Finding categorization based on the issue or code it detects"}),":"]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Anti-patterns"}),"\n",(0,t.jsx)(i.li,{children:"Security vulnerabilities (such as dangerous function usage)"}),"\n",(0,t.jsx)(i.li,{children:"Business or logic bugs"}),"\n",(0,t.jsx)(i.li,{children:"Matches based on your own custom rules (such as organization-specific authentication logic)"}),"\n"]}),"\n",(0,t.jsxs)(i.p,{children:["Semgrep rules provide a metadata schema to identify these common categories. Semgrep findings include a ",(0,t.jsx)(i.code,{children:"message"})," field that describes the security issue or bug found in matching code. Additionally, findings can provide a ",(0,t.jsx)(i.code,{children:"fix"})," field that fixes the issue by creating a suggestion within your source code management (SCM) tool, such as GitHub, GitLab, and Bitbucket."]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"Finding categorization based on the validity of the match"}),":"]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"True positive"}),": Rules are written to match a certain code pattern. A true positive is a genuine match. The rule is capturing the code as intended."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"False positive"}),": A false positive is a mismatch between the intended purpose of the rule and the code it matched. A finding is generated but does not meet the rule's intended need. Rules with a high false positivity rate are said to be ",(0,t.jsx)(i.strong,{children:"noisy"}),"."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"False negative"}),": A false negative is a finding that should have been found by a rule, but was not. This can happen for two reasons:","\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:["A flaw in the rule's logic. See ",(0,t.jsx)("a",{href:"/docs/reporting-false-negatives",children:"Reporting false negatives"}),"."]}),"\n",(0,t.jsxs)(i.li,{children:["A bug within Semgrep itself. See the list of ",(0,t.jsx)("a",{href:"https://github.com/semgrep/semgrep/issues",children:"Semgrep issues"})," to file a bug report."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.admonition,{type:"tip",children:(0,t.jsxs)(i.p,{children:["You can identify findings categorized under ",(0,t.jsx)(i.strong,{children:"Security"})," by their badge.\n",(0,t.jsx)(i.img,{alt:"Screenshot of security badge",src:n(23550).A+"#md-width",width:"1297",height:"326"})]})}),"\n",(0,t.jsx)(i.h3,{id:"view-details-about-a-specific-finding",children:"View details about a specific finding"}),"\n",(0,t.jsx)(i.p,{children:"To view in-depth information about a specific finding:"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:["Select the finding whose details you want to view:","\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["If the default ",(0,t.jsx)(i.strong,{children:"Group by Rule"})," is enabled, click the ",(0,t.jsx)("i",{class:"fa-regular fa-window-restore"})," ",(0,t.jsx)(i.strong,{children:"Details"})," icon on the card of the finding.\n",(0,t.jsx)(i.img,{alt:"Click View details if Group by Rule is enabled",src:n(13543).A+"#md-width",width:"1842",height:"632"})]}),"\n",(0,t.jsxs)(i.li,{children:["If the ",(0,t.jsx)(i.strong,{children:"No grouping"})," view is enabled, click the ",(0,t.jsx)(i.strong,{children:"header hyperlink"})," on the card of the finding. In the example screenshot below, the link is labeled ",(0,t.jsx)(i.strong,{children:"detected-generic-api-key"}),".\n",(0,t.jsx)(i.img,{alt:"Click View details if No grouping is enabled",src:n(31144).A+"#md-width",width:"1842",height:"246"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.h4,{id:"add-notes-to-findings",children:"Add notes to findings"}),"\n",(0,t.jsxs)(i.p,{children:["To ",(0,t.jsx)(i.strong,{children:"add notes"})," to the activity history of a finding:"]}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:["Select a finding where you want to view details or add notes, and then do one of the following actions:","\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["If the default ",(0,t.jsx)(i.strong,{children:"Group by Rule"})," is enabled, click ",(0,t.jsx)("i",{class:"fa-regular fa-window-restore"})," ",(0,t.jsx)(i.strong,{children:"Details"})," icon on the card of the finding.\n",(0,t.jsx)(i.img,{alt:"Click View details if Group by Rule is enabled",src:n(13543).A+"#md-width",width:"1842",height:"632"})]}),"\n",(0,t.jsxs)(i.li,{children:["If ",(0,t.jsx)(i.strong,{children:"No grouping"})," view is enabled, click the ",(0,t.jsx)(i.strong,{children:"header hyperlink"})," on the card of the finding. In the example screenshot below, the link is labeled ",(0,t.jsx)(i.strong,{children:"detected-generic-api-key"}),".\n",(0,t.jsx)(i.img,{alt:"Click View details if No grouping is enabled",src:n(31144).A+"#md-width",width:"1842",height:"246"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["View or add the notes in the ",(0,t.jsx)(i.strong,{children:"Activity"})," section. To add a new note, click ",(0,t.jsx)(i.strong,{children:"New note"}),"."]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"dataflow-traces",children:"Dataflow traces"}),"\n",(0,t.jsx)(d.Ay,{}),"\n",(0,t.jsx)(i.h3,{id:"view-dataflow-traces",children:"View dataflow traces"}),"\n",(0,t.jsx)(o.Ay,{}),"\n",(0,t.jsx)(i.h2,{id:"data-retention",children:"Data retention"}),"\n",(0,t.jsxs)(i.p,{children:["Semgrep, Inc. retains findings data as long as an account remains active. We securely destroy data within ",(0,t.jsx)(i.strong,{children:"90 days of contract termination"})," for our ",(0,t.jsx)(i.strong,{children:"Enterprise"})," customers."]}),"\n",(0,t.jsxs)(i.p,{children:["Additionally, account owners may request data destruction at any time by contacting\xa0",(0,t.jsxs)(i.a,{href:"mailto:support@semgrep.com",children:[(0,t.jsx)("i",{class:"fa-regular fa-envelope"}),"\xa0support@semgrep.com"]}),"."]}),"\n",(0,t.jsx)(i.h2,{id:"further-reading",children:"Further reading"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Learn how to ",(0,t.jsx)(i.a,{href:"/semgrep-code/triage-remediation",children:"triage and remediate Semgrep Code findings"}),"."]}),"\n",(0,t.jsxs)(i.li,{children:["See ",(0,t.jsx)(i.a,{href:"/semgrep-assistant/overview",children:"Semgrep Assistant for Semgrep Code"})," for information on receiving AI-powered security recommendations when reviewing your findings."]}),"\n"]})]})}function j(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>d,x:()=>o});var s=n(96540);const t={},r=s.createContext(t);function d(e){const i=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(r.Provider,{value:i},e.children)}},31144:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/cloud-platform-findings-no-grouping-view-details-53fd8aea1c3a3f18befd5dcad551f112.png"},35193:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/findings-filters-43f39b9d3ecec6743ca93aea2236d5e7.png"},43322:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/cloud-platform-findings-details-data-flow-6d4bc83d88a89e3326085d8e356bf83c.png"},43672:(e,i,n)=>{n.d(i,{Ay:()=>o,RM:()=>r});var s=n(74848),t=n(28453);const r=[];function d(e){const i={a:"a",admonition:"admonition",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.admonition,{title:"Prerequisite",type:"info",children:(0,s.jsxs)(i.p,{children:["Not all Semgrep rules or rulesets make use of dataflow traces, or taint tracking. Ensure that you have a ruleset, such as the ",(0,s.jsx)(i.strong,{children:"default ruleset"})," added in your ",(0,s.jsx)(i.strong,{children:(0,s.jsx)(i.a,{href:"https://semgrep.dev/orgs/-/policies",children:"Policies page"})}),". If this ruleset is not added, go to ",(0,s.jsx)(i.a,{href:"https://semgrep.dev/p/default",children:"https://semgrep.dev/p/default"}),", and then click ",(0,s.jsx)(i.strong,{children:"Add to Policy"}),". You can add rules that use taint tracking from ",(0,s.jsx)(i.a,{href:"https://semgrep.dev/explore",children:"Semgrep Registry"}),"."]})}),"\n",(0,s.jsx)(i.p,{children:"To view the detailed path of tainted data with dataflow traces:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["Log in to Semgrep AppSec Platform, and click ",(0,s.jsx)(i.strong,{children:(0,s.jsx)(i.a,{href:"https://semgrep.dev/orgs/-/findings",children:"Code"})})," in the left panel to view your findings."]}),"\n",(0,s.jsxs)(i.li,{children:["Select the finding you're interested in, then do one of the following actions:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["If the default ",(0,s.jsx)(i.strong,{children:"Group by Rule"})," is enabled, click ",(0,s.jsx)("i",{class:"fa-regular fa-window-restore"})," ",(0,s.jsx)(i.strong,{children:"View details"})," icon on the card of the finding.\n",(0,s.jsx)(i.img,{alt:"Click View details if Group by Rule is enabled",src:n(13543).A+"#md-width",width:"1842",height:"632"})]}),"\n",(0,s.jsxs)(i.li,{children:["If ",(0,s.jsx)(i.strong,{children:"No grouping"})," view is enabled, click the ",(0,s.jsx)(i.strong,{children:"header hyperlink"})," on the card of the finding. In the example screenshot below, the link is titled ",(0,s.jsx)(i.strong,{children:"tainted-sql-string"}),".\n",(0,s.jsx)(i.img,{alt:"Click View details if No grouping is enabled",src:n(31144).A+"#md-width",width:"1842",height:"246"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["In the ",(0,s.jsx)("i",{class:"fa-solid fa-droplet"})," ",(0,s.jsx)(i.strong,{children:"Data flow"})," ",(0,s.jsx)("i",{class:"fa-regular fa-circle-info"})," section, you can see the source, traces, and sink of the tainted data. The example below displays the path of tainted data across multiple files because Semgrep Pro Engine was enabled. Clicking on a specific line in the trace will highlight it in the context of the file, while clicking on the file name at the top of the right pane will take you directly to that file in your source code manager (GitHub, GitLab, etc.). If you don't have code access enabled, you'll still see the link to your source code manager.\n",(0,s.jsx)(i.img,{alt:"Data flow in Finding details page",src:n(43322).A+"#md-width",width:"1750",height:"1160"})]}),"\n"]})]})}function o(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},54016:(e,i,n)=>{n.d(i,{Ay:()=>o,RM:()=>r});var s=n(74848),t=n(28453);const r=[];function d(e){const i={a:"a",admonition:"admonition",code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(i.p,{children:["A ",(0,s.jsx)(i.strong,{children:"single"})," finding may appear in several branches. These appearances are called ",(0,s.jsx)(i.strong,{children:"instances"})," of a finding. Several instances of the same finding may differ in which line of code (LOC) they are on or in their triage state. For example, on ",(0,s.jsx)(i.code,{children:"production"})," the finding may be on line 20, but the same finding was moved further to line 26 in ",(0,s.jsx)(i.code,{children:"feature-branch-a"}),"."]}),"\n",(0,s.jsx)(i.p,{children:"Semgrep automatically recognizes that they are fundamentally the same finding and deduplicates these instances so that you do not get an inflated count of findings per ref that the finding is present in."}),"\n",(0,s.jsxs)(i.p,{children:["By default, the ",e.product_name," page displays findings from the ",(0,s.jsx)(i.a,{href:"/deployment/primary-branch",children:"primary branches"})," of all repositories (projects), arranged by most recent scan. You are viewing the ",(0,s.jsx)(i.strong,{children:"primary branch's instance"})," of that finding, so you may see variations in LOC or triage state when comparing the finding across branches."]}),"\n",(0,s.jsxs)(i.p,{children:["When filtering by primary branch and triage status, the filters are applied based on the ",(0,s.jsx)(i.strong,{children:"triage status of the finding on the primary branch"}),". This means that on some feature branches, the instance may already be ",(0,s.jsx)(i.strong,{children:"Fixed"}),", but on the primary branch, the finding is still ",(0,s.jsx)(i.strong,{children:"Open"}),". The finding status on the primary branch is updated when the PR or MR is merged and Semgrep has scanned the code."]}),"\n",(0,s.jsx)(i.admonition,{type:"tip",children:(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["If you do not see any findings, or there are zero findings after a scan has concluded, check the ",(0,s.jsx)(i.strong,{children:"Projects"})," page to view the findings count, if any, and to set a ",(0,s.jsx)(i.a,{href:"/deployment/primary-branch",children:"primary branch"}),", if it is not already set."]}),"\n",(0,s.jsxs)(i.li,{children:["The total count of findings in the ",(0,s.jsx)(i.strong,{children:"Projects"})," page is based on the ",(0,s.jsx)(i.strong,{children:"primary branch"}),"."]}),"\n"]})})]})}function o(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},64368:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/pre-production-ed03f3d2e70407474dd91e1487832c78.png"},83617:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/app-findings-f5ae2011a269abfa3b62cef5e42531df.png"},93215:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/cloud-platform-findings-no-grouping-08d28282a1c9aadcec80eaa9674302fa.png"},95921:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/app-findings-overview-e98eedb5fa41be37fcae5b9602cfac15.png"},96598:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/download-csv-b24a267513410d63df2258a07eb20405.png"}}]);