"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[1843],{2286:(e,s,n)=>{n.d(s,{Ay:()=>c,RM:()=>i});var r=n(74848),t=n(28453);const i=[];function o(e){const s={code:"code",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:"Log in to your Semgrep account. Running this command launches a browser window, but you can also use the link that's returned in the CLI to proceed:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-console",children:"semgrep login\n"})}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["In the ",(0,r.jsx)(s.strong,{children:"Semgrep CLI login"}),", click ",(0,r.jsx)(s.strong,{children:"Activate"})," to proceed."]}),"\n"]}),"\n"]})}function c(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},18691:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>p,contentTitle:()=>u,default:()=>x,frontMatter:()=>h,metadata:()=>r,toc:()=>g});const r=JSON.parse('{"id":"getting-started/cli-oss","title":"Local CLI scans","description":"Learn how to set up Semgrep, scan your codebase for security issues, and view your findings in the CLI.","source":"@site/docs/getting-started/cli-oss.md","sourceDirName":"getting-started","slug":"/getting-started/cli-oss","permalink":"/semgrep-docs/getting-started/cli-oss","draft":false,"unlisted":false,"editUrl":"https://github.com/kyle-semgrep/semgrep-docs/edit/main/docs/getting-started/cli-oss.md","tags":[{"inline":true,"label":"Quickstart","permalink":"/semgrep-docs/tags/quickstart"},{"inline":true,"label":"Semgrep CE","permalink":"/semgrep-docs/tags/semgrep-ce"}],"version":"current","lastUpdatedAt":1752504841000,"frontMatter":{"slug":"cli-oss","title":"Local CLI scans","hide_title":true,"displayed_sidebar":"scanSidebar","description":"Learn how to set up Semgrep, scan your codebase for security issues, and view your findings in the CLI.","tags":["Quickstart","Semgrep CE"]},"sidebar":"scanSidebar","previous":{"title":"Semgrep CE in CI","permalink":"/semgrep-docs/deployment/oss-deployment"},"next":{"title":"Overview","permalink":"/semgrep-docs/semgrep-supply-chain/overview"}}');var t=n(74848),i=n(28453),o=n(22749);n(2286);function c(e){const s={a:"a",blockquote:"blockquote",code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"Navigate to the root of your codebase, and run your first scan. The specific command you use depends on how you want to view the results."}),"\n",(0,t.jsx)(s.p,{children:"To run a scan using recommended rules for your programming language, and view the results in the CLI:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-console",children:"semgrep scan\n"})}),"\n",(0,t.jsx)(s.p,{children:"To export the results to a plain text file:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-console",children:"semgrep scan --text --text-output=semgrep.txt\n"})}),"\n",(0,t.jsx)(s.p,{children:"To export the results to a SARIF file:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-console",children:"semgrep scan --sarif --sarif-output=semgrep.sarif\n"})}),"\n",(0,t.jsx)(s.p,{children:"To export the results to a JSON file:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-console",children:"semgrep scan --json --json-output=semgrep.json\n"})}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:["The JSON schema for Semgrep's CLI output can be found in ",(0,t.jsx)(s.a,{href:"https://github.com/semgrep/semgrep-interfaces/blob/main/semgrep_output_v1.jsonschema",children:"semgrep/semgrep-interfaces"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["In addition to the ",(0,t.jsx)(s.code,{children:"--text"}),", ",(0,t.jsx)(s.code,{children:"--json"}),", and ",(0,t.jsx)(s.code,{children:"--sarif"})," flags, which set the primary output formats, and the ",(0,t.jsx)(s.code,{children:"--output=<value>"})," flag that saves the results to a file or posts to a URL, you can append ",(0,t.jsx)(s.code,{children:"--<format>-output=<file>"})," to obtain additional output streams:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-console",children:"# prints findings in SARIF format to standard output and writes in JSON format to `findings.json`.\nsemgrep scan --sarif --json-output=findings.json\n\n# prints findings in text to standard out and writes JSON output to `findings.json`.\nsemgrep scan --json-output=findings.json\n\n# prints text output to `findings.txt` and writes in SARIF to `findings.sarif`.\nsemgrep scan --output=findings.txt --sarif-output=findings.sarif\n\n# writes text to `semgrep.txt`, JSON to `semgrep.json`, and SARIF to `semgrep.sarif`.\nsemgrep scan --text --output=semgrep.txt --json-output=semgrep.json --sarif-output=semgrep.sarif\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Accepted values for ",(0,t.jsx)(s.code,{children:"<format>"}),": ",(0,t.jsx)(s.code,{children:"text"}),", ",(0,t.jsx)(s.code,{children:"json"}),", ",(0,t.jsx)(s.code,{children:"sarif"}),", ",(0,t.jsx)(s.code,{children:"gitlab-sast"}),", ",(0,t.jsx)(s.code,{children:"gitlab-secrets"}),", ",(0,t.jsx)(s.code,{children:"junit-xml"}),", ",(0,t.jsx)(s.code,{children:"emacs"}),", ",(0,t.jsx)(s.code,{children:"vim"})]})]})}function a(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}function l(e){const s={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsxs)(s.p,{children:["Semgrep collects pseudonymous metrics when you use rules from the Registry. You can turn this off with ",(0,t.jsx)(s.code,{children:"--metrics=off"}),"."]})}),"\n",(0,t.jsxs)(s.p,{children:["To scan your codebase with a specific ruleset, either one that you write or one that you obtain from the ",(0,t.jsxs)(s.a,{href:"https://semgrep.dev/explore",children:[(0,t.jsx)("i",{class:"fas fa-external-link fa-xs"})," Semgrep Registry"]}),", use the ",(0,t.jsx)(s.code,{children:"--config"})," flag."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-console",children:"# Scan with the the JavaScript rules from Semgrep Registry\nsemgrep scan --config p/javascript\n"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-console",children:"# Scan with the rules defined in your custom rules.yaml file\nsemgrep scan --config rules.yaml\n"})}),"\n",(0,t.jsx)(s.p,{children:"You can include as many configuration flags as necessary."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-console",children:"# Scan with rules defined in two separate config files\nsemgrep scan --config rules.yaml --config more_rules.yaml\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Rules stored under a ",(0,t.jsx)(s.strong,{children:"hidden directory"}),", such as ",(0,t.jsx)(s.code,{children:"dir/.hidden/myrule.yml"}),", are processed by Semgrep when scanning with the ",(0,t.jsx)(s.code,{children:"--config"})," flag."]}),"\n",(0,t.jsxs)(s.p,{children:["Scan with rules in a ",(0,t.jsx)(s.strong,{children:"directory"})," and ",(0,t.jsx)(s.strong,{children:"all"})," its subdirectories:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-console",children:"semgrep scan --config DIRECTORY_NAME\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Scan with all YAML rules detected in the ",(0,t.jsx)(s.strong,{children:"current working directory"})," and all its ",(0,t.jsx)(s.strong,{children:"subdirectories"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-console",children:"semgrep scan --config .\n"})})]})}function d(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}const h={slug:"cli-oss",title:"Local CLI scans",hide_title:!0,displayed_sidebar:"scanSidebar",description:"Learn how to set up Semgrep, scan your codebase for security issues, and view your findings in the CLI.",tags:["Quickstart","Semgrep CE"]},u="Local scans with Semgrep Community Edition (CE)",p={},g=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Set up Semgrep",id:"set-up-semgrep",level:2},...o.RM,{value:"Scan your codebase",id:"scan-your-codebase",level:2},{value:"Scan your codebase with a specific ruleset",id:"scan-your-codebase-with-a-specific-ruleset",level:3},{value:"Test custom rules",id:"test-custom-rules",level:4},{value:"Improve performance for large codebases",id:"improve-performance-for-large-codebases",level:2},{value:"Set log levels",id:"set-log-levels",level:2},{value:"Example usage",id:"example-usage",level:3},{value:"Exit codes",id:"exit-codes",level:2}];function m(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"local-scans-with-semgrep-community-edition-ce",children:"Local scans with Semgrep Community Edition (CE)"})}),"\n",(0,t.jsx)(s.p,{children:"Learn how to set up Semgrep CE, scan your codebase for security issues, and view your findings in the CLI."}),"\n",(0,t.jsx)(s.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(s.p,{children:["See ",(0,t.jsx)(s.a,{href:"/prerequisites",children:"Prerequisites"})," to ensure that your machine meets Semgrep's requirements."]}),"\n",(0,t.jsx)(s.h2,{id:"set-up-semgrep",children:"Set up Semgrep"}),"\n",(0,t.jsx)(o.Ay,{}),"\n",(0,t.jsx)(s.h2,{id:"scan-your-codebase",children:"Scan your codebase"}),"\n",(0,t.jsx)(a,{}),"\n",(0,t.jsx)(s.h3,{id:"scan-your-codebase-with-a-specific-ruleset",children:"Scan your codebase with a specific ruleset"}),"\n",(0,t.jsxs)(s.p,{children:["You can scan your codebase using ",(0,t.jsx)(s.code,{children:"--config auto"})," to run Semgrep with rules that apply to your programming languages and frameworks:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-console",children:"semgrep scan --config auto\n"})}),"\n",(0,t.jsx)(d,{}),"\n",(0,t.jsx)(s.h4,{id:"test-custom-rules",children:"Test custom rules"}),"\n",(0,t.jsxs)(s.p,{children:["Semgrep includes features to ",(0,t.jsx)(s.a,{href:"/writing-rules/testing-rules",children:"test the custom rules that you write"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-console",children:"semgrep scan --test\n"})}),"\n",(0,t.jsx)(s.h2,{id:"improve-performance-for-large-codebases",children:"Improve performance for large codebases"}),"\n",(0,t.jsx)(s.p,{children:"You can set the number of subprocesses Semgrep uses to run checks in parallel:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-console",children:"semgrep scan -j NUMBER_OF_SUBPROCESSES\n"})}),"\n",(0,t.jsx)(s.p,{children:"By default, the number of jobs Semgrep uses is equivalent to the number of cores detected on the system."}),"\n",(0,t.jsx)(s.h2,{id:"set-log-levels",children:"Set log levels"}),"\n",(0,t.jsx)(s.p,{children:"Semgrep provides three levels of logging:"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:(0,t.jsx)(s.strong,{children:"Log level"})}),(0,t.jsx)(s.th,{children:(0,t.jsx)(s.strong,{children:"Flag"})}),(0,t.jsx)(s.th,{children:(0,t.jsx)(s.strong,{children:"Description"})})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Default"}),(0,t.jsx)(s.td,{children:"None"}),(0,t.jsx)(s.td,{children:"Prints scan progress, findings information, warnings, and errors."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Verbose"}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"-v"})," or ",(0,t.jsx)(s.code,{children:"--verbose"})]}),(0,t.jsx)(s.td,{children:"Includes everything printed when using the default logging level, adding a list of rules and details such as skipped files."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Debug"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"--debug"})}),(0,t.jsx)(s.td,{children:"Logs the entire scan process at a high level of detail."})]})]})]}),"\n",(0,t.jsx)(s.h3,{id:"example-usage",children:"Example usage"}),"\n",(0,t.jsx)(s.p,{children:"To set the logging level for a scan, include the flag when scanning your project:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-console",children:"# run a scan and get debug logs\nsemgrep scan --debug\n"})}),"\n",(0,t.jsx)(s.h2,{id:"exit-codes",children:"Exit codes"}),"\n",(0,t.jsxs)(s.p,{children:["The command ",(0,t.jsx)(s.code,{children:"semgrep scan"})," finishes with exit code ",(0,t.jsx)(s.code,{children:"0"})," as long as the scan completes, regardless of whether there were findings. To finish with exit code ",(0,t.jsx)(s.code,{children:"1"})," when there are findings, pass in the ",(0,t.jsx)(s.code,{children:"--error"})," flag."]})]})}function x(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},22749:(e,s,n)=>{n.d(s,{Ay:()=>c,RM:()=>i});var r=n(74848),t=n(28453);const i=[];function o(e){const s={a:"a",code:"code",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Homebrew users:"})," Ensure that you've ",(0,r.jsx)(s.a,{href:"https://docs.brew.sh/FAQ#my-mac-apps-dont-find-homebrew-utilities",children:"added Homebrew to your PATH"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"WSL users"}),": Ensure that you have the ",(0,r.jsx)(s.a,{href:"https://learn.microsoft.com/en-us/windows/wsl/install",children:"Windows Subsystem for Linux installed"})," before proceeding."]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"Install the Semgrep CLI tool and confirm the installation:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-console",children:'# macOS users only\nbrew install semgrep\n\n# macOS, Linux, or Windows Subsystem for Linux (WSL) users\npython3 -m pip install semgrep\n\n# if you get the following error "error: externally-managed-environment",\n# see semgrep.dev/docs/kb/semgrep-appsec-platform/error-externally-managed-environment \n\n# confirm\nsemgrep --version\n'})})]})}function c(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>c});var r=n(96540);const t={},i=r.createContext(t);function o(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);