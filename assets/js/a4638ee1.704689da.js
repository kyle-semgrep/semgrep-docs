"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[59010],{28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>l});var t=r(96540);const i={},s=t.createContext(i);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:n},e.children)}},30635:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"kb/rules/exclude_rule_for_certain_filetypes","title":"How to exclude certain file types for a particular rule","description":"Certain filetypes can generate numerous false positives and delay your triage process. This document helps you achieve a selective middle ground:","source":"@site/docs/kb/rules/exclude_rule_for_certain_filetypes.md","sourceDirName":"kb/rules","slug":"/kb/rules/exclude_rule_for_certain_filetypes","permalink":"/semgrep-docs/kb/rules/exclude_rule_for_certain_filetypes","draft":false,"unlisted":false,"editUrl":"https://github.com/kyle-semgrep/semgrep-docs/edit/main/docs/kb/rules/exclude_rule_for_certain_filetypes.md","tags":[],"version":"current","lastUpdatedAt":1752504841000,"frontMatter":{},"sidebar":"kbSidebar","previous":{"title":"Matching multiple tokens with ellipsis metavariables","permalink":"/semgrep-docs/kb/rules/ellipsis-metavariables"},"next":{"title":"Match the absence of something in a file","permalink":"/semgrep-docs/kb/rules/match-absence"}}');var i=r(74848),s=r(28453);const a={},l="How to exclude certain file types for a particular rule",o={},c=[{value:"Background",id:"background",level:2},{value:"Choosing the appropriate ignoring solution",id:"choosing-the-appropriate-ignoring-solution",level:2},{value:"Achieving a happy medium: creating a custom rule to exclude a file type",id:"achieving-a-happy-medium-creating-a-custom-rule-to-exclude-a-file-type",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"how-to-exclude-certain-file-types-for-a-particular-rule",children:"How to exclude certain file types for a particular rule"})}),"\n",(0,i.jsx)(n.p,{children:"Certain filetypes can generate numerous false positives and delay your triage process. This document helps you achieve a selective middle ground:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Continue to include the file type to scan with other rules"}),"\n",(0,i.jsx)(n.li,{children:"Reduce time spent triaging false positives"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"background",children:"Background"}),"\n",(0,i.jsxs)(n.p,{children:["This article uses a real-life case in scanning ",(0,i.jsx)(n.code,{children:".svg"})," files. ",(0,i.jsx)(n.code,{children:"svg"})," files mostly comprise a string of thousands of characters:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'<image id="image0" width="2896" height="998" xlink:href="data:image/png;\nbase64,iVBORw0KGgoAAAANSUhEUgAAC1AAA**AP6*mCAYAAABQS58cAAABR2lDQ1BJQ0M\ngUHJvZmlsZQAAKJFjYGASSSwoyGFhYGDIzSspCnJ3UoiIjFJgf8LAzsDIwM1gwqCRmFxc4B\ngQ4ANUwgCjUcG3a0C1QHBZF2SW3AzZBT+7Sn68UphgqTU7fyemehTAlZJanAyk/wBxWnJBU\nQkDA2MKkK1cXlIAYncA2SJFQEcB2XNA7HQIewOInQRhHwGrCQlyBrJvANkCyRmJQDMYXwDZ\nOklI4ulIbKi9IMDj4urjoxBqZG5oEUjAuaSDktSKEhDtnF9QWZSZnlGi4AgMpVQFz7xkPR0F\nIwMjAwYGUJhDVH8OAoclo9g+hFj+EgYGi28MDMwTEWJJUxgYtrcxMEjcQ\u2026..\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Semgrep\u2019s standard artifactory rule (see in ",(0,i.jsx)(n.a,{href:"https://semgrep.dev/r?q=generic.secrets.security.detected-artifactory-password.detected-artifactory-password",children:"Semgrep Registry"}),"), for example, reports on:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"_\\# ruleid: detected-artifactory-password_\n\n_AP6xxxxxxxxxx_\n\n_\\# ruleid: detected-artifactory-password_\n\n_AP2xxxxxxxxxx_\n\n...\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Because ",(0,i.jsx)(n.code,{children:".svg"})," files are made up of thousands of characters, the substring ",(0,i.jsx)(n.code,{children:"AP6*m..."})," in the ",(0,i.jsx)(n.code,{children:".svg"})," snippet creates a false positive finding due to the artifactory rule. It is a false positive because no passwords are leaked by the ",(0,i.jsx)(n.code,{children:".svg"})," file."]}),"\n",(0,i.jsx)(n.h2,{id:"choosing-the-appropriate-ignoring-solution",children:"Choosing the appropriate ignoring solution"}),"\n",(0,i.jsx)(n.p,{children:"Semgrep offers many different ways of ignoring false positives:\u2028"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:["Adding ",(0,i.jsx)(n.code,{children:"nosemgrep"})," as a comment on the first line of code in the file."]})," This would require having to keep track of each new file for this target ",(0,i.jsx)(n.code,{children:".svg"})," file type and editing each file accordingly, requiring constant maintenance."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:["Ignore the file entirely, by adding it to a ",(0,i.jsx)(n.code,{children:".semgrepignore file"})]}),". This would exclude the file from being scanned with all rules, not just the artifactory rule."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"achieving-a-happy-medium-creating-a-custom-rule-to-exclude-a-file-type",children:"Achieving a happy medium: creating a custom rule to exclude a file type"}),"\n",(0,i.jsxs)(n.p,{children:["You can safely assume ",(0,i.jsx)(n.code,{children:".svg"})," files do not intentionally contain artifactory passwords, so you can exclude this file type from being scanned. The following procedure demonstrates how to create a customized version of the rule that is generating the false positives that excludes the target file type."]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Download the rule generating false positives from the ",(0,i.jsx)(n.a,{href:"https://semgrep.dev/r",children:"Registry"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Modify the rule ID to something custom:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"  \\- id: my_detected-artifactory-password\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:["Exclude the target filetype in question from the rule through the ",(0,i.jsxs)(n.a,{href:"/deployment/teams#user-roles-and-access",children:[(0,i.jsx)(n.code,{children:"path"})," field"]}),":"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:' % cat my_custom_artifactory.yml \n \nrules:\n\n  \\- id: my_detected-artifactory-password\n  \n    options:\n    \n    .\n    .\n    .\n    \n    - metavariable-analysis:\n        analyzer: entropy\n        metavariable: $ITEM \n    paths:\n    \n       exclude:\n          - "*.svg" \n   languages:\n       - generic\n    .\n    .\n    .\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsxs)(n.li,{children:["Alter the scan command to still scan for the default configuration you have, with the following changes:","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Exclude the original noisy rule as articulated in the false positive reporting."}),"\n",(0,i.jsx)(n.li,{children:"Include the new custom rule that excludes your target paths."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Thus, your original ",(0,i.jsx)(n.code,{children:"semgrep scan"})," command or ",(0,i.jsx)(n.code,{children:"semgrep ci"})," command can be similar to the following::"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"% semgrep scan --config=auto --config=my_custom_artifactory.yml --exclude-rule generic.secrets.security.detected-artifactory-password.detected-artifactory-password\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);