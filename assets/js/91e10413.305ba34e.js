"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[42883],{10064:(e,n,t)=>{t.d(n,{Ay:()=>o,RM:()=>s});var i=t(74848),r=t(28453);const s=[];function c(e){const n={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"The following command runs an optimized set of rules for your project:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"semgrep --config p/default\n"})})]})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},21250:(e,n,t)=>{t.d(n,{A:()=>r});t(96540);var i=t(74848);function r(e){let{ruleId:n}=e;const t=new URL("https://semgrep.dev/r");return t.searchParams.set("q",n),(0,i.jsx)("a",{href:t,target:"_blank",children:n})}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var i=t(96540);const r={},s=i.createContext(r);function c(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(s.Provider,{value:n},e.children)}},51183:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>u,default:()=>j,frontMatter:()=>a,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"cheat-sheets/ruby-code-injection","title":"Code injection prevention for Ruby","description":"Code injection prevention cheat sheet for Ruby.","source":"@site/docs/cheat-sheets/ruby-code-injection.mdx","sourceDirName":"cheat-sheets","slug":"/cheat-sheets/ruby-code-injection","permalink":"/semgrep-docs/cheat-sheets/ruby-code-injection","draft":false,"unlisted":false,"editUrl":"https://github.com/kyle-semgrep/semgrep-docs/edit/main/docs/cheat-sheets/ruby-code-injection.mdx","tags":[],"version":"current","lastUpdatedAt":1753214405000,"frontMatter":{"slug":"ruby-code-injection","description":"Code injection prevention cheat sheet for Ruby."},"sidebar":"cheatsheetSidebar","previous":{"title":"Code injection prevention for Python","permalink":"/semgrep-docs/cheat-sheets/python-code-injection"},"next":{"title":"Command injection","permalink":"/semgrep-docs/category/command-injection"}}');var r=t(74848),s=t(28453),c=t(21250),o=t(53124),l=t(10064);const a={slug:"ruby-code-injection",description:"Code injection prevention cheat sheet for Ruby."},u="Code injection prevention for Ruby",d={},h=[...o.RM,{value:"Check your project using Semgrep",id:"check-your-project-using-semgrep",level:3},...l.RM,{value:"1. Evaluating code",id:"1-evaluating-code",level:2},{value:"1.A. Evaluating code with <code>eval</code>",id:"1a-evaluating-code-with-eval",level:3},{value:"References",id:"references",level:4},{value:"Mitigation",id:"mitigation",level:4},{value:"Semgrep rule",id:"semgrep-rule",level:4},{value:"1.B. Evaluating code with RubyVM::InstructionSequence",id:"1b-evaluating-code-with-rubyvminstructionsequence",level:3},{value:"References",id:"references-1",level:4},{value:"Mitigation",id:"mitigation-1",level:4},{value:"Semgrep rule",id:"semgrep-rule-1",level:4}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"code-injection-prevention-for-ruby",children:"Code injection prevention for Ruby"})}),"\n",(0,r.jsx)(o.Ay,{}),"\n",(0,r.jsx)(n.h3,{id:"check-your-project-using-semgrep",children:"Check your project using Semgrep"}),"\n",(0,r.jsx)(l.Ay,{}),"\n",(0,r.jsx)(n.h2,{id:"1-evaluating-code",children:"1. Evaluating code"}),"\n",(0,r.jsxs)(n.h3,{id:"1a-evaluating-code-with-eval",children:["1.A. Evaluating code with ",(0,r.jsx)(n.code,{children:"eval"})]}),"\n",(0,r.jsx)(n.p,{children:"Evaluating code can be dangerous if dynamic content is used as input. If this input originates from outside of the program it can lead to a code injection vulnerability."}),"\n",(0,r.jsx)(n.p,{children:"Examples:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'# safe\nstr = "hello"\neval "str + \' Fred\'"\n\n# vulnerable\nstr = "hello"\nuser_input = "system(\'cat /etc/passwd\')" # Value supplied by user\neval "str + #{user_input}"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'class Thing\nend\n\n# safe\nThing.module_eval(%q{def hello() "Hello there!" end})\n\n# vulnerable\nuser_input = "system(\'cat /etc/passwd\')" # Value supplied by user\nThing.module_eval(%q{def hello() "#{user_input}" end})\n'})}),"\n",(0,r.jsx)(n.h4,{id:"references",children:"References"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.rubydoc.info/stdlib/core/Kernel:eval",children:"eval() documentation"})}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"mitigation",children:"Mitigation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Don't use ",(0,r.jsx)(n.code,{children:"eval()"}),", ",(0,r.jsx)(n.code,{children:"class_eval()"}),", ",(0,r.jsx)(n.code,{children:"module_eval()"}),", or ",(0,r.jsx)(n.code,{children:"instance_eval()"})," if possible."]}),"\n",(0,r.jsxs)(n.li,{children:["If you need to use ",(0,r.jsx)(n.code,{children:"eval()"}),", ",(0,r.jsx)(n.code,{children:"class_eval()"}),", ",(0,r.jsx)(n.code,{children:"module_eval()"}),", or ",(0,r.jsx)(n.code,{children:"instance_eval()"})," with non-literal values, ensure that executed content is not controllable by external sources."]}),"\n",(0,r.jsx)(n.li,{children:"If it's not possible, strip everything except alphanumeric characters from the input."}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"semgrep-rule",children:"Semgrep rule"}),"\n",(0,r.jsx)(c.A,{ruleId:"ruby.lang.security.no-eval.ruby-eval"}),"\n",(0,r.jsx)(n.h3,{id:"1b-evaluating-code-with-rubyvminstructionsequence",children:"1.B. Evaluating code with RubyVM::InstructionSequence"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"InstructionSequence"})," class represents compiled instructions for the Ruby Virtual Machine. See details in ",(0,r.jsx)(n.a,{href:"https://ruby-doc.org/core-2.6/RubyVM/InstructionSequence.html",children:"RubyVM::InstructionSequence documentation"}),". The ",(0,r.jsx)(n.code,{children:"RubyVM"})," class itself is ",(0,r.jsx)(n.strong,{children:"not"})," intended for regular users. As the ",(0,r.jsx)(n.code,{children:"RubyVM"})," class enables compiling code it may insecurely interpret user input. Providing user input to this class or its methods can result in a code injection vulnerability."]}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'# safe\nRubyVM::InstructionSequence.compile("a = 1 + 2")\n\n# vulnerable\nuser_input = "system(\'cat /etc/passwd\')" # Value supplied by user\nRubyVM::InstructionSequence.compile("a = 1 + #{user_input}")\n'})}),"\n",(0,r.jsx)(n.h4,{id:"references-1",children:"References"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://ruby-doc.org/core-2.7.0/RubyVM.html",children:"RubyVM documentation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://ruby-doc.org/core-2.6/RubyVM/InstructionSequence.html",children:"RubyVM::InstructionSequence documentation"})}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"mitigation-1",children:"Mitigation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Don't use ",(0,r.jsx)(n.code,{children:"RubyVM"}),", or ",(0,r.jsx)(n.code,{children:"RubyVM::InstructionSequence"})," if possible."]}),"\n",(0,r.jsxs)(n.li,{children:["If you need to use ",(0,r.jsx)(n.code,{children:"RubyVM"})," or ",(0,r.jsx)(n.code,{children:"RubyVM::InstructionSequence"})," with non-literal values or user input, ensure that inputs are from trusted sources."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"semgrep-rule-1",children:"Semgrep rule"}),"\n",(0,r.jsx)(c.A,{ruleId:"ruby.lang.security.no-eval.ruby-eval"})]})}function j(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},53124:(e,n,t)=>{t.d(n,{Ay:()=>o,RM:()=>s});var i=t(74848),r=t(28453);const s=[];function c(e){const n={p:"p",...(0,r.R)(),...e.components};return(0,i.jsx)(n.p,{children:"This is a code injection prevention cheat sheet by Semgrep, Inc. It contains code patterns of potential ways to run arbitrary code in an application. Instead of scrutinizing code for exploitable vulnerabilities, the recommendations in this cheat sheet pave a safe road for developers that mitigate the possibility of code injection in your code. By following these recommendations, you can be reasonably sure your code is free of code injection."})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);