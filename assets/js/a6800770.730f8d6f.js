"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[82232],{21452:(e,s,i)=>{i.d(s,{Ay:()=>o,RM:()=>l});var r=i(74848),n=i(28453);const l=[];function t(e){const s={code:"code",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Rule mode"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Monitor"}),(0,r.jsxs)(s.td,{children:["Rules in ",(0,r.jsx)(s.strong,{children:"Monitor mode"})," display findings only in: ",(0,r.jsxs)("ul",{children:[(0,r.jsx)("li",{children:"Semgrep AppSec Platform"}),(0,r.jsxs)("li",{children:[(0,r.jsx)("strong",{children:"For Semgrep Code and Supply Chain"}),": User-defined notifications"]})]}),"Set rules to this mode to evaluate their true positive rate and other criteria you may have. By keeping rules in Monitor, developers do not receive potentially noisy findings in their PRs or MRs."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Comment"}),(0,r.jsxs)(s.td,{children:["Rules in ",(0,r.jsx)(s.strong,{children:"Comment mode"})," display findings in:",(0,r.jsxs)("ul",{children:[(0,r.jsx)("li",{children:"Developers' PRs or MRs"}),(0,r.jsx)("li",{children:"Semgrep AppSec Platform"}),(0,r.jsxs)("li",{children:[(0,r.jsx)("strong",{children:"For Semgrep Code and Supply Chain"}),": User-defined notifications"]})]}),"Set rules that have met your performance criteria to this mode when you are ready to display findings to developers."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Block"}),(0,r.jsxs)(s.td,{children:["Rules in ",(0,r.jsx)(s.strong,{children:"Block mode"})," cause the scan job to fail with an exit code of ",(0,r.jsx)(s.code,{children:"1"})," if Semgrep Secrets detects a finding from these rules. You can use this result to enforce a block on the PR or MR. For example, GitHub users can enable branch protection and set the PR to fail if the Semgrep step fails. ",(0,r.jsx)("br",{}),"These rules display findings in:",(0,r.jsxs)("ul",{children:[(0,r.jsx)("li",{children:"Developers' PRs or MRs"}),(0,r.jsx)("li",{children:"Semgrep AppSec Platform"}),(0,r.jsxs)("li",{children:[(0,r.jsx)("strong",{children:"For Semgrep Code and Supply Chain"}),": User-defined notifications"]})]}),"These are typically high-confidence, high-severity rules."]})]})]})]})}function o(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}},28453:(e,s,i)=>{i.d(s,{R:()=>t,x:()=>o});var r=i(96540);const n={},l=r.createContext(n);function t(e){const s=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),r.createElement(l.Provider,{value:s},e.children)}},84344:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"semgrep-code/policies","title":"Manage rules and policies","description":"The Policies page is a visual representation of the rules Semgrep Code uses to scan code.","source":"@site/docs/semgrep-code/policies.md","sourceDirName":"semgrep-code","slug":"/semgrep-code/policies","permalink":"/semgrep-docs/semgrep-code/policies","draft":false,"unlisted":false,"editUrl":"https://github.com/kyle-semgrep/semgrep-docs/edit/main/docs/semgrep-code/policies.md","tags":[{"inline":true,"label":"Semgrep Code","permalink":"/semgrep-docs/tags/semgrep-code"},{"inline":true,"label":"Semgrep AppSec Platform","permalink":"/semgrep-docs/tags/semgrep-app-sec-platform"}],"version":"current","lastUpdatedAt":1752262761000,"frontMatter":{"slug":"policies","append_help_link":true,"title":"Manage rules and policies","hide_title":true,"description":"The Policies page is a visual representation of the rules Semgrep Code uses to scan code.","tags":["Semgrep Code","Semgrep AppSec Platform"]},"sidebar":"scanSidebar","previous":{"title":"Perform cross-file analysis","permalink":"/semgrep-docs/semgrep-code/semgrep-pro-engine-intro"},"next":{"title":"License compliance","permalink":"/semgrep-docs/semgrep-supply-chain/license-compliance"}}');var n=i(74848),l=i(28453),t=i(21452);const o={slug:"policies",append_help_link:!0,title:"Manage rules and policies",hide_title:!0,description:"The Policies page is a visual representation of the rules Semgrep Code uses to scan code.",tags:["Semgrep Code","Semgrep AppSec Platform"]},d="Manage rules and policies",c={},a=[{value:"Language coverage and scan speeds",id:"language-coverage-and-scan-speeds",level:2},{value:"Policies page structure",id:"policies-page-structure",level:2},{value:"Policies page filters",id:"policies-page-filters",level:3},{value:"Rule entries reference",id:"rule-entries-reference",level:3},{value:"Add rules",id:"add-rules",level:2},{value:"Add custom rules to your Policies",id:"add-custom-rules-to-your-policies",level:3},{value:"Add rulesets to your Policies from the Registry",id:"add-rulesets-to-your-policies-from-the-registry",level:3},{value:"Filtering behavior",id:"filtering-behavior",level:4},{value:"Disable rules",id:"disable-rules",level:2},{value:"Rule modes",id:"rule-modes",level:2},...t.RM,{value:"Block a PR or MR through rule modes",id:"block-a-pr-or-mr-through-rule-modes",level:2},{value:"Multiple policies",id:"multiple-policies",level:2},{value:"Resolve workflow actions in multiple policies",id:"resolve-workflow-actions-in-multiple-policies",level:3}];function h(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"manage-rules-and-policies",children:"Manage rules and policies"})}),"\n",(0,n.jsxs)(s.p,{children:["The Policies page displays the ",(0,n.jsxs)(s.a,{href:"/running-rules",children:[(0,n.jsx)("i",{class:"fa-regular fa-file-lines"})," rules"]})," that Semgrep Code uses when scanning all of your repositories."]}),"\n",(0,n.jsx)(s.p,{children:"Modifications to the rules on the Policies page allow you to increase the breadth and depth of your scan coverage or remove noise from scans. You can also determine whether findings detected by a given rule can help block merges for pull requests (PRs) or merge requests (MRs)."}),"\n",(0,n.jsx)(s.h2,{id:"language-coverage-and-scan-speeds",children:"Language coverage and scan speeds"}),"\n",(0,n.jsx)(s.p,{children:"Semgrep Code identifies the languages used in your repositories and only runs rules applicable to those languages. For example, adding Ruby and Python rules in your Policies doesn't affect the scan speed for Python-only repositories. Only Python rules are run for Python repositories."}),"\n",(0,n.jsx)(s.h2,{id:"policies-page-structure",children:"Policies page structure"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.img,{alt:"Default view of the Policies page",src:i(98971).A+"",width:"2702",height:"1616"}),"\n",(0,n.jsx)(s.em,{children:(0,n.jsx)(s.strong,{children:"Figure."})})," Default view of the Policies page, known as the ",(0,n.jsx)(s.strong,{children:"Group by vulnerability class"})," view."]}),"\n",(0,n.jsx)(s.p,{children:"The Policies page consists of a header and three main panes:"}),"\n",(0,n.jsxs)("dl",{children:[(0,n.jsx)("dt",{children:"Policies header"}),(0,n.jsxs)("dd",{children:[(0,n.jsx)("span",{children:"The top header consists of:"}),(0,n.jsxs)("ul",{children:[(0,n.jsxs)("li",{children:[(0,n.jsxs)("span",{children:[(0,n.jsx)("strong",{children:"Policies view drop-down"}),", which lets you choose between:"]}),(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"Grouping rules by vulnerability class"}),(0,n.jsx)("li",{children:"No grouping"})]})]}),(0,n.jsxs)("li",{children:[(0,n.jsx)("i",{class:"fa-solid fa-gear"})," ",(0,n.jsx)("b",{children:"Rule Modes"})," button where you can view ",(0,n.jsx)("strong",{children:"rule modes"})," and edit ",(0,n.jsx)("strong",{children:"notifications"})," for each rule mode. Rule modes define what ",(0,n.jsx)("strong",{children:"workflow actions"})," Semgrep Code performs when a rule detects a finding. For example, setting a rule's mode to ",(0,n.jsx)("strong",{children:"Comment"})," means that Semgrep posts PR or MR comments from findings generated by that rule. See ",(0,n.jsx)("a",{href:"#block-a-pr-or-mr-through-rule-modes",children:"Block a PR or MR through rule modes"})," for more information."]}),(0,n.jsxs)("li",{children:[(0,n.jsx)("strong",{children:"Add rules"})," button that takes you to the ",(0,n.jsxs)("a",{href:"https://semgrep.dev/explore",children:[(0,n.jsx)("i",{class:"fas fa-external-link fa-xs"})," Semgrep Registry"]})," where you can add rules to the Policies page and assign their initial modes."]})]})]}),(0,n.jsx)("dt",{children:"Filter pane"}),(0,n.jsxs)("dd",{children:["Displays filters to quickly select and perform operations on rules in bulk. See ",(0,n.jsx)("a",{href:"#policies-filter-reference",children:"Policies filter reference"})," for more information."]}),(0,n.jsx)("dt",{children:"Rule pane"}),(0,n.jsxs)("dd",{children:["The rule pane displays the rules that Semgrep scans use to detect findings and allows you to edit their assigned rule modes. You can make these edits either one by one or through bulk editing of many rules. You can also use the ",(0,n.jsx)("strong",{children:"Search for rule names or ids"})," box. See ",(0,n.jsx)("a",{href:"#policies-filter-reference",children:"Policies filter reference"})," for more information."]})]}),"\n",(0,n.jsx)(s.h3,{id:"policies-page-filters",children:"Policies page filters"}),"\n",(0,n.jsx)(s.p,{children:"This section defines the Policies page filters:"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Filter"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Examples or possible values"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Modes"}),(0,n.jsxs)(s.td,{children:["Filter by the workflow action Semgrep performs when a rule detects a finding. An additional filter, ",(0,n.jsx)(s.strong,{children:"Disabled"}),", is provided for rules that you have turned off and are no longer included for scanning."]}),(0,n.jsxs)(s.td,{children:["See ",(0,n.jsx)(s.a,{href:"#block-a-pr-or-mr-through-rule-modes",children:"Rule modes"})," documentation."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Category"}),(0,n.jsx)(s.td,{children:"Filter by the type of security issue or vulnerability that the rule detects."}),(0,n.jsx)(s.td,{children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"Dangerous method or function"}),(0,n.jsx)("li",{children:"SQL injection"}),(0,n.jsx)("li",{children:"Active debug code"})]})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Severities"}),(0,n.jsx)(s.td,{children:"The higher the severity, the more critical the issues that a rule detects."}),(0,n.jsx)(s.td,{children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"Critical"}),(0,n.jsx)("li",{children:"High"}),(0,n.jsx)("li",{children:"Medium"}),(0,n.jsx)("li",{children:"Low"})]})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Confidence"}),(0,n.jsx)(s.td,{children:"Filter by the confidence of the rule to detect true positives."}),(0,n.jsx)(s.td,{children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"High"}),(0,n.jsx)("li",{children:"Medium"}),(0,n.jsx)("li",{children:"Low"})]})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Source"}),(0,n.jsx)(s.td,{children:"Filter by the origin of a rule."}),(0,n.jsxs)(s.td,{children:[(0,n.jsxs)("ul",{children:[(0,n.jsxs)("li",{children:[(0,n.jsx)("strong",{children:"Pro:"})," Authored by Semgrep with cross-file (interfile) and cross-function (interprocedural) analysis capabilities, providing you with enhanced scan accuracy. For more information, see ",(0,n.jsxs)("a",{href:"/semgrep-code/pro-rules/",children:[(0,n.jsx)("i",{class:"fa-regular fa-file-lines"})," Pro rules."]})]}),(0,n.jsxs)("li",{children:[(0,n.jsx)("strong",{children:"Community:"})," Authored by Semgrep, Inc or external contributors such as Trail of Bits."]}),(0,n.jsxs)("li",{children:[(0,n.jsx)("strong",{children:"Custom:"})," Rules created within your Semgrep organization. For more information, see ",(0,n.jsxs)("a",{href:"/writing-rules/private-rules/",children:[(0,n.jsx)("i",{class:"fa-regular fa-file-lines"})," Private rules"]}),"."]})]}),"."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Available rule upgrades"}),(0,n.jsx)(s.td,{children:"Filter for rules where there exist improved versions to those using paid Semgrep products."}),(0,n.jsx)(s.td,{})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Ruleset"}),(0,n.jsx)(s.td,{children:"Filter by the name of an existing ruleset."}),(0,n.jsx)(s.td,{children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:(0,n.jsxs)("a",{href:"https://semgrep.dev/p/xss",children:[(0,n.jsx)("i",{class:"fas fa-external-link fa-xs"})," XSS ruleset"]})}),(0,n.jsx)("li",{children:(0,n.jsxs)("a",{href:"https://semgrep.dev/p/react",children:[(0,n.jsx)("i",{class:"fas fa-external-link fa-xs"})," React ruleset"]})})]})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Language"}),(0,n.jsx)(s.td,{children:"Filter by programming language"}),(0,n.jsx)(s.td,{children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"Python"}),(0,n.jsx)("li",{children:"JavaScipt"}),(0,n.jsx)("li",{children:"Ruby"})]})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Minimum count of findings"}),(0,n.jsx)(s.td,{children:"Filter by the number of findings."}),(0,n.jsx)(s.td,{children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"10"}),(0,n.jsx)("li",{children:"100"}),(0,n.jsx)("li",{children:"500"})]})})]})]})]}),"\n",(0,n.jsx)(s.admonition,{type:"tip",children:(0,n.jsxs)(s.p,{children:["Use ",(0,n.jsx)(s.strong,{children:"Minimum count of findings"})," to identify rules generating a lot of findings. This may be an indication of false positives or noise."]})}),"\n",(0,n.jsx)(s.h3,{id:"rule-entries-reference",children:"Rule entries reference"}),"\n",(0,n.jsx)(s.p,{children:"This section defines the columns of the rule entries in the Policies page:"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Filter"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Examples or possible values"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Rule name"}),(0,n.jsx)(s.td,{children:"Name of the rule that Semgrep Code uses for scanning."}),(0,n.jsx)(s.td,{children:(0,n.jsxs)(s.a,{href:"https://semgrep.dev/playground/s/KPzL",children:[(0,n.jsx)("i",{class:"fas fa-external-link fa-xs"})," ",(0,n.jsx)(s.code,{children:"docs-print-to-logger"})]})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Labels"}),(0,n.jsx)(s.td,{children:"Metadata describing the rule. This includes the rule's language, category (good security practices, coding standards), and more."}),(0,n.jsx)(s.td,{children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"Security"}),(0,n.jsx)("li",{children:"Code injection"}),(0,n.jsx)("li",{children:"PHP"})]})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Open findings"}),(0,n.jsx)(s.td,{children:"The number of open findings that the rule has detected across all scans."}),(0,n.jsx)(s.td,{children:"n/a"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Fix rate"}),(0,n.jsx)(s.td,{children:"The percentage of findings that are fixed through changes to the code."}),(0,n.jsx)(s.td,{children:"n/a"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Severity"}),(0,n.jsx)(s.td,{children:"The higher the severity, the more critical the issues that a rule detects."}),(0,n.jsx)(s.td,{children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"High"}),(0,n.jsx)("li",{children:"Medium"}),(0,n.jsx)("li",{children:"Low"})]})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Confidence"}),(0,n.jsx)(s.td,{children:"Indicates confidence of the rule to detect true positives."}),(0,n.jsx)(s.td,{children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"High"}),(0,n.jsx)("li",{children:"Medium"}),(0,n.jsx)("li",{children:"Low"})]})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Source"}),(0,n.jsx)(s.td,{children:"Indicates the origin of a rule."}),(0,n.jsxs)(s.td,{children:[(0,n.jsxs)("ul",{children:[(0,n.jsxs)("li",{children:[(0,n.jsx)("strong",{children:"Pro:"})," Authored by Semgrep with cross-file (interfile) and cross-function (interprocedural) analysis capabilities, providing you with enhanced scan accuracy. For more information, see ",(0,n.jsxs)("a",{href:"/semgrep-code/pro-rules/",children:[(0,n.jsx)("i",{class:"fa-regular fa-file-lines"})," Pro rules."]})]}),(0,n.jsxs)("li",{children:[(0,n.jsx)("strong",{children:"Community:"})," Authored by Semgrep, Inc or external contributors such as Trail of Bits."]}),(0,n.jsxs)("li",{children:[(0,n.jsx)("strong",{children:"Custom:"})," Rules created within your Semgrep organization. For more information, see ",(0,n.jsxs)("a",{href:"/writing-rules/private-rules/",children:[(0,n.jsx)("i",{class:"fa-regular fa-file-lines"})," Private rules"]}),"."]})]}),"."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Ruleset"}),(0,n.jsx)(s.td,{children:"Rules are also organized in rulesets. Rulesets are groups of rules related through a programming language, OWASP category, or framework."}),(0,n.jsx)(s.td,{children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:(0,n.jsxs)("a",{href:"https://semgrep.dev/p/xss",children:[(0,n.jsx)("i",{class:"fas fa-external-link fa-xs"})," XSS ruleset"]})}),(0,n.jsx)("li",{children:(0,n.jsxs)("a",{href:"https://semgrep.dev/p/react",children:[(0,n.jsx)("i",{class:"fas fa-external-link fa-xs"})," React ruleset"]})})]})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Mode"}),(0,n.jsxs)(s.td,{children:["Specifies what workflow action Semgrep performs when a rule detects a finding. An additional filter, ",(0,n.jsx)(s.strong,{children:"Disabled"}),", is provided for rules that you have turned off and are no longer included for scanning."]}),(0,n.jsxs)(s.td,{children:["See ",(0,n.jsx)(s.a,{href:"#rule-modes",children:"Rule modes"})," documentation."]})]})]})]}),"\n",(0,n.jsx)(s.h2,{id:"add-rules",children:"Add rules"}),"\n",(0,n.jsx)(s.p,{children:"To add rules, follow these steps:"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:["On the ",(0,n.jsxs)(s.a,{href:"https://semgrep.dev/orgs/-/policies",children:[(0,n.jsx)("i",{class:"fas fa-external-link fa-xs"})," Policies"]})," page, click ",(0,n.jsx)(s.strong,{children:"Add Rules"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["You are redirected to the ",(0,n.jsxs)(s.a,{href:"https://semgrep.dev/explore",children:[(0,n.jsx)("i",{class:"fas fa-external-link fa-xs"})," Semgrep Registry"]})," page. Explore the page, open cards of individual rules, and then click ",(0,n.jsx)(s.strong,{children:"Add to Policy"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Specify the workflow action of the rule that you are adding. Select either:","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Monitor"}),"\n",(0,n.jsx)(s.li,{children:"Comment"}),"\n",(0,n.jsx)(s.li,{children:"Block"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"add-custom-rules-to-your-policies",children:"Add custom rules to your Policies"}),"\n",(0,n.jsxs)(s.p,{children:["To add custom rules, use the Semgrep Editor. See ",(0,n.jsxs)(s.a,{href:"/semgrep-code/editor#add-a-rule-to-the-policies-page",children:[(0,n.jsx)("i",{class:"fa-regular fa-file-lines"})," Setting code standards with the Policies page"]}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["If you have Semgrep Assistant enabled for your organization, ",(0,n.jsx)(s.a,{href:"/semgrep-assistant/overview#custom-rules-editor-beta",children:"Assistant can help you write custom rules"})," to find patterns and vulnerabilities specific to your codebase."]}),"\n",(0,n.jsx)(s.h3,{id:"add-rulesets-to-your-policies-from-the-registry",children:"Add rulesets to your Policies from the Registry"}),"\n",(0,n.jsx)(s.p,{children:"Instead of adding individual rules to your Policies, you can add rulesets, which are groups of rules related through a programming language, OWASP category, or framework. The Semgrep team curates the rulesets."}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:["On the ",(0,n.jsxs)(s.a,{href:"https://semgrep.dev/orgs/-/policies",children:[(0,n.jsx)("i",{class:"fas fa-external-link fa-xs"})," Policies"]})," page, click ",(0,n.jsx)(s.strong,{children:"Add Rules"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["You are redirected to the ",(0,n.jsxs)(s.a,{href:"https://semgrep.dev/explore",children:[(0,n.jsx)("i",{class:"fas fa-external-link fa-xs"})," Semgrep Registry"]})," page. Explore the page to find the ruleset you're interested in adding."]}),"\n",(0,n.jsxs)(s.li,{children:["Click the ruleset to open its ",(0,n.jsx)(s.strong,{children:"Explore"})," page. This page lets you view the included rules and provides instructions for testing and running the ruleset locally before adding it to your policies."]}),"\n",(0,n.jsxs)(s.li,{children:["Click ",(0,n.jsx)(s.strong,{children:"Add to Policy"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Specify the workflow action for the rules that you are adding by selecting one of these options:","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Monitor"}),"\n",(0,n.jsx)(s.li,{children:"Comment"}),"\n",(0,n.jsx)(s.li,{children:"Block"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["If Semgrep adds rules to the ruleset in the future, they will automatically be added to your Policies in the same mode that you select. You can change the default mode for the current and future rules by re-adding the ruleset through the Registry and choosing a different mode. You ",(0,n.jsx)(s.em,{children:"cannot"})," change the mode of all existing rules associated with the ruleset using the Policies page, since this only makes every rule that you changed an exception to the default."]}),"\n",(0,n.jsx)(s.h4,{id:"filtering-behavior",children:"Filtering behavior"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Filter types such as ",(0,n.jsx)(s.strong,{children:"Language"})," and ",(0,n.jsx)(s.strong,{children:"Technology"})," use ",(0,n.jsx)(s.code,{children:"AND"})," logic. This means that search terms must match all filters. For example, selecting Java (a ",(0,n.jsx)(s.strong,{children:"Language"}),") and security (a ",(0,n.jsx)(s.strong,{children:"Category"}),") shows only rules with both properties (Java and security)."]}),"\n",(0,n.jsxs)(s.li,{children:["Adding filters of the same type use ",(0,n.jsx)(s.code,{children:"OR "}),"logic. This means that search terms can match any of the filters for that type. For example, selecting Java and Python (both ",(0,n.jsx)(s.strong,{children:"Languages"}),") shows rules with either language."]}),"\n",(0,n.jsx)(s.li,{children:"A gem icon (\ud83d\udc8e) denotes Semgrep Pro rules."}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"disable-rules",children:"Disable rules"}),"\n",(0,n.jsxs)(s.p,{children:["See ",(0,n.jsx)(s.a,{href:"/semgrep-code/triage-remediation#disable-a-ruleset-or-a-rule",children:"Triage and remediate findings"})," for information on how to disable a rule or a ruleset."]}),"\n",(0,n.jsx)(s.h2,{id:"rule-modes",children:"Rule modes"}),"\n",(0,n.jsxs)(s.p,{children:["Semgrep enables you to choose a ",(0,n.jsx)(s.strong,{children:"workflow action"})," based on the presence of a finding. Workflow actions include:"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Failing a CI job. Semgrep returns exit code ",(0,n.jsx)(s.code,{children:"1"}),", and you can use this result to set up additional checks to enforce a block in your CI/CD pipeline. This action applies to both full scans and ",(0,n.jsx)(s.a,{href:"/semgrep-code/glossary#diff-aware-scan",children:"diff-aware scans"}),"."]}),"\n",(0,n.jsx)(s.li,{children:"Leaving a PR or MR comment."}),"\n",(0,n.jsx)(s.li,{children:"Notifying select channels, such as private Slack channels or webhooks."}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Semgrep Code provides three rule modes:"}),"\n",(0,n.jsx)(t.Ay,{}),"\n",(0,n.jsxs)(s.p,{children:["Semgrep Code provides first-time users with the ",(0,n.jsxs)(s.a,{href:"https://semgrep.dev/p/default",children:[(0,n.jsx)("i",{class:"fas fa-external-link fa-xs"})," Default ruleset"]}),". These rules are initially placed in the Monitor column. As you develop confidence in these rules, you are able to change their modes to Comment or Block, ensuring that developers remain free of friction from false positives."]}),"\n",(0,n.jsx)(s.h2,{id:"block-a-pr-or-mr-through-rule-modes",children:"Block a PR or MR through rule modes"}),"\n",(0,n.jsxs)(s.p,{children:["The following instructions walk you through changing the rule mode for rules that generate high severity findings to ",(0,n.jsx)(s.strong,{children:"block"}),". Whenever Semgrep identifies such findings, it returns exit code ",(0,n.jsx)(s.code,{children:"1"}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["You can use this result to set up additional checks to enforce a block in your CI/CD pipeline, such as not allowing the merge of the PR/MR. The process to implement a block on a PR or MR after Semgrep exits with error code ",(0,n.jsx)(s.code,{children:"1"})," is dependent on your CI provider. Review your CI provider's documentation for further information."]}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:["Sign in to ",(0,n.jsxs)(s.a,{href:"https://semgrep.dev/login",children:[(0,n.jsx)("i",{class:"fas fa-external-link fa-xs"})," Semgrep AppSec Platform"]}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Navigate to ",(0,n.jsx)(s.strong,{children:"Rules > Policies > Code"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Filter for the applicable rules. For example, select ",(0,n.jsx)(s.strong,{children:"High"})," under ",(0,n.jsx)(s.strong,{children:"Severities"})," to find all of the rules that generate high severity findings if they match any part of your code."]}),"\n",(0,n.jsxs)(s.li,{children:["Select either the box next to ",(0,n.jsxs)(s.strong,{children:[(0,n.jsx)("span",{className:"placeholder",children:"Number"})," matching rules"]})," or select individual checkboxes next to one or more rules. These are the rules whose mode you will change in the next step."]}),"\n",(0,n.jsxs)(s.li,{children:["Click ",(0,n.jsxs)(s.strong,{children:["Change modes ",(0,n.jsx)("span",{className:"placeholder",children:"Number"})]})," and select ",(0,n.jsx)(s.strong,{children:"Block"}),"."]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"multiple-policies",children:"Multiple policies"}),"\n",(0,n.jsx)(s.admonition,{title:"Multiple policies feature (private beta)",type:"info",children:(0,n.jsxs)(s.p,{children:["If you have the ",(0,n.jsx)(s.strong,{children:"multiple policies"})," feature, you can customize the rules that run on specific repositories. Currently, this beta is not accepting new participants."]})}),"\n",(0,n.jsx)(s.p,{children:"The multiple policies feature enables users to customize the rules that run on specific projects (repositories). Users create different policies that projects can be assigned to."}),"\n",(0,n.jsxs)(s.p,{children:["This feature makes use of a ",(0,n.jsx)(s.strong,{children:"Global Policy"})," that runs on ",(0,n.jsx)(s.strong,{children:"all"})," projects. Projects cannot be unassigned from it."]}),"\n",(0,n.jsx)(s.p,{children:"You can create a new policy and add one or more projects, then select rules to add to the policy. Projects are assigned manually to additional policies, and multiple projects can be added by searching repository names or tags."}),"\n",(0,n.jsxs)(s.p,{children:["During a scan, the repositories assigned to your custom policy run all of the rules from the ",(0,n.jsx)(s.strong,{children:"Global Policy"})," as well as all the rules from your custom policy."]}),"\n",(0,n.jsx)(s.h3,{id:"resolve-workflow-actions-in-multiple-policies",children:"Resolve workflow actions in multiple policies"}),"\n",(0,n.jsx)(s.p,{children:"If a rule is in multiple policies, then the rule is deduplicated and Semgrep prioritizes the workflow action based on the rule mode, where precedence is as follows:"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsx)(s.li,{children:"Block"}),"\n",(0,n.jsx)(s.li,{children:"Comment"}),"\n",(0,n.jsx)(s.li,{children:"Monitor"}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["For example, if an instance of ",(0,n.jsx)(s.code,{children:"Rule A"})," is set to ",(0,n.jsx)(s.strong,{children:"Block"}),", the scan fails for PRs with any findings from that rule, even if the same ",(0,n.jsx)(s.code,{children:"Rule A"})," is set to ",(0,n.jsx)(s.strong,{children:"Monitor"})," in another policy applied to that repository."]}),"\n",(0,n.jsx)(s.p,{children:"To ensure that the workflow action is resolved as expected, add the specific rule to the desired policy mode. This will override any behavior that it inherits from the rulesets it belongs to."})]})}function u(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},98971:(e,s,i)=>{i.d(s,{A:()=>r});const r=i.p+"assets/images/policies-4a611dec93f05102de0ca3135bd85def.png"}}]);