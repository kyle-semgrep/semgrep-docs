"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[97670],{26355:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"metrics","title":"Semgrep metrics","description":"Semgrep CLI may collect aggregate metrics to help improve the product. This document describes:","source":"@site/docs/metrics.md","sourceDirName":".","slug":"/metrics","permalink":"/semgrep-docs/metrics","draft":false,"unlisted":false,"editUrl":"https://github.com/kyle-semgrep/semgrep-docs/edit/main/docs/metrics.md","tags":[],"version":"current","frontMatter":{"slug":"metrics","append_help_link":true},"sidebar":"aboutSidebar","previous":{"title":"Compare Semgrep to SonarQube","permalink":"/semgrep-docs/faq/comparisons/sonarqube"},"next":{"title":"Contributing overview","permalink":"/semgrep-docs/contributing/contributing"}}');var i=s(74848),t=s(28453);const d={slug:"metrics",append_help_link:!0},l="Semgrep metrics",c={},a=[{value:"Principles",id:"principles",level:2},{value:"Automatic collection, opt-in, and opt-out",id:"automatic-collection-opt-in-and-opt-out",level:2},{value:"Data NOT collected",id:"data-not-collected",level:2},{value:"Data NOT collected ever",id:"data-not-collected-ever",level:3},{value:"Data NOT collected unless explicitly requested",id:"data-not-collected-unless-explicitly-requested",level:3},{value:"Data collected as metrics",id:"data-collected-as-metrics",level:2},{value:"Environmental",id:"environmental",level:3},{value:"Performance",id:"performance",level:3},{value:"Parse Rates",id:"parse-rates",level:3},{value:"Errors",id:"errors",level:3},{value:"Value",id:"value",level:3},{value:"Extension",id:"extension",level:3},{value:"Pseudoanonymization",id:"pseudoanonymization",level:3},{value:"Description of metrics fields",id:"description-of-metrics-fields",level:2},{value:"Anonymous user ID",id:"anonymous-user-id",level:3},{value:"Feature usage",id:"feature-usage",level:3},{value:"Sample metrics",id:"sample-metrics",level:3},{value:"Data collected when explicitly requested",id:"data-collected-when-explicitly-requested",level:2},{value:"Debugging data collected when traces are requested",id:"debugging-data-collected-when-traces-are-requested",level:2},{value:"Registry fetches",id:"registry-fetches",level:2},{value:"Data sharing",id:"data-sharing",level:2}];function o(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"semgrep-metrics",children:"Semgrep metrics"})}),"\n",(0,i.jsx)(n.p,{children:"Semgrep CLI may collect aggregate metrics to help improve the product. This document describes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#principles",children:"the principles that guide our data-collection decisions"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#automatic-collection-opt-in-and-opt-out",children:"how to change when Semgrep sends metrics"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#data-not-collected",children:"what data is not collected"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#data-collected-as-metrics",children:"what data is collected"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"principles",children:"Principles"}),"\n",(0,i.jsx)(n.p,{children:"These principles inform our decisions around data collection:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Transparency"}),": Collect and use data in a way that is clearly explained to the user and benefits them"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"User control"}),": Put users in control of their data at all times"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Limited data"}),": Collect what is needed, pseudoanonymize where possible, and delete when no longer necessary"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"automatic-collection-opt-in-and-opt-out",children:"Automatic collection, opt-in, and opt-out"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"$ semgrep --config=myrule.yaml  # \u2192 no metrics (loading rules from local file)\n$ semgrep --config=p/python     # \u2192 metrics enabled (fetching Registry)\n$ semgrep login && semgrep ci   # \u2192 metrics enabled (logged in to semgrep.dev)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Semgrep does ",(0,i.jsx)(n.strong,{children:"not"})," enable metrics when running with only local configuration files or command-line search patterns."]}),"\n",(0,i.jsxs)(n.p,{children:["Semgrep does enable metrics if rules are loaded from the ",(0,i.jsx)(n.a,{href:"https://semgrep.dev/r",children:"Semgrep Registry"}),".\nThis helps maintainers improve the correctness and performance of registry rules."]}),"\n",(0,i.jsx)(n.p,{children:"Metrics may also be configured to be sent on every run, or never sent."}),"\n",(0,i.jsxs)(n.p,{children:["To configure metrics, pass the ",(0,i.jsx)(n.code,{children:"--metrics"})," option to Semgrep:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--metrics auto"}),": (default) metrics are sent whenever rules are pulled from the ",(0,i.jsx)(n.a,{href:"https://semgrep.dev/r",children:"Semgrep Registry"})," or the user is logged in."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--metrics on"}),": metrics are sent on every Semgrep run"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--metrics off"}),": metrics are never sent"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Alternatively, set the ",(0,i.jsx)(n.code,{children:"SEMGREP_SEND_METRICS"})," environment variable to ",(0,i.jsx)(n.code,{children:"auto"}),", ",(0,i.jsx)(n.code,{children:"on"}),", or ",(0,i.jsx)(n.code,{children:"off"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Note that certain Semgrep integrators turn on metrics for every run.\nFor example, ",(0,i.jsx)(n.a,{href:"https://gitlab.com/gitlab-org/security-products/analyzers/semgrep",children:"GitLab's Semgrep SAST analyzer"})," uses ",(0,i.jsx)(n.code,{children:"--metrics on"})," by default."]}),"\n",(0,i.jsx)(n.h2,{id:"data-not-collected",children:"Data NOT collected"}),"\n",(0,i.jsx)(n.h3,{id:"data-not-collected-ever",children:"Data NOT collected ever"}),"\n",(0,i.jsx)(n.p,{children:"We strive to balance our desire to collect data for improving Semgrep\nwith our users' need for privacy and security.\nAfter all, we are a security tool!\nThe following never leave your environment and are not sent or shared with anyone."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Source code"}),"\n",(0,i.jsx)(n.li,{children:"Private rules"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"data-not-collected-unless-explicitly-requested",children:"Data NOT collected unless explicitly requested"}),"\n",(0,i.jsx)(n.p,{children:"The following data will never leave your environment as part of metrics."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Filenames"}),"\n",(0,i.jsx)(n.li,{children:"Git commit hashes, timestamps, messages, authors"}),"\n",(0,i.jsx)(n.li,{children:"User-identifiable data about Semgrep\u2019s findings in your code, including finding messages"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["This data will be sent to Semgrep AppSec Platform only if you explicitly request it,\nsuch as with ",(0,i.jsx)(n.code,{children:"semgrep login && semgrep ci"})," to connect with Semgrep AppSec Platform.\nEven in that case, your source code and private rules will never be sent."]}),"\n",(0,i.jsx)(n.h2,{id:"data-collected-as-metrics",children:"Data collected as metrics"}),"\n",(0,i.jsx)(n.p,{children:"Semgrep CLI collects data to improve the user experience.\nFive types of data are collected:"}),"\n",(0,i.jsx)(n.h3,{id:"environmental",children:"Environmental"}),"\n",(0,i.jsx)(n.p,{children:"Environmental data provide contextual data about Semgrep CLI\u2019s runtime environment, as well as information that helps debug any issues users may be facing; e.g."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"How long the command took to run"}),"\n",(0,i.jsx)(n.li,{children:"The version of Semgrep CLI"}),"\n",(0,i.jsxs)(n.li,{children:["An ",(0,i.jsx)(n.a,{href:"#anonymous-user-id",children:"anonymous user ID"})," that identifies the machine"]}),"\n",(0,i.jsx)(n.li,{children:"IP address that triggers a run"}),"\n",(0,i.jsx)(n.li,{children:"Value of the CI environment variable, if set"}),"\n",(0,i.jsx)(n.li,{children:"Pseudoanonymized hash of the scanned project\u2019s name"}),"\n",(0,i.jsx)(n.li,{children:"Pseudoanonymized hash of the rule definitions run"}),"\n",(0,i.jsxs)(n.li,{children:["Pseduoanonymized hash of the config option.\n",(0,i.jsxs)(n.em,{children:["(Note that when a config option downloads a ruleset from the ",(0,i.jsx)(n.a,{href:"https://semgrep.dev",children:"https://semgrep.dev"})," registry, ",(0,i.jsx)(n.a,{href:"#feature-usage",children:"feature usage metrics"})," still include the ruleset name in plain text.)"]})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"performance",children:"Performance"}),"\n",(0,i.jsx)(n.p,{children:"Performance data enable understanding of which rules and types of files are slow in the aggregate so Semgrep, Inc can improve the program-analysis engine, query optimizer, and debug slow rules; e.g."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Runtime duration"}),"\n",(0,i.jsx)(n.li,{children:"Duration of individual phases (e.g. parsing)"}),"\n",(0,i.jsx)(n.li,{children:"Total number of rules"}),"\n",(0,i.jsx)(n.li,{children:"Total number of files"}),"\n",(0,i.jsx)(n.li,{children:"Project size in bytes"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"parse-rates",children:"Parse Rates"}),"\n",(0,i.jsx)(n.p,{children:"Aggregated parse rate information is reported on a per-language basis; e.g.,"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Number of targeted files"}),"\n",(0,i.jsx)(n.li,{children:"Number of files without any parse-related error"}),"\n",(0,i.jsx)(n.li,{children:"Number of bytes across targeted files"}),"\n",(0,i.jsx)(n.li,{children:"Number of bytes without any parse-related error"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"errors",children:"Errors"}),"\n",(0,i.jsx)(n.p,{children:"High-level error and warning classes encountered when run; e.g."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Semgrep\u2019s return code"}),"\n",(0,i.jsx)(n.li,{children:"The number of errors"}),"\n",(0,i.jsx)(n.li,{children:"Compile-time error names, e.g., MaxFileSizeExceeded, SystemOutOfMemory, UnknownFileEncoding"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"value",children:"Value"}),"\n",(0,i.jsx)(n.p,{children:"Data that indicate how useful a run is for the end user; e.g."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Number of raised findings"}),"\n",(0,i.jsx)(n.li,{children:"Number of ignored findings"}),"\n",(0,i.jsx)(n.li,{children:"Pseudoanonymized hashes of the rule definitions that yield findings"}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.a,{href:"#feature-usage",children:"features used"})," during the scan"]}),"\n",(0,i.jsx)(n.li,{children:"The engine type requested for the scan"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"extension",children:"Extension"}),"\n",(0,i.jsxs)(n.p,{children:["Additional data is reported when used in conjunction with an IDE integration, such as the ",(0,i.jsx)(n.a,{href:"https://github.com/semgrep/semgrep-vscode",children:"Semgrep VS Code Extension"}),", that help us understand what IDEs are used and how helpful the integrations are for users; e.g."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"IDE being used"}),"\n",(0,i.jsx)(n.li,{children:"Version of IDE integration"}),"\n",(0,i.jsx)(n.li,{children:"Number of fixes triggered through the integration"}),"\n",(0,i.jsx)(n.li,{children:"Number of findings ignored through the integration"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Note: For all officially supported Semgrep IDE integrations, these metrics can be disabled via settings in the IDE. By default these settings follow any global telemetry/metrics settings the user may have already set for the IDE itself."}),"\n",(0,i.jsx)(n.h3,{id:"pseudoanonymization",children:"Pseudoanonymization"}),"\n",(0,i.jsx)(n.p,{children:"Certain identifying data (e.g. project URLs) are pseudoanonymized before being sent to the Semgrep, Inc backend."}),"\n",(0,i.jsx)(n.p,{children:'"Pseudoanonymized" means the data are transformed using a deterministic cryptographically secure hash. When the input data are unknown, this hash is expensive to reverse. However, when input data are known, a reverse dictionary of identifiers to hashes can be built. Hence, data are anonymous only when the source values are unknown.'}),"\n",(0,i.jsx)(n.p,{children:"We use a deterministic hash to:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Track performance and value improvements over successive runs on projects"}),"\n",(0,i.jsx)(n.li,{children:"Remove test data from our metrics"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Using a deterministic hash, however, implies:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"An entity that independently knows the value of an input datum AND who has access to Semgrep, Inc's metrics data could access metrics for that known datum"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Semgrep, Inc will:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Treat collected metrics data as secret, using application-security best practices, including (but not limited to)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Encryption during transit and rest"}),"\n",(0,i.jsx)(n.li,{children:"Strict access control to data-storage systems"}),"\n",(0,i.jsx)(n.li,{children:'Application-security-policy requirements for third parties (e.g. cloud-service providers; see "data sharing" below)'}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Only correlate hashed data to input data when these inputs are already known to Semgrep, Inc (e.g. publicly available project URLs for open-source projects, or projects that log in to the Semgrep Registry)"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"description-of-metrics-fields",children:"Description of metrics fields"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Category"}),(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Use Case"}),(0,i.jsx)(n.th,{children:"Example Datum"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Environment"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Timestamps (started/sent)"}),(0,i.jsx)(n.td,{children:"Time when the event fired"}),(0,i.jsx)(n.td,{children:"Understanding tool usage over time"}),(0,i.jsx)(n.td,{children:"2021-05-10T21:05:06+00:00"}),(0,i.jsx)(n.td,{children:"String"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Event ID"}),(0,i.jsx)(n.td,{children:"A random UUID generated when sending the event."}),(0,i.jsx)(n.td,{children:"Deduplicating events in case of issues during transmission"}),(0,i.jsx)(n.td,{children:"222bcccd-9dc2-4d10-ac3a-5692460e77ee"}),(0,i.jsx)(n.td,{children:"String"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"#anonymous-user-id",children:"Anonymous User ID"})}),(0,i.jsx)(n.td,{children:"A random UUID generated on first run."}),(0,i.jsx)(n.td,{children:"Unique users per ruleset and feature. Understanding percentage of logged in users."}),(0,i.jsx)(n.td,{children:"5f52484c-3f82-4779-9353-b29bbd3193b6"}),(0,i.jsx)(n.td,{children:"String"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Version"}),(0,i.jsx)(n.td,{children:"Semgrep version being used"}),(0,i.jsx)(n.td,{children:"Reproduce and debug issues with specific versions"}),(0,i.jsx)(n.td,{children:"0.51.0"}),(0,i.jsx)(n.td,{children:"String"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Project hash"}),(0,i.jsx)(n.td,{children:"One-way hash of the project URL"}),(0,i.jsx)(n.td,{children:"Understand performance and accuracy improvements"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"c65437265631ab2566802d4d90797b27fbe0f608dceeb9451b979d1671c4bc1a"})}),(0,i.jsx)(n.td,{children:"String"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Rules hash"}),(0,i.jsx)(n.td,{children:"One-way hash of the rule definitions"}),(0,i.jsx)(n.td,{children:"Understand performance improvements"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"b03e452f389e5a86e56426c735afef13686b3e396499fc3c42561f36f6281c43"})}),(0,i.jsx)(n.td,{children:"String"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Config hash"}),(0,i.jsx)(n.td,{children:"One-way hash of the config argument"}),(0,i.jsx)(n.td,{children:"Understand performance and accuracy improvements"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ede96c41b57de3e857090fb3c486e69ad8efae3267bac4ac5fbc19dde7161094"})}),(0,i.jsx)(n.td,{children:"String"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Is authenticated"}),(0,i.jsxs)(n.td,{children:["Whether the user logged in to semgrep.dev with ",(0,i.jsx)(n.code,{children:"semgrep login"})]}),(0,i.jsx)(n.td,{children:"Understand popularity of logged in features"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"false"})}),(0,i.jsx)(n.td,{children:"Boolean"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Deployment ID"}),(0,i.jsx)(n.td,{children:"The ID organization associated with the logged in account"}),(0,i.jsx)(n.td,{children:"Understand popularity of logged in features by organization"}),(0,i.jsx)(n.td,{children:"1234"}),(0,i.jsx)(n.td,{children:"Number"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Integration name"}),(0,i.jsx)(n.td,{children:"If Semgrep is being called by another tool, optional name of that integration"}),(0,i.jsx)(n.td,{children:"Reproduce and debug issues specific integrations"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"gitlab"})}),(0,i.jsx)(n.td,{children:"String"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"CI"}),(0,i.jsx)(n.td,{children:"Notes if Semgrep is running in CI and the name of the provider"}),(0,i.jsx)(n.td,{children:"Reproduce and debug issues with specific CI providers"}),(0,i.jsx)(n.td,{children:"GitLabCI v0.13.12"}),(0,i.jsx)(n.td,{children:"String"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Client IP"}),(0,i.jsx)(n.td,{children:"IP address that triggered a run"}),(0,i.jsx)(n.td,{children:"Understand broad ruleset usage"}),(0,i.jsx)(n.td,{children:"0.0.0.0"}),(0,i.jsx)(n.td,{children:"String"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Performance"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Duration"}),(0,i.jsx)(n.td,{children:"How long the command took to run"}),(0,i.jsx)(n.td,{children:"Understanding aggregate performance improvements and regressions"}),(0,i.jsx)(n.td,{children:"14.13"}),(0,i.jsx)(n.td,{children:"Number"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Total Rules"}),(0,i.jsx)(n.td,{children:"Count of rules"}),(0,i.jsx)(n.td,{children:"Understand how duration is affected by #rules"}),(0,i.jsx)(n.td,{children:"137"}),(0,i.jsx)(n.td,{children:"Number"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Total Files"}),(0,i.jsx)(n.td,{children:"Count of files"}),(0,i.jsx)(n.td,{children:"Understand how duration is affected by #files"}),(0,i.jsx)(n.td,{children:"4378"}),(0,i.jsx)(n.td,{children:"Number"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Total Bytes"}),(0,i.jsx)(n.td,{children:"Summation of target file size"}),(0,i.jsx)(n.td,{children:"Understand how duration is related to total size of all target files"}),(0,i.jsx)(n.td,{children:"40838239"}),(0,i.jsx)(n.td,{children:"Number"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Rule Stats"}),(0,i.jsx)(n.td,{children:"Performance statistics (w/ rule hashes) for slowest rules"}),(0,i.jsx)(n.td,{children:"Debug rule performance"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'[{"ruleHash": "7c43c962dfdbc52882f80021e4d0ef2396e6a950867e81e5f61e68390ee9e166","parseTime": 0,"matchTime": 0.05480456352233887,"runTime": 0.20836973190307617,"bytesScanned": 0}]'})}),(0,i.jsx)(n.td,{children:"StatsClass[]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"File Stats"}),(0,i.jsx)(n.td,{children:"Performance statistics for slowest files"}),(0,i.jsx)(n.td,{children:"Debug rule performance"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'[{"size": 6725,"numTimesScanned": 147,"parseTime": 0.013289928436279297,"matchTime": 0.05480456352233887,"runTime": 0.20836973190307617}]'})}),(0,i.jsx)(n.td,{children:"StatsClass[]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Parsing"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Total Files"}),(0,i.jsx)(n.td,{children:"Count of files, on a per-language basis"}),(0,i.jsx)(n.td,{children:"Understand parsing performance"}),(0,i.jsx)(n.td,{children:"143"}),(0,i.jsx)(n.td,{children:"Number"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Total Bytes"}),(0,i.jsx)(n.td,{children:"Summation of target file size, likewise grouped"}),(0,i.jsx)(n.td,{children:"Understand parsing performance"}),(0,i.jsx)(n.td,{children:"41244"}),(0,i.jsx)(n.td,{children:"Number"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Parsed Files"}),(0,i.jsx)(n.td,{children:"Count of files without parse errors"}),(0,i.jsx)(n.td,{children:"Understand parsing performance"}),(0,i.jsx)(n.td,{children:"140"}),(0,i.jsx)(n.td,{children:"Number"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Parsed Bytes"}),(0,i.jsx)(n.td,{children:"Count of bytes without any parse errors"}),(0,i.jsx)(n.td,{children:"Understand parsing performance"}),(0,i.jsx)(n.td,{children:"40312"}),(0,i.jsx)(n.td,{children:"Number"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Errors"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Exit Code"}),(0,i.jsx)(n.td,{children:"Numeric exit code"}),(0,i.jsx)(n.td,{children:"Debug commonly occurring issues and aggregate error counts"}),(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:"Number"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Number of Errors"}),(0,i.jsx)(n.td,{children:"Count of errors"}),(0,i.jsx)(n.td,{children:"Understanding avg #errors"}),(0,i.jsx)(n.td,{children:"2"}),(0,i.jsx)(n.td,{children:"Number"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Number of Warnings"}),(0,i.jsx)(n.td,{children:"Count of warnings"}),(0,i.jsx)(n.td,{children:"Understanding avg #warnings"}),(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:"Number"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Errors"}),(0,i.jsx)(n.td,{children:"Array of Error Classes (compile-time-constant)"}),(0,i.jsx)(n.td,{children:"Understand most common errors users encounter"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'["UnknownLanguage", "MaxFileSizeExceeded"] '})}),(0,i.jsx)(n.td,{children:"ErrorClass[]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Warnings"}),(0,i.jsx)(n.td,{children:"Array of Warning Classes (compile-time-constant)"}),(0,i.jsx)(n.td,{children:"Understand most common warnings users encounter"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'["TimeoutExceeded"]'})}),(0,i.jsx)(n.td,{children:"WarningClass[]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Value"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Engine requested"}),(0,i.jsx)(n.td,{children:"The engine type requested by the user"}),(0,i.jsx)(n.td,{children:"Understand which engines are being used; debug engine-specific problems"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"OSS"'})}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Engine configuration"}),(0,i.jsx)(n.td,{children:"The specific engine configuration"}),(0,i.jsx)(n.td,{children:"Understand which engines are being used; debug engine-specific problems"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'{ analysis_type: "Interfile", pro_langs: true, code_config: {} }'})}),(0,i.jsx)(n.td,{children:"str"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Interfile languages used"}),(0,i.jsx)(n.td,{children:"The languages for which the interfile engine was actually invoked"}),(0,i.jsx)(n.td,{children:"Understand which interfile languages are being used; measure performance impact and errors"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'["C#"]'})}),(0,i.jsx)(n.td,{children:"str"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"#feature-usage",children:"Features used"})}),(0,i.jsx)(n.td,{children:"List of strings that identify Semgrep features used"}),(0,i.jsx)(n.td,{children:"Understand what features users find valuable, and what we could deprecate"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'["language/python", "option/deep", "option/no-git-ignore", "key/metavariable-comparison"]'})}),(0,i.jsx)(n.td,{children:"Object"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Rule hashes with findings"}),(0,i.jsx)(n.td,{children:"Map of rule hashes to number of findings"}),(0,i.jsx)(n.td,{children:"Understand which rules are providing value to the user; diagnose high false-positive rates"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'{"7c43c962dfdbc52882f80021e4d0ef2396e6a950867e81e5f61e68390ee9e166": 4}'})}),(0,i.jsx)(n.td,{children:"Object"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Total Findings"}),(0,i.jsx)(n.td,{children:"Count of all findings"}),(0,i.jsx)(n.td,{children:"Understand if rules are super noisy for the user"}),(0,i.jsx)(n.td,{children:"7"}),(0,i.jsx)(n.td,{children:"Number"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Findings per product"}),(0,i.jsx)(n.td,{children:"Count of findings broken down by product"}),(0,i.jsx)(n.td,{children:"Understand the value that each product provides to the user"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'{"code": 5, "secrets": 7, "supply-chain": 10}'})}),(0,i.jsx)(n.td,{children:"Object"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Total Nosems"}),(0,i.jsxs)(n.td,{children:["Count of all ",(0,i.jsx)(n.code,{children:"nosem"})," annotations that tell semgrep to ignore a finding"]}),(0,i.jsx)(n.td,{children:"Understand if rules are super noisy for the user"}),(0,i.jsx)(n.td,{children:"3"}),(0,i.jsx)(n.td,{children:"Number"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["|Extension||||||\n|         |Machine ID|A random UUID generated by the IDE itself|Understanding number of unique users using IDE integrations|",(0,i.jsx)(n.code,{children:"222bcccd-9dc2-4d10-ac3a-5692460e77ee"}),"|String|\n|         |Is New App Install|If the user just installed the IDE integration|Understand common issues with setting up IDE integrations|",(0,i.jsx)(n.code,{children:"false"}),"|Boolean|\n|         |Session ID|A random UUID generated everytime the integration starts up, usually when opening a project|Understand errors that commonly happen together, deduplicate errors|",(0,i.jsx)(n.code,{children:"222bcccd-9dc2-4d10-ac3a-5692460e77ee"}),"|String|"]}),"\n",(0,i.jsxs)(n.p,{children:["|         |Integration version|Current version of the IDE integration|Reproduce and debug issues with specific versions|",(0,i.jsx)(n.code,{children:"1.8.0"}),"| String|\n|         |Integration type|IDE being used|Reproduce and debug issues with specific integrations|",(0,i.jsx)(n.code,{children:"vscode"}),"|String|\n|         |Autofix count|How many autofixes have been triggered through the integration|Understand the value that the integration provides to the user in helping remediate code issue|10|Number|\n|         |Ignore count|How many findings have been ignored by the user through the integration|Understand the quality and noisiness of rules|5|Number|"]}),"\n",(0,i.jsx)(n.h3,{id:"anonymous-user-id",children:"Anonymous user ID"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:'anonymous_user_id: "5f52484c-3f82-4779-9353-b29bbd3193b6"'})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["To help improve Semgrep products, the Semgrep CLI generates a Universally Unique Identifier (UUID) which is saved locally to a ",(0,i.jsx)(n.code,{children:"~/.semgrep/settings.yml"})," file when the ID does not already exist."]}),"\n",(0,i.jsx)(n.p,{children:"The Semgrep team uses this ID to help answer the following questions:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"How many people use a given rule/ruleset/snippet?"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"This enables the Semgrep team to assess their performance,\nand we're planning to make these numbers public for all rule authors in the community."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"What percentage of users log in?"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"We use this to evaluate our success as we build new authenticated features for the Semgrep Cloud Platform."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"How often are individual subcommands and CLI features used?"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"This helps our product and developer experience teams measure feature adoption rate, analyze anonymized usage, and compare cohort behavior to improve our product offerings."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"feature-usage",children:"Feature usage"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:'"features": ["language/python", "option/deep", "option/no-git-ignore", "key/metavariable-comparison"]'})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Examples of such features are: languages scanned, CLI options passed, keys used in rules, or certain code paths reached, such as using an ",":include"," instruction in a .semgrepignore file.\nThese strings do NOT include user data or specific settings.\nAs an example, for ",(0,i.jsx)(n.code,{children:"semgrep scan --output=secret.txt"})," Semgrep sends ",(0,i.jsx)(n.code,{children:'"option/output"'})," but will NOT send ",(0,i.jsx)(n.code,{children:'"option/output=secret.txt"'}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The list of features tracked as of June 2022 is:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"language"}),": What languages were scanned"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cli-flag"}),"/",(0,i.jsx)(n.code,{children:"cli-envvar"}),": What options were configured (does NOT include their value)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"config"}),": What method was used to retrieve rules (does NOT include any of the rule)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"registry-query"}),": The value of a ",(0,i.jsx)(n.code,{children:"--config r/foo.bar.baz"})," setting, limited to the first word (e.g. ",(0,i.jsx)(n.code,{children:"r/foo.."})," in this example)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ruleset"}),": The value of a ",(0,i.jsx)(n.code,{children:"--config p/foobar"})," setting"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"semgrepignore"}),": Whether an ",(0,i.jsx)(n.code,{children:":include"})," statement was used in a .semgrepignore file"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"subcommand"}),": What subcommand was used (e.g. ",(0,i.jsx)(n.code,{children:"scan"})," or ",(0,i.jsx)(n.code,{children:"ci"}),")"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The Semgrep team uses this to answer the following questions:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"How many people use a given feature?"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"This guides our development,\nand lets us decide when and how to deprecate features."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"How does feature usage affect finding counts, error counts, and performance?"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"We use this to evaluate experimental features\nand understand their production-readiness."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Engine requested (OSS, Pro, Interfile)"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The engine requested is stored separately from the other features. This is the\nengine indicated by the user through app toggles or CLI flags. We use this for\ndebugging as well as to understand which engines people are using."}),"\n",(0,i.jsx)(n.h3,{id:"sample-metrics",children:"Sample metrics"}),"\n",(0,i.jsx)(n.p,{children:"This is a sample blob of the aggregate metrics described above:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'{\n    "started_at": "2021-05-10T21:05:06+00:00",\n    "sent_at": "2021-05-10T21:05:09+00:00",\n    "event_id": "222bcccd-9dc2-4d10-ac3a-5692460e77ee",\n    "anonymous_user_id": "5f52484c-3f82-4779-9353-b29bbd3193b6",\n    "environment": {\n        "version": "0.51.0",\n        "ci": "true",\n        "configNamesHash": "ede96c41b57de3e857090fb3c486e69ad8efae3267bac4ac5fbc19dde7161094",\n        "projectHash": "c65437265631ab2566802d4d90797b27fbe0f608dceeb9451b979d1671c4bc1a",\n        "rulesHash": "b03e452f389e5a86e56426c735afef13686b3e396499fc3c42561f36f6281c43",\n        "isAuthenticated": false\n    },\n    "performance": {\n        "runTime": 37.1234233823,\n        "numRules": 2,\n        "numTargets": 573,\n        "totalBytesScanned": 33938923,\n        "ruleStats": [{\n          "ruleHash": "7c43c962dfdbc52882f80021e4d0ef2396e6a950867e81e5f61e68390ee9e166",\n          "parseTime": 0,\n          "matchTime": 0.05480456352233887,\n          "runTime": 0.20836973190307617,\n          "bytesScanned": 0\n        }],\n        "fileStats": [{\n          "size": 6725,\n          "numTimesScanned": 147,\n          "parseTime": 0.013289928436279297,\n          "matchTime": 0.05480456352233887,\n          "runTime": 0.20836973190307617\n        }]\n    },\n    "parse_rate": {\n      "python": {\n        "num_targets": 102,\n        "targets_parsed": 101,\n        "num_bytes": 985123,\n        "bytes_parsed": 993419\n      },\n      "ruby": {\n        "num_targets": 12,\n        "targets_parsed": 12,\n        "num_bytes": 341027,\n        "bytes_parsed": 341027\n      }\n    },\n    "errors": {\n        "returnCode": 1,\n        "errors": ["UnknownLanguage"],\n        "warnings": ["MaxFileSizeExceeded", "TimeoutExceeded"]\n    },\n    "value": {\n        "ruleHashesWithFindings": {"7c43c962dfdbc52882f80021e4d0ef2396e6a950867e81e5f61e68390ee9e166": 4},\n        "numFindings": 7,\n        "numIgnored": 3,\n        "features": ["language/python", "option/deep", "option/no-git-ignore", "key/metavariable-comparison"],\n        "engineRequested": "OSS",\n        "engineConfig": { analysis_type: "Intraprocedural", pro_langs: false }\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"data-collected-when-explicitly-requested",children:"Data collected when explicitly requested"}),"\n",(0,i.jsxs)(n.p,{children:["For Semgrep AppSec Platform users running ",(0,i.jsx)(n.code,{children:"semgrep ci"})," while logged in,\ndata is sent to power your dashboard, notification, dependency search, and finding management features.\nThese data are ONLY sent when using ",(0,i.jsx)(n.code,{children:"semgrep ci"})," in a platform-connected mode\nand are not sent when not logged in."]}),"\n",(0,i.jsx)(n.p,{children:"Three types of data are sent to Semgrep, Inc servers for this logged-in use case: scan data, findings data, and dependencies data."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Scan data"})," provide information on the environment and performance.\nThey power dashboards, identify anomalies with the product, and are needed for billing.\nThe classes of scan data are:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Project identity (e.g., name, URL)"}),"\n",(0,i.jsx)(n.li,{children:"Scan environment (e.g., CI provider, OS)"}),"\n",(0,i.jsx)(n.li,{children:"Author identity (e.g., committer email)"}),"\n",(0,i.jsx)(n.li,{children:"Commit metadata (e.g., commit hash and timestamp)"}),"\n",(0,i.jsx)(n.li,{children:"Review and review-requester identifying data (e.g., pull-request ID, branch, merge base, request author)"}),"\n",(0,i.jsx)(n.li,{children:"Scan metadata, including type of scan and scan parameters (e.g., paths scanned and extensions of ignored files)"}),"\n",(0,i.jsx)(n.li,{children:"Timing metrics (e.g., time taken to scan per-rule and per-path)"}),"\n",(0,i.jsx)(n.li,{children:"Parse metrics (e.g., number of files targeted and parsed per-language)"}),"\n",(0,i.jsx)(n.li,{children:"Semgrep CLI environment (e.g., version, interpreter, timestamp)"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Findings data"})," are used to provide human readable content for notifications and integrations,\nas well tracking results as new, fixed, or duplicate. The classes of findings data are:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Check ID and metadata (as defined in the rule definition; e.g., OWASP category, message, severity)"}),"\n",(0,i.jsx)(n.li,{children:"Code location, including file path, that triggered findings"}),"\n",(0,i.jsx)(n.li,{children:"A one-way hash of a unique code identifier that includes the triggering code content"}),"\n",(0,i.jsx)(n.li,{children:"Dependency name and version (only sent when using Semgrep Supply Chain)"}),"\n",(0,i.jsx)(n.li,{children:"Source code is NOT collected"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Dependencies data"})," are used to power Dependency Search and License Compliance. The classes of\ndependencies data are:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Package name (e.g., lodash)"}),"\n",(0,i.jsx)(n.li,{children:"Package version (e.g., 1.2.3)"}),"\n",(0,i.jsx)(n.li,{children:"File path for lockfile (e.g., frontend/yarn.lock)"}),"\n",(0,i.jsx)(n.li,{children:"Analysis of external dependency calls. (e.g., from flask import Response, Response(status=204))"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"debugging-data-collected-when-traces-are-requested",children:"Debugging data collected when traces are requested"}),"\n",(0,i.jsxs)(n.p,{children:["To help debug performance issues, Semgrep CLI can send traces, enabled via ",(0,i.jsx)(n.code,{children:"--trace"}),".\nTraces are never sent unless the ",(0,i.jsx)(n.code,{children:"--trace"})," flag is included."]}),"\n",(0,i.jsx)(n.p,{children:"There are three modes of tracing."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Info (",(0,i.jsx)(n.code,{children:"--trace"}),"): basic tracing. Sends timings about each file as it undergoes pre-processing and then matching. Includes the file path and sometimes rule names."]}),"\n",(0,i.jsxs)(n.li,{children:["Debug (",(0,i.jsx)(n.code,{children:"--trace"})," with ",(0,i.jsx)(n.code,{children:"SEMGREP_TRACE_LEVEL=debug"}),"): debug tracing. Sends additional timings, particularly around functions run during taint analysis."]}),"\n",(0,i.jsxs)(n.li,{children:["Trace (",(0,i.jsx)(n.code,{children:"--trace"})," with ",(0,i.jsx)(n.code,{children:"SEMGREP_TRACE_LEVEL=trace"}),"): even more detailed debug tracing."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"All traces are sent in Opentelemetry format and may include:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Semgrep function currently running (e.g. ",(0,i.jsx)(n.code,{children:"Match_tainting_mode.check_rules"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Start time (e.g. ",(0,i.jsx)(n.code,{children:"1718775054055113"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Duration (e.g. ",(0,i.jsx)(n.code,{children:"934956"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Path (e.g. ",(0,i.jsx)(n.code,{children:"test/example/test_code.py"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Size of a file in bytes (e.g. ",(0,i.jsx)(n.code,{children:"12927"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Rule name (e.g. ",(0,i.jsx)(n.code,{children:"tainted-sql-from-http-request"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Is a taint rule (e.g. ",(0,i.jsx)(n.code,{children:"true"}),")"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Additionally, summary data is always included in the top level trace, such as:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Repo name (e.g. ",(0,i.jsx)(n.code,{children:"semgrep-app"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Folder name (e.g. ",(0,i.jsx)(n.code,{children:"tests"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Number of matches (e.g. ",(0,i.jsx)(n.code,{children:"2"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Number of errors (e.g. ",(0,i.jsx)(n.code,{children:"1"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Number of OSS rules (e.g. ",(0,i.jsx)(n.code,{children:"12"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Number of targets (e.g. ",(0,i.jsx)(n.code,{children:"128"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Languages (e.g. ",(0,i.jsx)(n.code,{children:"Java: true"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Is a diff scan (e.g. ",(0,i.jsx)(n.code,{children:"false"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Is an interfile scan (e.g. ",(0,i.jsx)(n.code,{children:"true"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Other scan settings of a similar nature. Summary data will only include information that ",(0,i.jsx)(n.code,{children:"semgrep ci"})," has access to."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Additionally, informational, warning, and error logs will be included when\ntracing is enabled, which may include:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Stacktraces from when Semgrep crashes"}),"\n",(0,i.jsx)(n.li,{children:"Warnings about high memory usage"}),"\n",(0,i.jsx)(n.li,{children:"Informational logs about which stage of scanning Semgrep is performing"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["No information will be sent in the info mode that would not be sent by ",(0,i.jsx)(n.code,{children:"semgrep ci"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"In debug and trace mode only, traces may also include:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Hashed function names (e.g. ",(0,i.jsx)(n.code,{children:"d40fdc8ef9bf7b7dd1b014533a58a05e9b98d7dd856784352201388fe5e22673"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Hashed variable names (e.g. ",(0,i.jsx)(n.code,{children:"0268934f5c43d1b5fc7d52d9efe17c69f1144b108c384c3513cbe493043712b3"}),")"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"These data help us establish if a function is being analyzed for taint more times than expected."}),"\n",(0,i.jsx)(n.p,{children:"Debug and trace mode are meant for one-off debugging of slow scans, and data from these trace modes will not be retained for more than a week."}),"\n",(0,i.jsx)(n.h2,{id:"registry-fetches",children:"Registry fetches"}),"\n",(0,i.jsx)(n.p,{children:"Certain Registry resources require log-in to the Semgrep Registry. Log in may be performed\nusing your project URL, or a Semgrep.dev API token. When using these resources, your project's\nidentity will be recorded by the Semgrep Registry servers."}),"\n",(0,i.jsx)(n.h2,{id:"data-sharing",children:"Data sharing"}),"\n",(0,i.jsx)(n.p,{children:"We use some third party companies and services to help administer and provide Semgrep, for example for hosting, customer support, product usage analytics, and database management. These third parties are permitted to handle data only to perform these tasks in a manner consistent with this document and are obligated not to disclose or use it for any other purpose."}),"\n",(0,i.jsx)(n.p,{children:"We do not share or sell the information provided to us with other organizations without explicit consent, except as described in this document."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>l});var r=s(96540);const i={},t=r.createContext(i);function d(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);