"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[24511],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(96540);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}},44215:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"contributing/philosophy","title":"Semgrep Community Edition (CE) philosophy","description":"As you think about contributing to Semgrep, consider these design principles that have guided Semgrep CLI\u2019s development so far.","source":"@site/docs/contributing/philosophy.md","sourceDirName":"contributing","slug":"/contributing/semgrep-philosophy","permalink":"/semgrep-docs/contributing/semgrep-philosophy","draft":false,"unlisted":false,"editUrl":"https://github.com/kyle-semgrep/semgrep-docs/edit/main?base=kyle-semgrep:main/docs/contributing/philosophy.md","tags":[{"inline":true,"label":"Semgrep Community Edition","permalink":"/semgrep-docs/tags/semgrep-community-edition"}],"version":"current","lastUpdatedAt":1752254305000,"frontMatter":{"slug":"semgrep-philosophy","description":"As you think about contributing to Semgrep, consider these design principles that have guided Semgrep CLI\u2019s development so far.","tags":["Semgrep Community Edition"]},"sidebar":"aboutSidebar","previous":{"title":"Claim a license","permalink":"/semgrep-docs/deployment/claim-a-license"},"next":{"title":"Semgrep AppSec Platform versus Community Edition","permalink":"/semgrep-docs/semgrep-pro-vs-oss"}}');var r=s(74848),i=s(28453);const o={slug:"semgrep-philosophy",description:"As you think about contributing to Semgrep, consider these design principles that have guided Semgrep CLI\u2019s development so far.",tags:["Semgrep Community Edition"]},a="Semgrep Community Edition (CE) philosophy",l={},c=[];function d(e){const n={a:"a",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"semgrep-community-edition-ce-philosophy",children:"Semgrep Community Edition (CE) philosophy"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/semgrep/semgrep/",children:"Semgrep CE"})," is a lightweight static analysis tool for many languages. It can find bug variants with patterns that look like source code."]}),"\n",(0,r.jsx)(n.p,{children:"As you think about contributing to Semgrep CE, consider these design principles that have guided Semgrep CE development so far:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Free"}),(0,r.jsx)("br",{}),"\n\u201cIf a developer has to convince their manager to spend a few million dollars on advanced security tools each time they change jobs, the future is bleak.\u201d \u2014 see our ",(0,r.jsx)(n.a,{href:"https://semgrep.dev/blog/2020/introducing-semgrep-and-r2c/",children:"introductory blog post"})," for more. It\u2019s important to us (and the community) that Semgrep, Inc. is able to develop a sustainable business around Semgrep to support its development, but we strongly believe the tooling itself must always be free."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Open-source software"}),(0,r.jsx)("br",{}),"\nSemgrep is ",(0,r.jsx)(n.a,{href:"https://tldrlegal.com/license/gnu-lesser-general-public-license-v2.1-(lgpl-2.1)",children:"LGPL"})," and powered not just by ",(0,r.jsx)(n.a,{href:"https://semgrep.dev/",children:"Semgrep, Inc."})," but also by community of brilliant external contributors. We welcome feedback and contributions and strive to be a welcoming community for new developers."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Fast"}),(0,r.jsx)("br",{}),"\nHigh sloc/sec scanning speed and low startup cost. We\u2019ll never be as fast as ripgrep but we want to get as close as we can."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code never leaves your machine"}),(0,r.jsx)("br",{}),"\nSemgrep by default runs entirely locally (unless you set it up yourself in a server/client mode). Code never leaves your machine to be analyzed."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Support every programming language"}),(0,r.jsx)("br",{}),"\n\u201cIf grep supports it, we will too!\u201d This even includes those that aren\u2019t thought of as programming languages, like Bash or Docker."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Run anywhere"}),(0,r.jsx)("br",{}),"\nSemgrep is small (<100 MB), has minimal runtime dependencies, and should be easily installable via your programming language or operating system package manager."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Keep easy things easy, and hard things possible."}),(0,r.jsx)("br",{}),"\nUsing Semgrep to scan your code, and writing rules with which to scan, should be easy. Semgrep also smooths the process with delightful defaults and support every step of the way. But it\u2019s also adaptable, and we welcome you using Semgrep in your own custom way. Hey, there are even ",(0,r.jsx)(n.a,{href:"https://youtu.be/ybWB2Vf2V50?t=1182",children:"examples of scanning cat pictures out there"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Beginner-friendly"}),(0,r.jsx)("br",{}),"\nYou shouldn\u2019t need a PhD in program analysis, or even to understand what an AST is, to be effective with Semgrep. A novice programmer should be able to write their first Semgrep rule in 60 seconds."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Human-readable rules"}),(0,r.jsx)("br",{}),"\nRules should look like code and be easy to read and reason about\u2014hopefully easier than if they were written in grep or a native linter."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Self-contained rule files"}),(0,r.jsx)("br",{}),"\nYou shouldn\u2019t need an additional plugin, dependency, or internet access to run a YAML rule. It should just work."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Deterministic (implies reproducible, idempotent)"}),(0,r.jsx)("br",{}),"\nGiven the same input, Semgrep gives the same output."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Runs offline"}),(0,r.jsx)("br",{}),"\nSemgrep can run without internet access so developers can write code from airplanes or beaches."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Rules are safe to run no matter where they came from"}),(0,r.jsx)("br",{}),"\nRules shouldn\u2019t have the capability to run arbitrary code on your system, only to act as a function that produces a deterministic output message."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Single-file analysis"}),(0,r.jsx)("br",{}),"\nTo stay fast and limit complexity, Semgrep CE draws a line at crossing file boundaries during analysis. It loses the ability to detect certain complex cross-function (interprocedural) issues, but that\u2019s an explicit tradeoff it makes.",(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),"\nSemgrep CE's goal is to catch what a senior engineer would catch in code review: Semgrep isn\u2019t designed to find a crazy issue that\u2019s 300 calls from start to finish and evaded the team for 20 years. Instead, it\u2019s designed for enforcing best-practices and automating the code review tasks that an excellent senior engineer would be capable of. For a discussion of why expressive creativity is better than a powerful engine, ",(0,r.jsx)(n.a,{href:"https://devd.me/log/posts/static-analysis/",children:"see this excellent blog post by Devdatta Akhawe"}),".",(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),"\nAs a corollary: if you design your codebase so that code in a file is safe today, it's still safe after a colleague makes a change twenty function calls away in another file."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Designed to run while code is being written"}),(0,r.jsx)("br",{}),"\nSemgrep is optimized for running in the IDE, Git commit hooks, or CI\u2014not for at the tail-end of a release process."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"A platform for program analysis"}),(0,r.jsx)("br",{}),"\nWe will expose stable internals so that researchers and engineers can develop novel program analysis work off of APIs like Semgrep\u2019s generic AST."]}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);