"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[89780],{26087:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>g,frontMatter:()=>d,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"for-developers/resolve-findings-through-app","title":"Resolve findings through the Semgrep web app","description":"Sign in to Semgrep to run scans following your organization\'s Semgrep deployment.","source":"@site/docs/for-developers/resolve-findings-through-app.md","sourceDirName":"for-developers","slug":"/for-developers/resolve-findings-through-app","permalink":"/semgrep-docs/for-developers/resolve-findings-through-app","draft":false,"unlisted":false,"editUrl":"https://github.com/kyle-semgrep/semgrep-docs/edit/main/docs/for-developers/resolve-findings-through-app.md","tags":[{"inline":true,"label":"Developer education","permalink":"/semgrep-docs/tags/developer-education"},{"inline":true,"label":"Semgrep AppSec Platform","permalink":"/semgrep-docs/tags/semgrep-app-sec-platform"}],"version":"current","lastUpdatedAt":1752504841000,"frontMatter":{"slug":"resolve-findings-through-app","title":"Resolve findings through the Semgrep web app","hide_title":true,"description":"Sign in to Semgrep to run scans following your organization\'s Semgrep deployment.","tags":["Developer education","Semgrep AppSec Platform"]},"sidebar":"devSidebar","previous":{"title":"Resolve findings in your pull request or merge request","permalink":"/semgrep-docs/for-developers/resolve-findings-through-comments"},"next":{"title":"Run local CLI scans","permalink":"/semgrep-docs/for-developers/cli"}}');var s=i(74848),t=i(28453),o=i(90422);const d={slug:"resolve-findings-through-app",title:"Resolve findings through the Semgrep web app",hide_title:!0,description:"Sign in to Semgrep to run scans following your organization's Semgrep deployment.",tags:["Developer education","Semgrep AppSec Platform"]},a="Resolve findings through the Semgrep web app",l={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Ignore findings in bulk",id:"ignore-findings-in-bulk",level:2},{value:"Appendix: triage statuses",id:"appendix-triage-statuses",level:2},...o.RM];function h(e){const n={a:"a",admonition:"admonition",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"resolve-findings-through-the-semgrep-web-app",children:"Resolve findings through the Semgrep web app"})}),"\n",(0,s.jsx)(n.p,{children:"This guide explains how you can view and triage findings in bulk through the Semgrep AppSec Platform web app."}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Not all organizations allow developers to use the AppSec Platform; ask your security team if you have access."}),"\n",(0,s.jsxs)(n.li,{children:["When triaging through Semgrep AppSec Platform, developers typically triage findings specific to their ",(0,s.jsx)(n.strong,{children:"branch"}),". Avoid triaging findings in branches that are not yours to triage."]}),"\n"]})}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.p,{children:["You must have an existing Semgrep org account. See ",(0,s.jsx)(n.a,{href:"/for-developers/signin",children:"Sign in to Semgrep"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"ignore-findings-in-bulk",children:"Ignore findings in bulk"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Sign in to ",(0,s.jsxs)(n.a,{href:"https://semgrep.dev/login",children:[(0,s.jsx)("i",{class:"fas fa-external-link fa-xs"})," Semgrep AppSec Platform"]}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Click ",(0,s.jsx)(n.strong,{children:"Code"})," for SAST findings, ",(0,s.jsx)(n.strong,{children:"Secrets"})," for secrets findings, or ",(0,s.jsx)(n.strong,{children:"Supply Chain"})," for SCA findings. You are taken to a page with all the findings for that product."]}),"\n",(0,s.jsxs)(n.li,{children:["Click on ",(0,s.jsx)(n.strong,{children:"Projects and branches"}),", then click the ",(0,s.jsxs)(n.strong,{children:[(0,s.jsx)("i",{class:"fa-solid fa-chevron-down"})," drop-down arrow"]})," to view open branches, which is listed by its unique ID. For example, GitHub branches are represented by their PR number."]}),"\n",(0,s.jsx)(n.li,{children:"Click your branch. This filters the displayed findings to those specific to your PR or MR."}),"\n",(0,s.jsxs)(n.li,{children:["Click the findings you want to triage, then click ",(0,s.jsx)(n.strong,{children:"Triage"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["In the drop-down box, select a new ",(0,s.jsx)(n.strong,{children:"Status"}),", typically ",(0,s.jsx)(n.strong,{children:"Ignored"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Optional: include a comment as to why you ignored a finding."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"appendix-triage-statuses",children:"Appendix: triage statuses"}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:"Click to view all triage statuses."}),(0,s.jsx)(o.Ay,{})]})]})}function g(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>d});var r=i(96540);const s={},t=r.createContext(s);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}},90422:(e,n,i)=>{i.d(n,{Ay:()=>d,RM:()=>t});var r=i(74848),s=i(28453);const t=[{value:"Removed findings",id:"removed-findings",level:3},{value:"Triage behavior across refs and branches",id:"triage-behavior-across-refs-and-branches",level:3}];function o(e){const n={a:"a",code:"code",em:"em",h3:"h3",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Status"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Open"})}),(0,r.jsx)(n.td,{children:"Findings are open by default. A finding is open if it was present the last time Semgrep scanned the code and has not been ignored. An open finding represents a match between the code and a rule enabled in the repository. Open findings require action, such as rewriting the code to eliminate the detected vulnerability."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Reviewing"})}),(0,r.jsx)(n.td,{children:"Indicates that the finding requires investigation to determine what the next steps in the triage process should be."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Fixing"})}),(0,r.jsx)(n.td,{children:"Findings for which you have decided to fix. Commonly used to indicate that these findings are tracked in Jira or assigned to developers for further work."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Fixed"})}),(0,r.jsx)(n.td,{children:"Fixed findings were detected in a previous scan but are no longer detected in the most recent scan of that same branch due to changes in the code."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Ignored"})}),(0,r.jsxs)(n.td,{children:["Findings that are ignored are present in the code but have been labeled as unimportant. Ignore findings that are false positives or deprioritized issues. Mark findings as ",(0,r.jsx)(n.a,{href:"/semgrep-code/triage-remediation",children:"ignored through Semgrep AppSec Platform"})," or by adding a ",(0,r.jsx)(n.a,{href:"/ignoring-files-folders-code/#reference-summary",children:"nosemgrep code comment"}),". You can also provide a reason for why you are ignoring a finding: ",(0,r.jsx)(n.strong,{children:"False positive"}),", ",(0,r.jsx)(n.strong,{children:"Acceptable risk"}),", ",(0,r.jsx)(n.strong,{children:"No time to fix"}),"."]})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"removed-findings",children:"Removed findings"}),"\n",(0,r.jsxs)(n.p,{children:["Findings can also be ",(0,r.jsx)(n.strong,{children:"removed"}),". Semgrep considers a finding removed if it is not found in the most recent scan of the branch where Semgrep initially detected it due to any of the following conditions:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The rule that detected the finding isn't enabled in the policy anymore."}),"\n",(0,r.jsx)(n.li,{children:"The rule that detected the finding was updated such that it no longer detects the finding."}),"\n",(0,r.jsxs)(n.li,{children:["The file path where the finding appeared is no longer found. The file path was deleted, renamed, added to a ",(0,r.jsx)(n.code,{children:".semgrepignore"})," file, added to a ",(0,r.jsx)(n.code,{children:".gitignore"})," file, or added to the list of ignored paths in Semgrep AppSec Platform."]}),"\n",(0,r.jsx)(n.li,{children:"For GitHub organization accounts: the PR or MR where the finding was detected has been closed without merging."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Your removed findings do not count toward the fix rate or the number of findings. The removed findings also do not appear in Semgrep AppSec Platform."}),"\n",(0,r.jsx)(n.h3,{id:"triage-behavior-across-refs-and-branches",children:"Triage behavior across refs and branches"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["When you triage a finding as ignored, reviewing, fixing, or reopened, Semgrep always triages across other branches and ",(0,r.jsx)(n.a,{href:"https://git-scm.com/book/en/v2/Git-Internals-Git-References",children:"Git references"})," (refs)."]}),"\n",(0,r.jsxs)(n.li,{children:["At scan time, there's automatic triaging that occurs in specific cases, and the behavior changes depending on the type of scan:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Full scans"}),": if the current branch includes a finding that was","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Previously introduced in another branch ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"and"})})]}),"\n",(0,r.jsx)(n.li,{children:"Triaged to a specific state\nThen the finding in the current branch is triaged to that same state."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Diff-aware scan"}),": findings introduced in a diff-aware scan are ",(0,r.jsx)(n.strong,{children:"not"})," automatically triaged at scan time, even if there are other instances of that finding on branches that have been triaged."]}),"\n"]}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);