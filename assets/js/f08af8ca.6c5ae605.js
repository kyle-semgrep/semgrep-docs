"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[52606],{14345:(e,n,t)=>{t.d(n,{A:()=>i});t(96540);var a=t(34164);const r={tabItem:"tabItem_Ymn6"};var s=t(74848);function i(e){let{children:n,hidden:t,className:i}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,i),hidden:t,children:n})}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var a=t(96540);const r={},s=a.createContext(r);function i(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:n},e.children)}},62464:(e,n,t)=>{t.d(n,{A:()=>w});var a=t(96540),r=t(34164),s=t(80052),i=t(56347),l=t(35793),o=t(99025),c=t(4430),u=t(44148);function p(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function d(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const r=(0,i.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,s=d(e),[i,o]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:s}))),[c,p]=m({queryString:t,groupId:r}),[g,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,u.Dv)(t);return[r,(0,a.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:r}),v=(()=>{const e=c??g;return h({value:e,tabValues:s})?e:null})();(0,l.A)((()=>{v&&o(v)}),[v]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),p(e),f(e)}),[p,f,s]),tabValues:s}}var f=t(75251);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(74848);function y(e){let{className:n,block:t,selectedValue:a,selectValue:i,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),u=e=>{const n=e.currentTarget,t=o.indexOf(n),r=l[t].value;r!==a&&(c(n),i(r))},p=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>{o.push(e)},onKeyDown:p,onClick:u,...s,className:(0,r.A)("tabs__item",v.tabItem,s?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function j(e){let{lazy:n,children:t,selectedValue:s}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function x(e){const n=g(e);return(0,b.jsxs)("div",{className:(0,r.A)("tabs-container",v.tabList),children:[(0,b.jsx)(y,{...n,...e}),(0,b.jsx)(j,{...n,...e})]})}function w(e){const n=(0,f.A)();return(0,b.jsx)(x,{...e,children:p(e.children)},String(n))}},62832:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>p});const a=JSON.parse('{"id":"semgrep-supply-chain/setup-maven","title":"Apache Maven","description":"Set up Semgrep Supply Chain to correctly detect packages in Maven.","source":"@site/docs/semgrep-supply-chain/setup-maven.md","sourceDirName":"semgrep-supply-chain","slug":"/semgrep-supply-chain/setup-maven","permalink":"/semgrep-docs/semgrep-supply-chain/setup-maven","draft":false,"unlisted":false,"editUrl":"https://github.com/kyle-semgrep/semgrep-docs/edit/main/docs/docs/semgrep-supply-chain/setup-maven.md","tags":[{"inline":true,"label":"Deployment","permalink":"/semgrep-docs/tags/deployment"},{"inline":true,"label":"Semgrep Supply Chain","permalink":"/semgrep-docs/tags/semgrep-supply-chain"}],"version":"current","lastUpdatedAt":1752259747000,"frontMatter":{"slug":"setup-maven","append_help_link":true,"title":"Apache Maven","hide_title":true,"description":"Set up Semgrep Supply Chain to correctly detect packages in Maven.","tags":["Deployment","Semgrep Supply Chain"]},"sidebar":"scanSidebar","previous":{"title":"Infrastructure-specific configuration","permalink":"/semgrep-docs/semgrep-supply-chain/setup-infrastructure"},"next":{"title":"Jenkins UI","permalink":"/semgrep-docs/semgrep-supply-chain/setup-jenkins-ui"}}');var r=t(74848),s=t(28453),i=t(62464),l=t(14345);const o={slug:"setup-maven",append_help_link:!0,title:"Apache Maven",hide_title:!0,description:"Set up Semgrep Supply Chain to correctly detect packages in Maven.",tags:["Deployment","Semgrep Supply Chain"]},c="Set up Semgrep Supply Chain with Apache Maven (Java)",u={},p=[{value:"Scanning Apache Maven projects with specific CI providers",id:"scanning-apache-maven-projects-with-specific-ci-providers",level:2},{value:"GitHub Actions",id:"github-actions",level:2},{value:"Sample GitHub Actions Maven workflow",id:"sample-github-actions-maven-workflow",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"set-up-semgrep-supply-chain-with-apache-maven-java",children:"Set up Semgrep Supply Chain with Apache Maven (Java)"})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["Semgrep Supply Chain supports the scanning of Java projects built using Maven or Gradle Wrapper ",(0,r.jsx)(n.strong,{children:"without the need for lockfiles"}),". Learn more about ",(0,r.jsx)(n.a,{href:"/semgrep-supply-chain/getting-started#scan-a-project-without-lockfiles-beta",children:"scanning your project without generating a Maven dependency tree"}),"."]})}),"\n",(0,r.jsxs)(n.p,{children:["Semgrep Supply Chain does not read ",(0,r.jsx)(n.code,{children:"pom.xml"})," files to parse Maven projects. Instead it parses a dependency tree generated by Maven (",(0,r.jsx)(n.code,{children:"mvn"}),")."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"general steps"})," to enable Semgrep Supply Chain to correctly parse Maven projects are as follows:"]}),"\n",(0,r.jsxs)("ol",{children:[(0,r.jsxs)("li",{children:["Generate a file outlining the project's dependency tree by adding the following command to your build pipeline:",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)("pre",{class:"language-bash",children:["mvn dependency",":tree"," -DoutputFile=maven_dep_tree.txt"]}),"\nFor specific steps to add the command into your build pipeline, refer to your CI provider's documentation."]}),(0,r.jsxs)("li",{children:["For each ",(0,r.jsx)("code",{children:"pom.xml"})," file with dependencies you want to scan, create additional dependency trees in their respective directories. Semgrep Supply Chain can detect and parse them all."]}),(0,r.jsx)("li",{children:"Run the Semgrep workflow, action, or step after the dependency tree or trees have been generated."})]}),"\n",(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ensure that Maven is installed in the build environment that is used to generate the dependency trees."}),"\n",(0,r.jsx)(n.li,{children:"Ensure that you generate dependency trees before running Semgrep."}),"\n",(0,r.jsxs)(n.li,{children:["This approach works for full scans. It does not work for ",(0,r.jsx)(n.a,{href:"/deployment/customize-ci-jobs#set-up-diff-aware-scans",children:"diff-aware scans"})," because the generated file is not tracked by Git."]}),"\n"]})}),"\n",(0,r.jsx)(n.p,{children:"You can perform the general steps in a local environment for testing. The following screenshot displays the commands running in a local environment:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Screenshot of Maven dependency tree generated in a local environment",src:t(97328).A+"",width:"1332",height:"1606"})}),"\n",(0,r.jsx)(n.h2,{id:"scanning-apache-maven-projects-with-specific-ci-providers",children:"Scanning Apache Maven projects with specific CI providers"}),"\n",(0,r.jsx)(n.p,{children:"This section describes steps to set up Apache Maven with specific CI providers."}),"\n",(0,r.jsx)(n.h2,{id:"github-actions",children:"GitHub Actions"}),"\n",(0,r.jsx)(n.p,{children:"To successfully run a Semgrep Supply Chain scan in GitHub Actions, the GitHub Actions workflow must generate all dependency trees in one job and then run Semgrep after."}),"\n",(0,r.jsx)(n.h3,{id:"sample-github-actions-maven-workflow",children:"Sample GitHub Actions Maven workflow"}),"\n",(0,r.jsxs)(i.A,{defaultValue:"gha-multiple",values:[{label:"Multiple pom.xml files",value:"gha-multiple"},{label:"Single pom.xml file",value:"gha-single"}],children:[(0,r.jsxs)(l.A,{value:"gha-multiple",children:[(0,r.jsx)(n.p,{children:"In the following code snippet, dependency trees are shared between the two jobs through a zip file that gathers all the lockfiles and, in the next job, unzips the lockfiles and runs Semgrep as usual."}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"on:\n  workflow_dispatch:\n  pull_request: {}\n  push:\n    branches:\n    - master\n    paths:\n    - .github/workflows/semgrep.yml\nname: Semgrep\njobs:\n  buildmavenDepTree:\n      runs-on: ubuntu-latest\n      steps:\n      - uses: actions/checkout@v4\n      - name: Set up JDK 11\n        uses: actions/setup-java@v3\n        with:\n          java-version: '11'\n          distribution: 'temurin'\n      - name: Build Dependency Tree\n        # The mvn command traverses the repository and generates a dependency tree for each pom.xml file\n        run: mvn dependency:tree -DoutputFile=maven_dep_tree.txt -Dmaven.test.skip=true\n      - name: Create Zip File\n        run: find . -type f -name 'maven_dep_tree.txt' -exec zip -r archive.zip {} +\n      - name: Upload Dependency Zip\n        uses: actions/upload-artifact@v3\n        with:\n          name: zipfile\n          path: archive.zip\n  semgrep:\n    needs: buildmavenDepTree\n    name: Scan\n    runs-on: ubuntu-latest\n    env:\n      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}\n    container:\n      image: semgrep/semgrep\n    steps:\n      - uses: actions/checkout@v4\n      - name: Download artifact from the previous job\n        uses: actions/download-artifact@v3\n        with:\n          name: zipfile\n      - name: Semgrep Scan\n        run: |\n          unzip -o archive.zip\n          semgrep ci\n"})})]}),(0,r.jsxs)(l.A,{value:"gha-single",children:[(0,r.jsxs)(n.p,{children:["The following code snippet is intended for repositories with a single ",(0,r.jsx)(n.code,{children:"pom.xml"})," file."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"on:\n  workflow_dispatch:\n  pull_request: {}\n  push:\n    branches:\n    - main\n    paths:\n    - .github/workflows/semgrep.yml\nname: Semgrep\njobs:\n  buildmavenDepTree:\n      runs-on: ubuntu-latest\n      steps:\n      - uses: actions/checkout@v4\n      - name: Set up JDK 17\n        uses: actions/setup-java@v3\n        with:\n          java-version: '17'\n          distribution: 'temurin'\n      - name: Build with Maven\n        run: mvn --batch-mode --update-snapshots package\n      - name: Build Dependency Tree\n        run: mvn dependency:tree -DoutputFile=maven_dep_tree.txt\n      - name: Upload Dependency Tree Artifact\n        uses: actions/upload-artifact@v3\n        with:\n          name: mavendeptree\n          path: maven_dep_tree.txt\n  semgrep:\n    needs: buildmavenDepTree\n    name: Scan\n    runs-on: ubuntu-latest\n    env:\n      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}\n    container:\n      image: semgrep/semgrep\n    steps:\n      - uses: actions/checkout@v4\n      - name: Download artifact from previous job\n        uses: actions/download-artifact@v3\n        with:\n          name: mavendeptree\n      - run: semgrep ci\n"})})]})]}),"\n",(0,r.jsxs)(n.p,{children:["To ",(0,r.jsx)(n.strong,{children:"request support for your CI provider"}),", join the ",(0,r.jsx)(n.a,{href:"https://go.semgrep.dev/slack",children:"Semgrep Community Slack"}),"  group to ask the maintainers and the community."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},97328:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/ssc-maven-local-8fff561a2deca1cf8e759f1e88096704.png"}}]);