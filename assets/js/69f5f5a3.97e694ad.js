"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[55372],{27589:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>t,toc:()=>p});const t=JSON.parse('{"id":"kb/semgrep-appsec-platform/error-externally-managed-environment","title":"error: externally-managed-environment","description":"Learn how to handle externally managed environment errors when installing Semgrep using pip.","source":"@site/docs/kb/semgrep-appsec-platform/error-externally-managed-environment.md","sourceDirName":"kb/semgrep-appsec-platform","slug":"/kb/semgrep-appsec-platform/error-externally-managed-environment","permalink":"/semgrep-docs/kb/semgrep-appsec-platform/error-externally-managed-environment","draft":false,"unlisted":false,"editUrl":"https://github.com/kyle-semgrep/semgrep-docs/edit/main/docs/kb/semgrep-appsec-platform/error-externally-managed-environment.md","tags":[{"inline":true,"label":"Semgrep AppSec Platform","permalink":"/semgrep-docs/tags/semgrep-app-sec-platform"},{"inline":true,"label":"Semgrep Code","permalink":"/semgrep-docs/tags/semgrep-code"},{"inline":true,"label":"Semgrep Secrets","permalink":"/semgrep-docs/tags/semgrep-secrets"},{"inline":true,"label":"Semgrep Supply Chain","permalink":"/semgrep-docs/tags/semgrep-supply-chain"}],"version":"current","lastUpdatedAt":1753214405000,"frontMatter":{"description":"Learn how to handle externally managed environment errors when installing Semgrep using pip.","tags":["Semgrep AppSec Platform","Semgrep Code","Semgrep Secrets","Semgrep Supply Chain"]},"sidebar":"kbSidebar","previous":{"title":"Web API error 404 and token scopes","permalink":"/semgrep-docs/kb/semgrep-appsec-platform/api-404-token-scope"},"next":{"title":"FedRAMP authorization boundary for code scanning services like Semgrep","permalink":"/semgrep-docs/kb/semgrep-appsec-platform/fedramp-with-semgrep"}}');var a=r(74848),i=r(28453);const o={description:"Learn how to handle externally managed environment errors when installing Semgrep using pip.",tags:["Semgrep AppSec Platform","Semgrep Code","Semgrep Secrets","Semgrep Supply Chain"]},s="error: externally-managed-environment",l={},p=[{value:"How to fix this error",id:"how-to-fix-this-error",level:2}];function m(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"error-externally-managed-environment",children:"error: externally-managed-environment"})}),"\n",(0,a.jsxs)(n.p,{children:["If your Python environment is ",(0,a.jsx)(n.a,{href:"https://packaging.python.org/en/latest/specifications/externally-managed-environments/",children:"externally managed by a package manager"}),", you can't use ",(0,a.jsx)(n.code,{children:"pip"})," for system-wide installations. This results in the ",(0,a.jsx)(n.code,{children:"externally-managed-environment"})," when you try to use ",(0,a.jsx)(n.code,{children:"pip"})," to install Semgrep."]}),"\n",(0,a.jsx)(n.p,{children:"Error message on macOS:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-console",children:"error: externally-managed-environment\n\n\xd7 This environment is externally managed\n\u2570\u2500> To install Python packages system-wide, try brew install\n xyz, where xyz is the package you are trying to\n install.\n    \n If you wish to install a Python library that isn't in Homebrew,\n use a virtual environment:\n    \n python3 -m venv path/to/venv\n source path/to/venv/bin/activate\n python3 -m pip install xyz\n    \n If you wish to install a Python application that isn't in Homebrew,\n it may be easiest to use 'pipx install xyz', which will manage a\n virtual environment for you. You can install pipx with\n    \n brew install pipx\n    \n You may restore the old behavior of pip by passing\n the '--break-system-packages' flag to pip, or by adding\n 'break-system-packages = true' to your pip.conf file. The latter\n will permanently disable this error.\n    \n If you disable this error, we STRONGLY recommend that you additionally\n pass the '--user' flag to pip, or set 'user = true' in your pip.conf\n file. Failure to do this can result in a broken Homebrew installation.\n    \n Read more about this behavior here: <https://peps.python.org/pep-0668/>\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.\n"})}),"\n",(0,a.jsx)(n.p,{children:"Error message on Ubuntu:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-console",children:"error: externally-managed-environment\n\n\xd7 This environment is externally managed\n\u2570\u2500> To install Python packages system-wide, try apt install\n python3-xyz, where xyz is the package you are trying to\n install.\n    \n If you wish to install a non-Debian-packaged Python package,\n create a virtual environment using python3 -m venv path/to/venv.\n Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n sure you have python3-full installed.\n    \n If you wish to install a non-Debian packaged Python application,\n it may be easiest to use pipx install xyz, which will manage a\n virtual environment for you. Make sure you have pipx installed.\n    \n See /usr/share/doc/python3.12/README.venv for more information.\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.\n"})}),"\n",(0,a.jsx)(n.h2,{id:"how-to-fix-this-error",children:"How to fix this error"}),"\n",(0,a.jsxs)(n.p,{children:["For most users, the simplest solution is to install ",(0,a.jsx)(n.a,{href:"https://github.com/pypa/pipx",children:(0,a.jsx)(n.code,{children:"pipx"})}),", then run ",(0,a.jsx)(n.code,{children:"pipx install semgrep"})," to install Semgrep. ",(0,a.jsx)(n.code,{children:"pipx"})," automatically creates and manages virtual environments for standalone Python applications."]}),"\n",(0,a.jsxs)(n.p,{children:["You can also install Semgrep using ",(0,a.jsx)(n.a,{href:"https://brew.sh/",children:(0,a.jsx)(n.code,{children:"homebrew"})}),"."]}),"\n",(0,a.jsx)(n.p,{children:"If you're already using a custom Python virtual environment, you can install Semgrep in this existing environment instead."})]})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>s});var t=r(96540);const a={},i=t.createContext(a);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);