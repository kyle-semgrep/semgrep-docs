"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[80464],{643:(e,n,s)=>{s.d(n,{Ay:()=>l,RM:()=>o});var i=s(74848),r=s(28453);const o=[];function t(e){const n={p:"p",...(0,r.R)(),...e.components};return(0,i.jsx)(n.p,{children:"IDE scans use Semgrep Community Edition (CE) for its speed. Scans are thus limited to single-file analysis. You may encounter a higher rate of false positives."})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var i=s(96540);const r={},o=i.createContext(r);function t(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(o.Provider,{value:n},e.children)}},40973:(e,n,s)=>{s.d(n,{Ay:()=>l,RM:()=>o});var i=s(74848),r=s(28453);const o=[];function t(e){const n={a:"a",code:"code",li:"li",ol:"ol",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://code.visualstudio.com/docs/editor/extension-marketplace#_install-an-extension",children:"Install the Semgrep extension"}),". If you're unfamiliar with installing VS Code extensions, see the Extension Marketplace's article ",(0,i.jsx)(n.a,{href:"https://code.visualstudio.com/docs/editor/extension-marketplace#_install-an-extension",children:"Install an Extension"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)("kbd",{children:"Ctrl+\u21e7Shift+P"})," or ",(0,i.jsx)("kbd",{children:"\u2318Command+\u21e7Shift+P"})," (macOS) to launch the Command Palette, and run the following to sign in to Semgrep AppSec Platform:","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-console",children:"Semgrep: Sign in\n"})}),"\n","You can use the extension without signing in, but doing so enables better results since you benefit from ",(0,i.jsx)(n.a,{href:"/semgrep-code/overview",children:"Semgrep Code"})," and its ",(0,i.jsx)(n.a,{href:"/semgrep-code/pro-rules",children:"Pro rules"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Launch the Command Palette using ",(0,i.jsx)("kbd",{children:"Ctrl+\u21e7Shift+P"})," or ",(0,i.jsx)("kbd",{children:"\u2318Command+\u21e7Shift+P"})," (macOS), and scan your files by running:","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-console",children:"Semgrep: Scan all files in workspace\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["To see detailed vulnerability information, hover over the code underlined in yellow. You can also see the findings identified by Semgrep using ",(0,i.jsx)("kbd",{children:"\u21e7Shift+Ctrl+M"})," or ",(0,i.jsx)("kbd",{children:"\u2318Command+\u21e7Shift+M"})," (macOS) and opening the ",(0,i.jsx)(n.strong,{children:"Problems"})," tab."]}),"\n"]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}},71755:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>g,frontMatter:()=>a,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"extensions/semgrep-vs-code","title":"Visual Studio Code extension","description":"Learn how to install and use Semgrep\'s extension for Visual Studio Code.","source":"@site/docs/extensions/semgrep-vs-code.md","sourceDirName":"extensions","slug":"/extensions/semgrep-vs-code","permalink":"/semgrep-docs/extensions/semgrep-vs-code","draft":false,"unlisted":false,"editUrl":"https://github.com/semgrep/semgrep-docs/edit/main/docs/extensions/semgrep-vs-code.md","tags":[{"inline":true,"label":"Extensions","permalink":"/semgrep-docs/tags/extensions"}],"version":"current","lastUpdatedAt":1750275305000,"frontMatter":{"slug":"semgrep-vs-code","title":"Visual Studio Code extension","hide_title":true,"description":"Learn how to install and use Semgrep\'s extension for Visual Studio Code.","tags":["Extensions"]},"sidebar":"scanSidebar","previous":{"title":"overview","permalink":"/semgrep-docs/extensions/overview"},"next":{"title":"IntelliJ extension","permalink":"/semgrep-docs/extensions/semgrep-intellij"}}');var r=s(74848),o=s(28453),t=s(643),l=s(40973);const a={slug:"semgrep-vs-code",title:"Visual Studio Code extension",hide_title:!0,description:"Learn how to install and use Semgrep's extension for Visual Studio Code.",tags:["Extensions"]},c="Semgrep Visual Studio Code extension",d={},h=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Quickstart",id:"quickstart",level:2},...l.RM,{value:"Commands",id:"commands",level:2},{value:"Additional extension features",id:"additional-extension-features",level:2},{value:"Configure the extension",id:"configure-the-extension",level:2},{value:"Configuration options",id:"configuration-options",level:3},{value:"Experimental configuration options",id:"experimental-configuration-options",level:3},{value:"Limitations",id:"limitations",level:2},...t.RM,{value:"License",id:"license",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"semgrep-visual-studio-code-extension",children:"Semgrep Visual Studio Code extension"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=Semgrep.semgrep",children:"Semgrep's Visual Studio Code (VS Code) Extension"})," allows you to scan lines when you open and change files in your workspace. It offers:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Automatic scans whenever you open a file"}),"\n",(0,r.jsx)(n.li,{children:"Inline results and problem highlighting, as well as quick links to the definitions of the rules underlying the findings"}),"\n",(0,r.jsx)(n.li,{children:"Autofix, which allows you to apply Semgrep's suggested resolution for the findings"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["See ",(0,r.jsx)(n.a,{href:"/supported-languages",children:"Supported Languages"})," to verify that the extension supports your project."]}),"\n",(0,r.jsx)(n.li,{children:"Windows users must use Semgrep VS Code extension v1.6.2 or later."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"quickstart",children:"Quickstart"}),"\n",(0,r.jsx)(l.Ay,{}),"\n",(0,r.jsx)(n.h2,{id:"commands",children:"Commands"}),"\n",(0,r.jsxs)(n.p,{children:["Run Semgrep extension commands through the ",(0,r.jsx)(n.a,{href:"https://code.visualstudio.com/docs/getstarted/userinterface#_command-palette",children:"Visual Studio Code Command Palette"}),". You can access the Command Palette using ",(0,r.jsx)("kbd",{children:"Ctrl+\u21e7Shift+P"})," or ",(0,r.jsx)("kbd",{children:"\u2318Command+\u21e7Shift+P"})," (macOS). The following list includes all available Semgrep extension commands:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Semgrep: Scan all files in a workspace"}),": Scan all files in the current workspace."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Semgrep Search: Clear"}),": Clear pattern searches from the Primary Side Bar's Semgrep Search view."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Semgrep Search: Focus on Search Results View"}),": Bring the Primary Side Bar's Semgrep Search view into focus"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Semgrep Restart Language Server"}),": Restart the language server"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Semgrep: Scan changed files in a workspace"}),": Scan files that have been changed since the last commit in your current workspace."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Semgrep: Search by pattern"}),": Search for patterns in code using Semgrep pattern syntax. For more information, see ",(0,r.jsx)(n.a,{href:"/docs/writing-rules/pattern-syntax",children:"Pattern syntax"})," documentation."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Semgrep: Show Generic AST"}),": Show generic AST in a new window"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Semgrep: Show named Generic AST"}),": Show named AST in a new window"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Semgrep: Sign in"}),": Sign in or log in to the Semgrep AppSec Platform (this command opens a new window in your browser). When you sign in, you can automatically scan with Semgrep ",(0,r.jsx)(n.a,{href:"/semgrep-code/pro-rules",children:"Pro rules"})," and add additional rules to the ",(0,r.jsx)(n.a,{href:"https://semgrep.dev/orgs/-/policies",children:"Policies"})," in Semgrep Code. If you are logged in with the command-line interface using ",(0,r.jsx)("code",{children:"semgrep\xa0login"}),", you are also already signed in with the Visual Studio Code Semgrep extension. Alternatively, you can log in through your command-line interface by running ",(0,r.jsx)(n.code,{children:"semgrep login"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Semgrep: Sign out"}),": Log out from Semgrep AppSec Platform. Alternatively, you can sign out through your command-line interface by running ",(0,r.jsx)(n.code,{children:"semgrep logout"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Semgrep: Update rules"}),": For logged-in users. If the rules in the ",(0,r.jsx)(n.a,{href:"https://semgrep.dev/orgs/-/policies",children:"Policies"})," or rules included through the ",(0,r.jsx)(n.strong,{children:"Semgrep \u203a Scan: Configuration"})," configuration option have been changed, this command loads the new configuration of your rules for your following scan."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Tip: You can click the Semgrep icon in the Visual Studio Code to access all available commands quickly."}),"\n",(0,r.jsx)(n.h2,{id:"additional-extension-features",children:"Additional extension features"}),"\n",(0,r.jsx)(n.p,{children:"Use auto-fix to apply code change suggestions from Semgrep to remediate the security issue."}),"\n",(0,r.jsx)("video",{src:"https://github.com/returntocorp/semgrep-vscode/assets/626337/3b6a730d-57e9-48a4-8065-9fa52388d77a",controls:"controls"}),"\n",(0,r.jsx)(n.p,{children:"Add and update new rules to expand Semgrep extension's capabilities."}),"\n",(0,r.jsx)("video",{src:"https://github.com/returntocorp/semgrep-vscode/assets/626337/fed6b6ec-e0b5-495b-a488-4f3c805dd58b",controls:"controls"}),"\n",(0,r.jsx)(n.p,{children:"Fine-tune and customize the rules Semgrep uses to improve your scan results:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Go to ",(0,r.jsx)(n.a,{href:"https://semgrep.dev/explore",children:"Semgrep Registry"}),". Ensure that you are signed in."]}),"\n",(0,r.jsxs)(n.li,{children:["Explore the Semgrep Registry, select a rule, and then click ",(0,r.jsx)(n.strong,{children:"Add to Policy"}),". You can view and manage your rules in ",(0,r.jsx)(n.a,{href:"https://semgrep.dev/orgs/-/policies",children:"Policies"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Rescan your code. Use ",(0,r.jsx)("kbd",{children:"Ctrl+\u21e7Shift+P"})," or ",(0,r.jsx)("kbd",{children:"\u2318Command+\u21e7Shift+P"})," (macOS) to launch the Command Palette, then run ",(0,r.jsx)(n.code,{children:"Semgrep: Update rules"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configure-the-extension",children:"Configure the extension"}),"\n",(0,r.jsxs)(n.p,{children:["To configure the Semgrep extension, open its ",(0,r.jsx)(n.strong,{children:"Extension Settings"})," page:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)("kbd",{children:"\u21e7Shift+Ctrl+X"})," or ",(0,r.jsx)("kbd",{children:"\u21e7Shift+\u2318Command+X"})," (macOS) to open the ",(0,r.jsx)(n.strong,{children:"Extensions"})," view."]}),"\n",(0,r.jsxs)(n.li,{children:["Select ",(0,r.jsx)(n.strong,{children:"Semgrep"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Click the ",(0,r.jsx)(n.strong,{children:"gear"})," and select ",(0,r.jsx)(n.strong,{children:"Extension Settings"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"configuration-options",children:"Configuration options"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Semgrep \u203a Do Hover"}),": Enable AST node views when hovering over a finding."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Semgrep \u203a Path"}),": Set the path to the Semgrep executable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Semgrep \u203a Scan: Configuration"}),": Specify rules or rulesets you want Semgrep to use to scan your code. Each item can be a YAML configuration file, a URL of a configuration file, or a directory of YAML files. Use ",(0,r.jsx)(n.code,{children:"auto"})," to automatically obtain rules tailored to your project. Semgrep uses your project URL to log into the Semgrep Registry. See ",(0,r.jsx)(n.a,{href:"/docs/running-rules",children:"Running rules"})," for more information. Run ",(0,r.jsx)(n.code,{children:"Semgrep: Update rules"})," using the Visual Studio Code Command Palette to update the rules configuration for your following scan whenever you change the rule configuration."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Semgrep \u203a Scan: Exclude"}),": List files and directories that Semgrep should ignore when scanning."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Semgrep \u203a Scan: Include"}),": List files and directories scanned by Semgrep. This option globally overrides the workspace setting. As a result, Semgrep scans all included paths."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Semgrep \u203a Scan: Jobs"}),": Specify how many parallel jobs can run simultaneously. The default number of parallel jobs is one."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Semgrep \u203a Scan: Max Memory"}),": Sets the maximum memory in MB to use."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Semgrep \u203a Scan: Max Target Bytes"}),": Sets the maximum size of the target in bytes to scan."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Semgrep \u203a Scan: Only Git Dirty"}),": Allow Semgrep to scan your code whenever you open a new file and display the findings for lines that have changed since the last commit. On by default."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Semgrep \u203a Scan: Pro_intrafile"}),": Enable intrafile scanning using the Pro Engine."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Semgrep \u203a Scan: Timeout"}),": Set the maximum run time in seconds before Semgrep times out and stops scanning your code. The default value is 30."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Semgrep \u203a Scan: Timeout Threshold"}),": Set the maximum number of rules that can timeout on a file before the file is skipped. If set to 0, there will be no limit. Defaults to 3."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Semgrep > Trace: Server"}),": This option is useful for debugging. The ",(0,r.jsx)(n.strong,{children:"messages"})," option displays communication of the Semgrep Visual Studio Code extension with the LSP server. The default option is ",(0,r.jsx)(n.strong,{children:"verbose"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"experimental-configuration-options",children:"Experimental configuration options"}),"\n",(0,r.jsx)(n.p,{children:"The following experimental features should only be used upon recommendation by Semgrep:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Semgrep > Ignore CLI Version"}),": Ignore the CLI Version and enable all extension features."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,r.jsx)(t.Ay,{}),"\n",(0,r.jsx)(n.h2,{id:"license",children:"License"}),"\n",(0,r.jsx)(n.p,{children:"The Semgrep VS Code extension is licensed under the LGPL 2.1 license."})]})}function g(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);