"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[46405],{28453:(e,i,s)=>{s.d(i,{R:()=>l,x:()=>o});var n=s(96540);const r={},t=n.createContext(r);function l(e){const i=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),n.createElement(t.Provider,{value:i},e.children)}},37969:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>n,toc:()=>d});var n=s(47943),r=s(74848),t=s(28453);const l={slug:"march-2022",append_help_link:!0,hide_title:!0,description:"Release notes include the changes, fixes, and additions in specific versions of Semgrep.",toc_max_heading_level:3,tags:["Release notes"],hide_table_of_contents:!1,date:"2022-03-30T10:00",title:"March 2022"},o="March 2022",a={authorsImageUrls:[]},d=[{value:"Version 0.86.5",id:"version-0865",level:2},{value:"Additions",id:"additions",level:3},{value:"Semgrep findings available in two GitLab formats",id:"semgrep-findings-available-in-two-gitlab-formats",level:4},{value:"JSON output fingerprint of each finding",id:"json-output-fingerprint-of-each-finding",level:4},{value:"Go improvement",id:"go-improvement",level:4},{value:"Terraform support",id:"terraform-support",level:4},{value:"Ellipsis metavariable in HTML",id:"ellipsis-metavariable-in-html",level:4},{value:"Semgrep CI is now a part of Semgrep CLI",id:"semgrep-ci-is-now-a-part-of-semgrep-cli",level:4},{value:"Changes",id:"changes",level:3},{value:"SARIF output",id:"sarif-output",level:4},{value:"Python wheel",id:"python-wheel",level:4},{value:"Findings comparison changes",id:"findings-comparison-changes",level:4},{value:"Semgrep docker image running as root",id:"semgrep-docker-image-running-as-root",level:4},{value:"XDG Base Directory",id:"xdg-base-directory",level:4},{value:"Additional information",id:"additional-information",level:3},{value:"Version 0.85.0",id:"version-0850",level:2},{value:"Additions",id:"additions-1",level:3},{value:"C improvement",id:"c-improvement",level:4},{value:"HTML improvement",id:"html-improvement",level:4},{value:"Scala improvement",id:"scala-improvement",level:4},{value:"Dockerfile improvement",id:"dockerfile-improvement",level:4},{value:"Semgrep informs about used rules for multiple languages",id:"semgrep-informs-about-used-rules-for-multiple-languages",level:4},{value:"Changes",id:"changes-1",level:3},{value:"File targeting logic",id:"file-targeting-logic",level:4},{value:"Explicitly targeted files are now unaffected by global filters",id:"explicitly-targeted-files-are-now-unaffected-by-global-filters",level:4},{value:"Semgrep scans with <code>--skip-unknown-extensions</code> flag now use shebang",id:"semgrep-scans-with---skip-unknown-extensions-flag-now-use-shebang",level:4},{value:"Faster scans with <code>--baseline-commit</code> flag",id:"faster-scans-with---baseline-commit-flag",level:4},{value:"Improved Semgrep output format",id:"improved-semgrep-output-format",level:4},{value:"Fixes",id:"fixes",level:3},{value:"Deep expression matching and metavariable interaction",id:"deep-expression-matching-and-metavariable-interaction",level:4},{value:"Additional information",id:"additional-information-1",level:3},{value:"Version 0.84.0",id:"version-0840",level:2},{value:"Additions",id:"additions-2",level:3},{value:"Semgrep CLI lists supported languages",id:"semgrep-cli-lists-supported-languages",level:4},{value:"JSX (JavaScript) improvement",id:"jsx-javascript-improvement",level:4},{value:"Updated validation of rules",id:"updated-validation-of-rules",level:4},{value:"The <code>project-depends-on</code> now supports more languages",id:"the-project-depends-on-now-supports-more-languages",level:4},{value:"Improved PHP support",id:"improved-php-support",level:4},{value:"Improved Scala support",id:"improved-scala-support",level:4}];function c(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.p,{children:"The following updates were made to Semgrep in March 2022."}),"\n",(0,r.jsx)(i.h2,{id:"version-0865",children:"Version 0.86.5"}),"\n",(0,r.jsx)(i.h3,{id:"additions",children:"Additions"}),"\n",(0,r.jsx)(i.h4,{id:"semgrep-findings-available-in-two-gitlab-formats",children:"Semgrep findings available in two GitLab formats"}),"\n",(0,r.jsx)(i.p,{children:"Semgrep can now output findings in the following formats:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["GitLab SAST report format with ",(0,r.jsx)(i.code,{children:"--gitlab-sast"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:["GitLab secret detection report format with ",(0,r.jsx)(i.code,{children:"--gitlab-secrets"}),"."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"json-output-fingerprint-of-each-finding",children:"JSON output fingerprint of each finding"}),"\n",(0,r.jsx)(i.p,{children:"JSON output now includes a fingerprint of each finding. This fingerprint remains consistent when scanned code is just moved or reindented."}),"\n",(0,r.jsx)(i.h4,{id:"go-improvement",children:"Go improvement"}),"\n",(0,r.jsxs)(i.p,{children:["Use latest ",(0,r.jsx)(i.code,{children:"tree-sitter-go"})," with support for Go 1.18 generics. (",(0,r.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/issues/4823",children:"#4823"}),")"]}),"\n",(0,r.jsx)(i.h4,{id:"terraform-support",children:"Terraform support"}),"\n",(0,r.jsxs)(i.p,{children:["Basic support for constant propagation of locals and variables. (",(0,r.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/issues/1147",children:"#1147"}),", ",(0,r.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/issues/4816",children:"#4816"}),")"]}),"\n",(0,r.jsx)(i.h4,{id:"ellipsis-metavariable-in-html",children:"Ellipsis metavariable in HTML"}),"\n",(0,r.jsxs)(i.p,{children:["You can now use metavariable ellipsis inside a ",(0,r.jsx)(i.code,{children:"<script>"})," tag. For example ",(0,r.jsx)(i.code,{children:"<script>$...JS<\/script>"}),". (",(0,r.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/issues/4841",children:"#4841"}),")"]}),"\n",(0,r.jsx)(i.h4,{id:"semgrep-ci-is-now-a-part-of-semgrep-cli",children:"Semgrep CI is now a part of Semgrep CLI"}),"\n",(0,r.jsxs)(i.p,{children:["You can now run Semgrep CI with ",(0,r.jsx)(i.code,{children:"semgrep ci"})," subcommand that auto-detects settings from your CI environment and can upload findings to Semgrep App when logged in."]}),"\n",(0,r.jsx)(i.h3,{id:"changes",children:"Changes"}),"\n",(0,r.jsx)(i.h4,{id:"sarif-output",children:"SARIF output"}),"\n",(0,r.jsxs)(i.p,{children:["SARIF output includes matching code snippet (",(0,r.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/issues/4812",children:"#4812"}),")"]}),"\n",(0,r.jsx)(i.h4,{id:"python-wheel",children:"Python wheel"}),"\n",(0,r.jsx)(i.p,{children:"Removed tests from published Python wheel."}),"\n",(0,r.jsx)(i.h4,{id:"findings-comparison-changes",children:"Findings comparison changes"}),"\n",(0,r.jsx)(i.p,{children:"Findings are now considered identical between baseline and current scans, meaning that:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Two findings are now identical after whitespace changes such as re-indentation."}),"\n",(0,r.jsx)(i.li,{children:"Two findings are now identical after a nosemgrep comment is added."}),"\n",(0,r.jsx)(i.li,{children:"Findings are now different if the same code triggered them on different lines."}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"semgrep-docker-image-running-as-root",children:"Semgrep docker image running as root"}),"\n",(0,r.jsx)(i.p,{children:"Docker image now runs as root to allow the docker image to be used in CI/CD pipelines."}),"\n",(0,r.jsx)(i.h4,{id:"xdg-base-directory",children:"XDG Base Directory"}),"\n",(0,r.jsxs)(i.p,{children:["Semgrep now supports XDG Base Directory specification format. (",(0,r.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/issues/4818",children:"#4818"}),")"]}),"\n",(0,r.jsx)(i.h3,{id:"additional-information",children:"Additional information"}),"\n",(0,r.jsxs)(i.p,{children:["To see the complete change notes, visit the ",(0,r.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/releases/",children:"Semgrep changelog"}),"."]}),"\n",(0,r.jsx)(i.h2,{id:"version-0850",children:"Version 0.85.0"}),"\n",(0,r.jsx)(i.h3,{id:"additions-1",children:"Additions"}),"\n",(0,r.jsx)(i.h4,{id:"c-improvement",children:"C improvement"}),"\n",(0,r.jsx)(i.p,{children:"Semgrep uses the latest tree-sitter-c-sharp with support for most C 10.0 features."}),"\n",(0,r.jsx)(i.h4,{id:"html-improvement",children:"HTML improvement"}),"\n",(0,r.jsxs)(i.p,{children:["Support for metavariables on tags (for example: ",(0,r.jsx)(i.code,{children:"<$TAG>...</$TAG>"}),"). (",(0,r.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/issues/4078",children:"#4078"}),")"]}),"\n",(0,r.jsx)(i.h4,{id:"scala-improvement",children:"Scala improvement"}),"\n",(0,r.jsx)(i.p,{children:"The data-flow engine now handles expression blocks. Previously, Semgrep did not report some false negatives when run with taint analysis on expression blocks, which are now reported."}),"\n",(0,r.jsx)(i.h4,{id:"dockerfile-improvement",children:"Dockerfile improvement"}),"\n",(0,r.jsxs)(i.p,{children:["Allow for example ",(0,r.jsx)(i.code,{children:"CMD \u2026"})," to match both ",(0,r.jsx)(i.code,{children:"CMD ls"})," and ",(0,r.jsx)(i.code,{children:'CMD ["ls"]'}),". (",(0,r.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/issues/4770",children:"#4770"}),")"]}),"\n",(0,r.jsx)(i.h4,{id:"semgrep-informs-about-used-rules-for-multiple-languages",children:"Semgrep informs about used rules for multiple languages"}),"\n",(0,r.jsx)(i.p,{children:"When scanning multiple languages, Semgrep now prints a table of how many rules and files are used for each language."}),"\n",(0,r.jsx)(i.h3,{id:"changes-1",children:"Changes"}),"\n",(0,r.jsx)(i.h4,{id:"file-targeting-logic",children:"File targeting logic"}),"\n",(0,r.jsxs)(i.p,{children:["The following inconsistencies were fixed: (",(0,r.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/pull/4776",children:"#4776"}),")"]}),"\n",(0,r.jsx)(i.h4,{id:"explicitly-targeted-files-are-now-unaffected-by-global-filters",children:"Explicitly targeted files are now unaffected by global filters"}),"\n",(0,r.jsxs)(i.p,{children:["Previously, explicitly targeted files (files that are directly passed to the command line) were unaffected by most global filters: global include or exclude patterns, and the file size limit. Now, the ",(0,r.jsx)(i.code,{children:".semgrepignore"})," patterns do not affect explicitly targeted files as well."]}),"\n",(0,r.jsxs)(i.h4,{id:"semgrep-scans-with---skip-unknown-extensions-flag-now-use-shebang",children:["Semgrep scans with ",(0,r.jsx)(i.code,{children:"--skip-unknown-extensions"})," flag now use shebang"]}),"\n",(0,r.jsxs)(i.p,{children:["Previously, ",(0,r.jsx)(i.code,{children:"--skip-unknown-extensions"})," skipped files based only on file extension, even though extensionless shell scripts expose their language through the shebang of the first line. As a result, when you set ",(0,r.jsx)(i.code,{children:"--skip-unknown-extensions"})," flag, Semgrep always skipped explicitly targeted shell files with no extension. Now, Semgrep with said flag decides if a file is a correct language using both extensions and shebangs."]}),"\n",(0,r.jsxs)(i.h4,{id:"faster-scans-with---baseline-commit-flag",children:["Faster scans with ",(0,r.jsx)(i.code,{children:"--baseline-commit"})," flag"]}),"\n",(0,r.jsx)(i.p,{children:"These optimizations were added:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["When ",(0,r.jsx)(i.code,{children:"--baseline-commit"})," is set, Semgrep runs the ",(0,r.jsx)(i.strong,{children:"current scan"}),", then switches to the ",(0,r.jsx)(i.code,{children:"\u2013baseline-commit"}),", and runs the ",(0,r.jsx)(i.strong,{children:"baseline scan"}),". The current scan now excludes files that are unchanged between the baseline and the current commit according to the output of ",(0,r.jsx)(i.code,{children:"git status"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.strong,{children:"baseline scan"})," now excludes rules and files that had no matches in the ",(0,r.jsx)(i.strong,{children:"current scan"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["When ",(0,r.jsx)(i.code,{children:"git ls-files"})," is unavailable or ",(0,r.jsx)(i.code,{children:"--disable-git-ignore"})," is set, Semgrep walks the file system to find all target files. Semgrep now walks the file system 30% faster compared to previous versions."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"improved-semgrep-output-format",children:"Improved Semgrep output format"}),"\n",(0,r.jsx)(i.p,{children:"The output format is updated to visually separate lines with headings and indentation."}),"\n",(0,r.jsx)(i.h3,{id:"fixes",children:"Fixes"}),"\n",(0,r.jsx)(i.h4,{id:"deep-expression-matching-and-metavariable-interaction",children:"Deep expression matching and metavariable interaction"}),"\n",(0,r.jsxs)(i.p,{children:["Semgrep does not stop at the first match and enumerates all possible matches if a metavariable is used in a deep expression pattern (for example: ",(0,r.jsx)(i.code,{children:"<... $X ...>"}),"). This fix can introduce performance regressions."]}),"\n",(0,r.jsx)(i.h3,{id:"additional-information-1",children:"Additional information"}),"\n",(0,r.jsxs)(i.p,{children:["To see the complete change notes, visit the ",(0,r.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/releases/tag/v0.85.0",children:"Semgrep changelog"}),"."]}),"\n",(0,r.jsx)(i.h2,{id:"version-0840",children:"Version 0.84.0"}),"\n",(0,r.jsx)(i.h3,{id:"additions-2",children:"Additions"}),"\n",(0,r.jsx)(i.h4,{id:"semgrep-cli-lists-supported-languages",children:"Semgrep CLI lists supported languages"}),"\n",(0,r.jsxs)(i.p,{children:["Semgrep CLI now includes ",(0,r.jsx)(i.code,{children:"--show-supported-languages"})," flag to display the list of languages supported by Semgrep. Thanks to John Wu for this contribution! (",(0,r.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/pull/4754",children:"#4754"}),")"]}),"\n",(0,r.jsx)(i.h4,{id:"jsx-javascript-improvement",children:"JSX (JavaScript) improvement"}),"\n",(0,r.jsx)(i.p,{children:"Semgrep CLI now provides the following improvements for JSX (JavaScript extension) scans:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Semgrep scans for JSX self closing tags (XML elements) such as ",(0,r.jsx)(i.code,{children:"<foo />"})," can result in a match of explicitly closed tags, for example: ",(0,r.jsx)(i.code,{children:"<foo >some child</foo>"}),". You can now disable this behavior by rule options: ",(0,r.jsx)(i.code,{children:"xml_singleton_loose_matching: false"})," (#4730)"]}),"\n",(0,r.jsxs)(i.li,{children:["New rule option ",(0,r.jsx)(i.code,{children:"xml_attrs_implicit_ellipsis"})," that allows you to disable the implicit ellipsis ",(0,r.jsx)(i.code,{children:"..."})," that was added to JSX attributes patterns."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"updated-validation-of-rules",children:"Updated validation of rules"}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.code,{children:"semgrep --config [file] --validate"})," now checks for invalid metavariables."]}),"\n",(0,r.jsxs)(i.h4,{id:"the-project-depends-on-now-supports-more-languages",children:["The ",(0,r.jsx)(i.code,{children:"project-depends-on"})," now supports more languages"]}),"\n",(0,r.jsxs)(i.p,{children:["You can now use ",(0,r.jsx)(i.code,{children:"r2c-internal-project-depends-on"})," with lockfiles for Java, Go, Ruby, and Rust. (",(0,r.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/pull/4699",children:"#4699"}),")"]}),"\n",(0,r.jsx)(i.h4,{id:"improved-php-support",children:"Improved PHP support"}),"\n",(0,r.jsxs)(i.p,{children:["Semgrep now treats TPL files as PHP files. (",(0,r.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/pull/4763",children:"#4763"}),")"]}),"\n",(0,r.jsx)(i.h4,{id:"improved-scala-support",children:"Improved Scala support"}),"\n",(0,r.jsx)(i.p,{children:"Semgrep CLI now provides the following improvements for Scala language scans:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Custom string interpolators. (",(0,r.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/issues/4655",children:"#4655"}),")"]}),"\n",(0,r.jsx)(i.li,{children:"Support for parsing scripts that contain plain definitions outside of an object or class."}),"\n"]})]})}function p(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},47943:e=>{e.exports=JSON.parse('{"permalink":"/docs/release-notes/march-2022","source":"@site/release-notes/march-2022.md","title":"March 2022","description":"Release notes include the changes, fixes, and additions in specific versions of Semgrep.","date":"2022-03-30T10:00:00.000Z","tags":[{"inline":true,"label":"Release notes","permalink":"/docs/release-notes/tags/release-notes"}],"readingTime":4.485,"hasTruncateMarker":true,"authors":[],"frontMatter":{"slug":"march-2022","append_help_link":true,"hide_title":true,"description":"Release notes include the changes, fixes, and additions in specific versions of Semgrep.","toc_max_heading_level":3,"tags":["Release notes"],"hide_table_of_contents":false,"date":"2022-03-30T10:00","title":"March 2022"},"unlisted":false,"prevItem":{"title":"April 2022","permalink":"/docs/release-notes/april-2022"},"nextItem":{"title":"February 2022","permalink":"/docs/release-notes/february-2022"}}')}}]);