"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[60624],{23329:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"kb/semgrep-ci/bitbucket-jenkins-freestyle-projects","title":"Set up Jenkins Freestyle projects for Bitbucket repositories","description":"Set up Jenkins freestyle projects for Bitbucket repositories.","source":"@site/docs/kb/semgrep-ci/bitbucket-jenkins-freestyle-projects.md","sourceDirName":"kb/semgrep-ci","slug":"/kb/semgrep-ci/bitbucket-jenkins-freestyle-projects","permalink":"/semgrep-docs/kb/semgrep-ci/bitbucket-jenkins-freestyle-projects","draft":false,"unlisted":false,"editUrl":"https://github.com/kyle-semgrep/semgrep-docs/edit/main/docs/kb/semgrep-ci/bitbucket-jenkins-freestyle-projects.md","tags":[{"inline":true,"label":"Bitbucket","permalink":"/semgrep-docs/tags/bitbucket"},{"inline":true,"label":"Jenkins","permalink":"/semgrep-docs/tags/jenkins"},{"inline":true,"label":"Freestyle projects","permalink":"/semgrep-docs/tags/freestyle-projects"}],"version":"current","lastUpdatedAt":1753214405000,"frontMatter":{"tags":["Bitbucket","Jenkins","Freestyle projects"],"description":"Set up Jenkins freestyle projects for Bitbucket repositories."},"sidebar":"kbSidebar","previous":{"title":"Running Semgrep using templates in Azure Pipelines","permalink":"/semgrep-docs/kb/semgrep-ci/azure-using-templates-with-semgrep"},"next":{"title":"Triggering events from Bitbucket to Jenkins","permalink":"/semgrep-docs/kb/semgrep-ci/bitbucket-triggering-events-to-jenkins"}}');var r=n(74848),i=n(28453);const c={tags:["Bitbucket","Jenkins","Freestyle projects"],description:"Set up Jenkins freestyle projects for Bitbucket repositories."},o="Set up Jenkins Freestyle projects for Bitbucket repositories",l={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Create a Jenkins Freestyle project",id:"create-a-jenkins-freestyle-project",level:2},{value:"Run full scans",id:"run-full-scans",level:2},{value:"Run scans on pull requests (diff-aware scans)",id:"run-scans-on-pull-requests-diff-aware-scans",level:2}];function a(e){const s={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"set-up-jenkins-freestyle-projects-for-bitbucket-repositories",children:"Set up Jenkins Freestyle projects for Bitbucket repositories"})}),"\n",(0,r.jsx)(s.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(s.p,{children:["Ensure you have set up ",(0,r.jsx)(s.a,{href:"https://semgrep.dev/docs/kb/semgrep-ci/bitbucket-triggering-events-to-jenkins/",children:"triggering events from Bitbucket to Jenkins"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"create-a-jenkins-freestyle-project",children:"Create a Jenkins Freestyle project"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["From the Jenkins ",(0,r.jsx)(s.strong,{children:"Dashboard"}),", click ",(0,r.jsx)(s.strong,{children:"New Item"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["Type a project name and select ",(0,r.jsx)(s.strong,{children:"Freestyle project"}),". Click ",(0,r.jsx)(s.strong,{children:"OK"}),".\n",(0,r.jsx)(s.img,{alt:"Filled-out item name and Freestyle option",src:n(25079).A+"",width:"2418",height:"608"})]}),"\n",(0,r.jsxs)(s.li,{children:["On the ",(0,r.jsx)(s.strong,{children:"General"})," page, go to the ",(0,r.jsx)(s.strong,{children:"Source Code Management"})," section. Select ",(0,r.jsx)(s.strong,{children:"Git"}),". Add your Bitbucket ",(0,r.jsx)(s.strong,{children:"Repository URL"}),", select the ",(0,r.jsx)(s.strong,{children:"Credentials"})," needed to check out sources, and select the ",(0,r.jsx)(s.strong,{children:"Branches to build"}),".\n",(0,r.jsx)(s.img,{alt:"Filled-out repository details",src:n(63623).A+"",width:"2764",height:"1140"})]}),"\n",(0,r.jsxs)(s.li,{children:["In the ",(0,r.jsx)(s.strong,{children:"Build Triggers"})," section, click ",(0,r.jsxs)(s.strong,{children:[(0,r.jsx)("i",{class:"fa-solid fa-square-check"})," Build with Bitbucket Push and Pull Request Plugin"]}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["In ",(0,r.jsx)(s.strong,{children:"Triggers > Select an Action"})," select ",(0,r.jsx)(s.strong,{children:"Created"}),", ",(0,r.jsx)(s.strong,{children:"Updated"}),", and ",(0,r.jsx)(s.strong,{children:"Push"}),".\n",(0,r.jsx)(s.img,{alt:"Build triggers for the freestyle project",src:n(95761).A+"",width:"2784",height:"796"})]}),"\n",(0,r.jsxs)(s.li,{children:["In the ",(0,r.jsx)(s.strong,{children:"Build environment"})," section, declare the ",(0,r.jsx)(s.code,{children:"SEMGREP_APP_TOKEN"})," by selecting ",(0,r.jsx)(s.strong,{children:"Use secret text or file."})," Set ",(0,r.jsx)(s.strong,{children:"Variable"})," to ",(0,r.jsx)(s.code,{children:"SEMGREP_APP_TOKEN"})," and ",(0,r.jsx)(s.strong,{children:"Credentials > Specific credentials"})," to the defined credential for the Semgrep token. Click ",(0,r.jsx)(s.strong,{children:"Add"})," to save your changes.\n",(0,r.jsx)(s.img,{alt:"Filled-out the secrets text option",src:n(79315).A+"",width:"2042",height:"824"})]}),"\n"]}),"\n",(0,r.jsx)(s.admonition,{type:"note",children:(0,r.jsxs)(s.p,{children:["Ensure that you have ",(0,r.jsxs)(s.a,{href:"https://www.jenkins.io/doc/book/using/using-credentials/#configuring-credentials",children:["defined ",(0,r.jsx)(s.code,{children:"SEMGREP_APP_TOKEN"})," as a credential"]})," in Jenkins."]})}),"\n",(0,r.jsx)(s.h2,{id:"run-full-scans",children:"Run full scans"}),"\n",(0,r.jsxs)(s.p,{children:["In the ",(0,r.jsx)(s.strong,{children:"Build Steps"})," section, add an ",(0,r.jsx)(s.strong,{children:"Execute Shell"})," step with the logic below:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"#!/bin/bash\n\nREPO_URL=$GIT_URL\nREPO_NAME=$(echo \"$GIT_URL\" | awk -F'/' '{print $(NF-1)\"/\"$(NF)}' | sed 's/.git$//')\n\ndocker run \\\n    -e SEMGREP_APP_TOKEN=$SEMGREP_APP_TOKEN \\\n    -e SEMGREP_REPO_URL=$REPO_URL \\\n    -e SEMGREP_REPO_NAME=$REPO_NAME \\\n    -v \"$(pwd):$(pwd)\" --workdir $(pwd) \\\n    semgrep/semgrep semgrep ci\n"})}),"\n",(0,r.jsx)(s.admonition,{type:"note",children:(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["The variable ",(0,r.jsx)(s.code,{children:"SEMGREP_REPO_URL"})," links the Semgrep project and findings with the Bitbucket repository."]}),"\n",(0,r.jsxs)(s.li,{children:["The variable ",(0,r.jsx)(s.code,{children:"SEMGREP_REPO_NAME"})," provides an accurate and meaningful name to the Semgrep project."]}),"\n"]})}),"\n",(0,r.jsx)(s.p,{children:"After adding the script, a full scan runs when you push changes to the default branch."}),"\n",(0,r.jsx)(s.h2,{id:"run-scans-on-pull-requests-diff-aware-scans",children:"Run scans on pull requests (diff-aware scans)"}),"\n",(0,r.jsxs)(s.p,{children:["The diff-aware scan configuration must specify a merge base to compare the PR changes against. To achieve that, specify the pull request target branch as ",(0,r.jsx)(s.code,{children:"SEMGREP_BASELINE_REF"}),", and set ",(0,r.jsx)(s.code,{children:"SEMGREP_BRANCH"})," to the pull request source branch to ensure it's correctly identified. Set the ",(0,r.jsx)(s.code,{children:"SEMGREP_REPO_NAME"})," as described above for full scans, and add ",(0,r.jsx)(s.code,{children:"SEMGREP_PR_ID"})," so Semgrep can send comments to the related PR."]}),"\n",(0,r.jsx)(s.p,{children:"One possible way to modify the shell script to include diff-aware scans is:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:'#!/bin/bash\n\nBASELINE_REF="main"\nBASELINE_REF_ORIGIN="origin/$BASELINE_REF" \n\nREPO_URL=$GIT_URL\nREPO_NAME=$(echo "$GIT_URL" | awk -F\'/\' \'{print $(NF-1)"/"$(NF)}\' | sed \'s/.git$//\')\n\n## Merge or push to primary branch\nif [ $BITBUCKET_SOURCE_BRANCH = $BASELINE_REF ]; then\n    docker run -e SEMGREP_APP_TOKEN=$SEMGREP_APP_TOKEN \\\n               -e SEMGREP_REPO_URL=$REPO_URL \\\n               -e SEMGREP_REPO_NAME=$REPO_NAME \\\n               -v "$(pwd):$(pwd)" --workdir $(pwd) \\\n               semgrep/semgrep semgrep ci\n ## pull request scans\n elif [ $BITBUCKET_PULL_REQUEST_ID -ge 0 ]; then\n    git checkout $BITBUCKET_SOURCE_BRANCH && git pull\n    docker run -e SEMGREP_APP_TOKEN=$SEMGREP_APP_TOKEN \\\n    \t\t   -e SEMGREP_BASELINE_REF=$BASELINE_REF_ORIGIN \\\n               -e SEMGREP_REPO_URL=$REPO_URL \\\n               -e SEMGREP_REPO_NAME=$REPO_NAME \\\n               -e SEMGREP_BRANCH=$BITBUCKET_SOURCE_BRANCH \\\n               -e SEMGREP_PR_ID=$BITBUCKET_PULL_REQUEST_ID \\\n               -v "$(pwd):/src" \\\n               semgrep/semgrep semgrep ci\nfi \n'})}),"\n",(0,r.jsx)(s.admonition,{type:"note",children:(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["The variable ",(0,r.jsx)(s.code,{children:"SEMGREP_BASELINE_REF"})," must be set to the default branch, which, in the example, is ",(0,r.jsx)(s.code,{children:"main"}),"."]}),"\n"]})})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},25079:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/bitbucket-jenkins-freestyle-152a05b4597c08fa8d187180c936dd28.png"},28453:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>o});var t=n(96540);const r={},i=t.createContext(r);function c(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(i.Provider,{value:s},e.children)}},63623:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/bitbucket-jenkins-freestyle-repository-details-ab12ea28256fdefffc16c9841b8f64c9.png"},79315:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/bitbucket-jenkins-freestyle-token-34ce8eb273e8c06ce9bfcebac36212c8.png"},95761:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/bitbucket-jenkins-freestyle-events-449a0060795cbc280a62da27a831a50f.png"}}]);