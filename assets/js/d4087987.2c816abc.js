"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[34760],{28453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>o});var s=n(96540);const t={},a=s.createContext(t);function r(e){const i=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(a.Provider,{value:i},e.children)}},48805:e=>{e.exports=JSON.parse('{"permalink":"/semgrep-docs/release-notes/january-2022","source":"@site/release-notes/january-2022.md","title":"January 2022","description":"Release notes include the changes, fixes, and additions in specific versions of Semgrep.","date":"2022-01-30T10:00:00.000Z","tags":[{"inline":true,"label":"Release notes","permalink":"/semgrep-docs/release-notes/tags/release-notes"}],"readingTime":1.47,"hasTruncateMarker":true,"authors":[],"frontMatter":{"slug":"january-2022","append_help_link":true,"hide_title":true,"description":"Release notes include the changes, fixes, and additions in specific versions of Semgrep.","toc_max_heading_level":3,"tags":["Release notes"],"hide_table_of_contents":false,"date":"2022-01-30T10:00","title":"January 2022"},"unlisted":false,"prevItem":{"title":"February 2022","permalink":"/semgrep-docs/release-notes/february-2022"},"nextItem":{"title":"December 2021","permalink":"/semgrep-docs/release-notes/december-2021"}}')},83154:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var s=n(48805),t=n(74848),a=n(28453);const r={slug:"january-2022",append_help_link:!0,hide_title:!0,description:"Release notes include the changes, fixes, and additions in specific versions of Semgrep.",toc_max_heading_level:3,tags:["Release notes"],hide_table_of_contents:!1,date:"2022-01-30T10:00",title:"January 2022"},o="January 2022",l={authorsImageUrls:[]},d=[{value:"Version 0.80.0",id:"version-0800",level:2},{value:"Additions",id:"additions",level:3},{value:"Autocomplete",id:"autocomplete",level:4},{value:"Dockerfile",id:"dockerfile",level:4},{value:"Changes",id:"changes",level:3},{value:"Ruby",id:"ruby",level:4},{value:"Fixes",id:"fixes",level:3},{value:"Missing target file does not lead to Semgrep crash",id:"missing-target-file-does-not-lead-to-semgrep-crash",level:4},{value:"Additional information",id:"additional-information",level:3},{value:"Version 0.79.0",id:"version-0790",level:2},{value:"Additions",id:"additions-1",level:3},{value:"Ignoring code",id:"ignoring-code",level:4},{value:"Changes",id:"changes-1",level:3},{value:"Verbose output",id:"verbose-output",level:4},{value:"Version 0.78.0",id:"version-0780",level:2},{value:"Additions",id:"additions-2",level:3},{value:"Symbolic propagation",id:"symbolic-propagation",level:4},{value:"Verbose output",id:"verbose-output-1",level:4},{value:"Metavariables",id:"metavariables",level:4},{value:"Dockerfile",id:"dockerfile-1",level:4},{value:"Additional information",id:"additional-information-1",level:3}];function c(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.p,{children:"The following updates were made to Semgrep in January 2022."}),"\n",(0,t.jsx)(i.h2,{id:"version-0800",children:"Version 0.80.0"}),"\n",(0,t.jsx)(i.h3,{id:"additions",children:"Additions"}),"\n",(0,t.jsx)(i.h4,{id:"autocomplete",children:"Autocomplete"}),"\n",(0,t.jsx)(i.p,{children:"Autocomplete is now available for CLI options."}),"\n",(0,t.jsx)(i.h4,{id:"dockerfile",children:"Dockerfile"}),"\n",(0,t.jsxs)(i.p,{children:["Support for Semgrep's metavariables where argument expansion is already supported. (",(0,t.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/pull/4556",children:"#4556"}),")"]}),"\n",(0,t.jsx)(i.h3,{id:"changes",children:"Changes"}),"\n",(0,t.jsx)(i.h4,{id:"ruby",children:"Ruby"}),"\n",(0,t.jsxs)(i.p,{children:["You can now use an atom to match an identifier of the same name. (",(0,t.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/issues/4550",children:"#4550"}),")"]}),"\n",(0,t.jsx)(i.h3,{id:"fixes",children:"Fixes"}),"\n",(0,t.jsx)(i.h4,{id:"missing-target-file-does-not-lead-to-semgrep-crash",children:"Missing target file does not lead to Semgrep crash"}),"\n",(0,t.jsxs)(i.p,{children:["Before this update, handling a missing target file could crash Semgrep. This issue has been fixed. (",(0,t.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/issues/4462",children:"#4462"}),")"]}),"\n",(0,t.jsx)(i.h3,{id:"additional-information",children:"Additional information"}),"\n",(0,t.jsxs)(i.p,{children:["To see the complete change notes, visit the ",(0,t.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/releases/tag/v0.80.0",children:"Semgrep changelog"}),"."]}),"\n",(0,t.jsx)(i.h2,{id:"version-0790",children:"Version 0.79.0"}),"\n",(0,t.jsx)(i.h3,{id:"additions-1",children:"Additions"}),"\n",(0,t.jsx)(i.h4,{id:"ignoring-code",children:"Ignoring code"}),"\n",(0,t.jsxs)(i.p,{children:["Support for placing nosemgrep comments on the line before a match, causing such match to be ignored (",(0,t.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/issues/3521",children:"#3521"}),")."]}),"\n",(0,t.jsx)(i.h3,{id:"changes-1",children:"Changes"}),"\n",(0,t.jsx)(i.h4,{id:"verbose-output",children:"Verbose output"}),"\n",(0,t.jsxs)(i.p,{children:["Parse errors (reported with ",(0,t.jsx)(i.code,{children:"--verbose"}),") appear once per file, not once per rule/file."]}),"\n",(0,t.jsx)(i.h2,{id:"version-0780",children:"Version 0.78.0"}),"\n",(0,t.jsx)(i.h3,{id:"additions-2",children:"Additions"}),"\n",(0,t.jsx)(i.h4,{id:"symbolic-propagation",children:"Symbolic propagation"}),"\n",(0,t.jsxs)(i.p,{children:["Semgrep can now symbolically propagate simple definitions. For example, given\nan assignment ",(0,t.jsx)(i.code,{children:"x = foo.bar()"})," followed by a call ",(0,t.jsx)(i.code,{children:"x.baz()"}),", Semgrep will keep track of ",(0,t.jsx)(i.code,{children:"x"}),"'s definition, and it will successfully match ",(0,t.jsx)(i.code,{children:"x.baz()"})," with a pattern like ",(0,t.jsx)(i.code,{children:"foo.bar().baz()"}),". This feature should help writing simple yet powerful rules, by letting the dataflow engine take care of any intermediate assignments. Symbolic propagation is still experimental and is disabled by default. It must be enabled on a per-rule basis using ",(0,t.jsx)(i.code,{children:"options:"})," and setting ",(0,t.jsx)(i.code,{children:"symbolic_propagation: true"}),". (",(0,t.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/issues/2783",children:"#2783"}),", ",(0,t.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/issues/2859",children:"#2859"}),", ",(0,t.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/issues/3207",children:"#3207"}),")"]}),"\n",(0,t.jsx)(i.h4,{id:"verbose-output-1",children:"Verbose output"}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.code,{children:"--verbose"})," now outputs a timing and file breakdown summary at the end."]}),"\n",(0,t.jsx)(i.h4,{id:"metavariables",children:"Metavariables"}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.code,{children:"metavariable-comparison"})," now handles metavariables that bind to arbitrary constant expressions (instead of just code variables)."]}),"\n",(0,t.jsx)(i.h4,{id:"dockerfile-1",children:"Dockerfile"}),"\n",(0,t.jsx)(i.p,{children:"Pre-alpha support for Dockerfile as a new target language."}),"\n",(0,t.jsx)(i.h3,{id:"additional-information-1",children:"Additional information"}),"\n",(0,t.jsxs)(i.p,{children:["To see the complete change notes, visit the ",(0,t.jsx)(i.a,{href:"https://github.com/semgrep/semgrep/releases/tag/v0.78.0",children:"Semgrep changelog"}),"."]})]})}function h(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);