"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[71153],{2286:(e,n,r)=>{r.d(n,{Ay:()=>c,RM:()=>t});var s=r(74848),o=r(28453);const t=[];function i(e){const n={code:"code",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Log in to your Semgrep account. Running this command launches a browser window, but you can also use the link that's returned in the CLI to proceed:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"semgrep login\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["In the ",(0,s.jsx)(n.strong,{children:"Semgrep CLI login"}),", click ",(0,s.jsx)(n.strong,{children:"Activate"})," to proceed."]}),"\n"]}),"\n"]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var s=r(96540);const o={},t=s.createContext(o);function i(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(t.Provider,{value:n},e.children)}},54568:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>m,default:()=>d,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"extensions/pre-commit","title":"Run scans on pre-commit","description":"Learn to run a Semgrep scan before committing code; this prevents security issues or leaked secrets from entering your source control\'s history.","source":"@site/docs/extensions/pre-commit.md","sourceDirName":"extensions","slug":"/extensions/pre-commit","permalink":"/semgrep-docs/extensions/pre-commit","draft":false,"unlisted":false,"editUrl":"https://github.com/semgrep/semgrep-docs/edit/main/docs/extensions/pre-commit.md","tags":[{"inline":true,"label":"Extensions","permalink":"/semgrep-docs/tags/extensions"}],"version":"current","lastUpdatedAt":1742490183000,"frontMatter":{"slug":"pre-commit","title":"Run scans on pre-commit","hide_title":true,"description":"Learn to run a Semgrep scan before committing code; this prevents security issues or leaked secrets from entering your source control\'s history.","tags":["Extensions"]},"sidebar":"scanSidebar","previous":{"title":"IntelliJ extension","permalink":"/semgrep-docs/extensions/semgrep-intellij"},"next":{"title":"Jira","permalink":"/semgrep-docs/semgrep-appsec-platform/jira"}}');var o=r(74848),t=r(28453),i=r(2286);const c={slug:"pre-commit",title:"Run scans on pre-commit",hide_title:!0,description:"Learn to run a Semgrep scan before committing code; this prevents security issues or leaked secrets from entering your source control's history.",tags:["Extensions"]},m="Run scans on pre-commit",p={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"<code>pre-commit</code> with Semgrep CE (no login)",id:"pre-commit-with-semgrep-ce-no-login",level:2},{value:"<code>pre-commit</code> with your Semgrep AppSec Platform configuration",id:"pre-commit-with-your-semgrep-appsec-platform-configuration",level:2},...i.RM];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsxs)(n.h1,{id:"run-scans-on-pre-commit",children:["Run scans on ",(0,o.jsx)(n.code,{children:"pre-commit"})]})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.a,{href:"https://pre-commit.com/",children:"pre-commit framework"})," can run ",(0,o.jsx)(n.code,{children:"semgrep"})," when you commit changes. This is helpful in preventing secrets and security issues from leaking into your Git history."]}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsxs)(n.a,{href:"https://pre-commit.com",children:[(0,o.jsx)("i",{class:"fas fa-external-link fa-xs"})," The ",(0,o.jsx)(n.code,{children:"pre-commit"})," framework"]}),"."]}),"\n",(0,o.jsxs)(n.h2,{id:"pre-commit-with-semgrep-ce-no-login",children:[(0,o.jsx)(n.code,{children:"pre-commit"})," with Semgrep CE (no login)"]}),"\n",(0,o.jsxs)(n.p,{children:["Use these instructions to run ",(0,o.jsx)(n.code,{children:"pre-commit"})," without logging in. You can still use custom rules or rules from the Semgrep Registry."]}),"\n",(0,o.jsxs)(n.p,{children:["Add the following to your ",(0,o.jsx)(n.code,{children:".pre-commit-config.yaml"})," file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"repos:\n- repo: https://github.com/semgrep/pre-commit\n  rev: 'SEMGREP_VERSION_LATEST'\n  hooks:\n    - id: semgrep\n      entry: semgrep\n      # Replace <SEMGREP_RULESET_URL> with your custom rule source\n      # or see https://semgrep.dev/explore to select a ruleset and copy its URL\n      args: ['--config', '<SEMGREP_RULESET_URL>', '--error', '--skip-unknown-extensions']\n"})}),"\n",(0,o.jsxs)(n.h2,{id:"pre-commit-with-your-semgrep-appsec-platform-configuration",children:[(0,o.jsx)(n.code,{children:"pre-commit"})," with your Semgrep AppSec Platform configuration"]}),"\n",(0,o.jsxs)(n.p,{children:["You  can also run custom rules and rulesets from Semgrep AppSec Platform, similar to running ",(0,o.jsx)(n.code,{children:"semgrep ci"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Ensure that you are logged in:"}),"\n",(0,o.jsx)(i.Ay,{}),"\n",(0,o.jsxs)(n.p,{children:["Add the following to your ",(0,o.jsx)(n.code,{children:".pre-commit-config.yaml"})," file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"repos:\n- repo: https://github.com/semgrep/pre-commit\n  rev: 'SEMGREP_VERSION_LATEST'\n  hooks:\n    - id:  semgrep-ci\n"})}),"\n",(0,o.jsxs)(n.p,{children:["For guidance on customizing Semgrep's behavior in pre-commit, see ",(0,o.jsx)(n.a,{href:"/docs/kb/integrations/customize-semgrep-precommit",children:"Customize Semgrep in pre-commit"}),"."]})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}}}]);