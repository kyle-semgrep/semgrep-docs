"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[33755],{28453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>l});var s=r(96540);const i={},o=s.createContext(i);function t(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(o.Provider,{value:n},e.children)}},60717:(e,n,r)=>{r.d(n,{A:()=>i});r(96540);var s=r(74848);function i(e){let{children:n}=e;return(0,s.jsx)("span",{style:{color:"#E3116C",fontStyle:"italic",fontWeight:"bold"},children:n})}},73277:(e,n,r)=>{r.d(n,{Ay:()=>l,RM:()=>o});var s=r(74848),i=r(28453);const o=[];function t(e){const n={a:"a",li:"li",ol:"ol",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["On the Semgrep Code ",(0,s.jsx)(n.a,{href:"https://semgrep.dev/orgs/-/findings?tab=open",children:"Findings"})," page, click the ",(0,s.jsx)(n.strong,{children:"Status"})," filter, and then select the ",(0,s.jsx)(n.strong,{children:"Open"})," status to see all open findings."]}),"\n",(0,s.jsxs)(n.li,{children:["Next to a finding you want to ignore, click ",(0,s.jsx)(n.strong,{children:"Open"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Optional: Select ",(0,s.jsx)(n.strong,{children:"Ignore reason"}),". Choose either: ",(0,s.jsx)(n.strong,{children:"False positive"}),", ",(0,s.jsx)(n.strong,{children:"Acceptable risk"}),", ",(0,s.jsx)(n.strong,{children:"No time to fix"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Click ",(0,s.jsx)(n.strong,{children:"Done"}),"."]}),"\n"]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}},79678:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/global-ignore-paths-a1e6b2bf3657bcf9248d6e02e78523d3.png"},89238:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/per-project-ignores-c5d002bd8f92a501e934d176d6e68939.png"},94397:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>g,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"ignoring-files-folders-code","title":"Ignore files, folders, and code","description":"This documents various methods to skip or ignore files or folders that are not relevant to a Semgrep scan.","source":"@site/docs/ignoring-files-folders-code.md","sourceDirName":".","slug":"/ignoring-files-folders-code","permalink":"/semgrep-docs/ignoring-files-folders-code","draft":false,"unlisted":false,"editUrl":"https://github.com/kyle-semgrep/semgrep-docs/edit/main?base=kyle-semgrep:main/docs/ignoring-files-folders-code.md","tags":[{"inline":true,"label":"Semgrep AppSec Platform","permalink":"/semgrep-docs/tags/semgrep-app-sec-platform"}],"version":"current","frontMatter":{"slug":"ignoring-files-folders-code","append_help_link":true,"title":"Ignore files, folders, and code","description":"This documents various methods to skip or ignore files or folders that are not relevant to a Semgrep scan.","hide_title":true,"tags":["Semgrep AppSec Platform"]},"sidebar":"scanSidebar","previous":{"title":"Beyond core deployment","permalink":"/semgrep-docs/deployment/beyond-core-deployment"},"next":{"title":"Semgrep Supply Chain","permalink":"/semgrep-docs/semgrep-supply-chain/ignoring-dependencies"}}');var i=r(74848),o=r(28453),t=(r(73277),r(60717));const l={slug:"ignoring-files-folders-code",append_help_link:!0,title:"Ignore files, folders, and code",description:"This documents various methods to skip or ignore files or folders that are not relevant to a Semgrep scan.",hide_title:!0,tags:["Semgrep AppSec Platform"]},d="Ignore files, folders, and code",c={},a=[{value:"Reference summary",id:"reference-summary",level:2},{value:"Understand Semgrep defaults",id:"understand-semgrep-defaults",level:2},{value:"Override defaults",id:"override-defaults",level:2},{value:"Files, folders, and code beyond Semgrep&#39;s scope",id:"files-folders-and-code-beyond-semgreps-scope",level:2},{value:"Customize ignore behavior",id:"customize-ignore-behavior",level:2},{value:"Define ignored files and folders in <code>.semgrepignore</code>",id:"define-ignored-files-and-folders-in-semgrepignore",level:2},{value:"Define ignored files and folders in Semgrep AppSec Platform",id:"define-ignored-files-and-folders-in-semgrep-appsec-platform",level:2},{value:"Define files and folders for a specific project",id:"define-files-and-folders-for-a-specific-project",level:3},{value:"Define files and folders for all projects of an organization",id:"define-files-and-folders-for-all-projects-of-an-organization",level:3},{value:"Add items to <code>.semgrepignore</code> during findings triage",id:"add-items-to-semgrepignore-during-findings-triage",level:3},{value:"Ignore code through nosemgrep",id:"ignore-code-through-nosemgrep",level:2},{value:"Disable rules on Semgrep AppSec Platform",id:"disable-rules-on-semgrep-appsec-platform",level:2},{value:"Ignore findings",id:"ignore-findings",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Tips to prevent unexpected ignore behavior",id:"tips-to-prevent-unexpected-ignore-behavior",level:3},{value:"<code>SAST_EXCLUDED_PATHS</code>",id:"sast_excluded_paths",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"ignore-files-folders-and-code",children:"Ignore files, folders, and code"})}),"\n",(0,i.jsx)(n.p,{children:"This document describes two types of ignore operations:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Ignoring as exclusion."})," Exclude or skip specific ",(0,i.jsx)(n.strong,{children:"files and folders"})," from the scope of Semgrep scans in your repository or working directory. Ignoring in this context means that Semgrep does not generate findings for the ignored files and folders."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Ignoring as triage action"}),". Ignore specific parts of code that would have generated a finding. Ignoring in this context means that Semgrep generates a finding record and automatically triages it as ",(0,i.jsx)(n.strong,{children:"Ignored"}),", a triage state."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"All Semgrep environments (CLI, CI, and Semgrep AppSec Platform) adhere to user-defined or Semgrep-defined ignore patterns."}),"\n",(0,i.jsx)(n.h2,{id:"reference-summary",children:"Reference summary"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Method"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Usage"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:["To ignore blocks of code: Add a ",(0,i.jsx)(n.code,{children:"nosemgrep"})," annotation"]}),(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:["Create a comment, followed by ",(0,i.jsx)(n.code,{children:"nosemgrep"}),", at the first line or preceding line of the pattern match. This generates a finding that is automatically ignored. ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"For example:",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),(0,i.jsx)(n.code,{children:" // nosemgrep"})," \xa0 \xa0 \xa0",(0,i.jsx)("br",{}),(0,i.jsx)(n.code,{children:"// nosemgrep: rule-id"})," ",(0,i.jsx)("br",{})," ",(0,i.jsx)(n.code,{children:"# nosemgrep"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:["For Semgrep AppSec Platform users: ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),(0,i.jsxs)("ul",{children:[(0,i.jsxs)("li",{children:["Ignore files and folders through the use of Semgrep AppSec Platform's ",(0,i.jsx)(n.strong,{children:"Project or Global ignores"})]}),(0,i.jsxs)("li",{children:["Override the implicit ignorelist through the use of a ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file."]})]})]}),(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:["Navigate to ",(0,i.jsxs)(n.strong,{children:["Projects > ",(0,i.jsx)(t.A,{children:"PROJECT_NAME"})," > Details > Settings > Path ignores"]}),".",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})," ",(0,i.jsx)(n.img,{alt:"Set ignore paths for a project in Semgrep AppSec Platform.",src:r(89238).A+"",width:"2508",height:"1752"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:["For Semgrep CE users:",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"Ignore files and folders through a ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file"]}),(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:["Create a ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file in your ",(0,i.jsx)(n.strong,{children:"repository's root directory"})," or your ",(0,i.jsx)(n.strong,{children:"project's working directory"})," and add patterns for files and folders there. Patterns follow ",(0,i.jsx)(n.code,{children:".gitignore"})," syntax with some caveats. See ",(0,i.jsxs)(n.a,{href:"#define-ignored-files-and-folders-in-semgrepignore",children:["Defining ignored files and folders in ",(0,i.jsx)(n.code,{children:".semgrepignore"})]}),"."]})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"understand-semgrep-defaults",children:"Understand Semgrep defaults"}),"\n",(0,i.jsx)(n.p,{children:"Without user customization, Semgrep refers to the following to define ignored files and folders:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Semgrep's default ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file"]}),"\n",(0,i.jsxs)(n.li,{children:["Your repository's ",(0,i.jsx)(n.code,{children:".gitignore"})," file (if it exists)"]}),"\n",(0,i.jsx)(n.li,{children:"For Semgrep AppSec Platform users: each project (repository or subfolder in monorepo) in Semgrep has a list of ignored files and folders in its project details page."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["In the absence of a user-generated ",(0,i.jsx)(n.code,{children:".semgrepignore"}),", Semgrep refers to ",(0,i.jsx)(n.a,{href:"https://github.com/semgrep/semgrep/blob/develop/cli/src/semgrep/templates/.semgrepignore",children:"its repository's default template"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"# Administrative folder or file used by popular version control systems\n.git\n.svn\n.hg\n_darcs\nCVS\n\n# Paths to files and folders that are typically large and ignorable\nbuild/\nvendor/\ndist/\n*.min.js\n.env/\n.tox/\n\n# Package managers\nnode_modules/\n.npm/\n.yarn/\n.venv/\n_opam/\n_build/\n_cargo/\n# Note that PHP composer uses vendor/ and C++ conan uses build/\n# .venv is used both by Go and Python.\n\n# Common test paths\ntest/\ntests/\ntestsuite/\n*_test.go\n\n"})}),"\n",(0,i.jsx)(n.h2,{id:"override-defaults",children:"Override defaults"}),"\n",(0,i.jsxs)(n.p,{children:["The default ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file causes Semgrep to skip these folders:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"/tests"}),", ",(0,i.jsx)(n.code,{children:"/test"})]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"/vendors"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"To include these folders:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Create a ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file at the repository root without those paths."]}),"\n",(0,i.jsxs)(n.li,{children:["For Platform users: remove the folders from the project ignore list in ",(0,i.jsxs)(n.strong,{children:["Projects > ",(0,i.jsx)(t.A,{children:"PROJECT_NAME"})," > Details page > Settings > Path ignores > Code (SAST) & Supply Chain (SCA)"]}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"files-folders-and-code-beyond-semgreps-scope",children:"Files, folders, and code beyond Semgrep's scope"}),"\n",(0,i.jsxs)(n.p,{children:["There are files that Semgrep ignores even without ",(0,i.jsx)(n.code,{children:".semgrepignore"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Large files (maximum file size defaults to 1 MB)"}),"\n",(0,i.jsx)(n.li,{children:"Binary files"}),"\n",(0,i.jsx)(n.li,{children:"Unknown file extensions (file extensions not matched with any supported programming language)"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Large files and unknown file extensions are included or excluded through command line flags (See ",(0,i.jsx)(n.a,{href:"/docs/cli-reference",children:"CLI reference"}),"). Binary files are never scanned."]}),"\n",(0,i.jsxs)(n.p,{children:["This document defines ",(0,i.jsx)(n.strong,{children:"files, folders and code"})," as those that are ",(0,i.jsx)(n.strong,{children:"relevant to a Semgrep scan"}),". For example, ",(0,i.jsx)(n.code,{children:".jpg"})," files are not a part of Semgrep's scope and therefore are not part of the scope of this document."]}),"\n",(0,i.jsx)(n.h2,{id:"customize-ignore-behavior",children:"Customize ignore behavior"}),"\n",(0,i.jsx)(n.p,{children:"Semgrep provides several methods to customize ignore behavior. Refer to the following table to see which method suits your goal:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Goal"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Method"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"To ignore custom files and folders each time you run a scan."}),(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:["Add these files to your ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file or ",(0,i.jsx)(n.a,{href:"#define-ignored-files-and-folders-in-semgrep-appsec-platform",children:"define them through Semgrep AppSec Platform"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"To ignore specific code blocks each time you run a scan."}),(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:["Create a comment with the word ",(0,i.jsx)(n.code,{children:"nosemgrep"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"To ignore files or folders for a particular scan."}),(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:["Run Semgrep with the flag ",(0,i.jsx)(n.code,{children:"--exclude"})," followed by the pattern or file to be excluded. See ",(0,i.jsx)(n.a,{href:"/cli-reference",children:"CLI reference"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"To include files or folders for a particular scan."}),(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:["Run Semgrep with the flag ",(0,i.jsx)(n.code,{children:"--include"})," followed by the pattern or file to be included. Any file that isn't matched is excluded. See CLI reference. When including a pattern from a ",(0,i.jsx)(n.code,{children:".gitignore"})," or ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file, ",(0,i.jsx)(n.code,{children:"--include"})," does not override either, resulting in the file's exclusion."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:["To scan all files within Semgrep's scope each time you run Semgrep (only files in ",(0,i.jsx)(n.code,{children:".git"})," are ignored)."]}),(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:["Create an empty ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file in your repository root directory, and for ",(0,i.jsx)(n.code,{children:"semgrep ci"})," scans, ",(0,i.jsxs)(n.a,{href:"#define-ignored-files-and-folders-in-semgrep-appsec-platform",children:["remove any entries listed in your ",(0,i.jsx)(n.strong,{children:"Path Ignores"})," list"]})," in Semgrep AppSec Platform."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:["To include files or folders defined within a ",(0,i.jsx)(n.code,{children:".gitignore"})," for a particular scan."]}),(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:["Run Semgrep with the flag ",(0,i.jsx)(n.code,{children:"--no-git-ignore"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"To ignore files or folders for a particular rule."}),(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:["Edit the rule to set the ",(0,i.jsx)(n.code,{children:"paths"})," key with one or more patterns. See ",(0,i.jsx)(n.a,{href:"/writing-rules/rule-syntax#paths",children:"Rule syntax"}),"."]})]})]})]}),"\n",(0,i.jsxs)(n.h2,{id:"define-ignored-files-and-folders-in-semgrepignore",children:["Define ignored files and folders in ",(0,i.jsx)(n.code,{children:".semgrepignore"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:".semgrepignore"})," syntax mirrors ",(0,i.jsx)(n.code,{children:".gitignore"})," syntax, with the following modifications:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:['"Include" patterns (lines starting with ',(0,i.jsx)(n.code,{children:"!"}),") are unsupported."]}),"\n",(0,i.jsx)(n.li,{children:'"Character range" patterns (lines including a collection of characters inside brackets) are unsupported.'}),"\n",(0,i.jsxs)(n.li,{children:["An ",(0,i.jsx)(n.code,{children:":include ..."})," directive is added, which allows another file to be included in the ignore pattern list; typically this included file would be the project ",(0,i.jsx)(n.code,{children:".gitignore"}),". No attempt at cycle detection is made."]}),"\n",(0,i.jsxs)(n.li,{children:["Any line that begins with a colon, but not ",(0,i.jsx)(n.code,{children:":include"}),", raises an error."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"\\:"})," is added to escape leading colons."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Unsupported patterns are silently removed from the pattern list (this is done so that ",(0,i.jsx)(n.code,{children:".gitignore"})," files may be included without raising errors). The removal is logged."]}),"\n",(0,i.jsxs)(n.p,{children:["For a description of ",(0,i.jsx)(n.code,{children:".gitignore"})," syntax, see ",(0,i.jsx)(n.a,{href:"https://git-scm.com/docs/gitignore",children:".gitignore documentation"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/semgrepignore-v2-reference",children:"Semgrepignore is being revised"})," to\nsupport multiple ",(0,i.jsx)(n.code,{children:".semgrepignore"})," files and match the Gitignore\nspecification more closely."]})}),"\n",(0,i.jsx)(n.h2,{id:"define-ignored-files-and-folders-in-semgrep-appsec-platform",children:"Define ignored files and folders in Semgrep AppSec Platform"}),"\n",(0,i.jsxs)(n.p,{children:["Another method for users to define ignore patterns is through Semgrep AppSec Platform. These patterns follow the same syntax as ",(0,i.jsx)(n.code,{children:".semgrepignore"})," in the preceding section. You can define patterns for individual projects, or you can define them at the organization level so that they're applied to all projects owned by that organization."]}),"\n",(0,i.jsxs)(n.p,{children:["Ignoring files and folders through this method is ",(0,i.jsx)(n.strong,{children:"additive"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Adding items to Semgrep AppSec Platform's ",(0,i.jsx)(n.strong,{children:"Path Ignores"})," box ",(0,i.jsx)(n.strong,{children:"doesn't"})," override default Semgrep ignore patterns included with its CLI tool, since the patterns are additive. To override a Semgrep default, both an existing local ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file and the ",(0,i.jsx)(n.strong,{children:"Path ignores"})," box must be configured. See ",(0,i.jsx)(n.a,{href:"#override-defaults",children:"Override defaults"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["All files and folders defined using Semgrep AppSec Platform's ",(0,i.jsx)(n.strong,{children:"Path Ignores"})," feature, both for a specific project and globally, are additive."]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["This method is utilized by the ",(0,i.jsx)(n.code,{children:"semgrep ci"})," command. For ",(0,i.jsx)(n.code,{children:"semgrep scan"}),", you can only define ignored files and folders through ",(0,i.jsx)(n.code,{children:".semgrepignore"}),"."]})}),"\n",(0,i.jsx)(n.h3,{id:"define-files-and-folders-for-a-specific-project",children:"Define files and folders for a specific project"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Sign in to ",(0,i.jsxs)(n.a,{href:"https://semgrep.dev/login?return_path=/manage/projects",children:[(0,i.jsx)("i",{class:"fas fa-external-link fa-xs"})," Semgrep AppSec Platform"]}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["From the sidebar, click ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://semgrep.dev/orgs/-/projects",children:"Projects"})}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Find the project you want to modify, then click its ",(0,i.jsxs)(n.strong,{children:[(0,i.jsx)("i",{class:"far fa-window-restore"})," icon"]})," under ",(0,i.jsx)(n.strong,{children:"Details"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Click the ",(0,i.jsx)(n.strong,{children:"Settings"})," tab."]}),"\n",(0,i.jsxs)(n.li,{children:["To define files and folders that Semgrep can ignore:","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"Code (SAST) & Supply Chain (SCA)"})," or ",(0,i.jsx)(n.strong,{children:"Secrets"})," to expand and display the ",(0,i.jsx)(n.strong,{children:"Path Ignores"})," box."]}),"\n",(0,i.jsxs)(n.li,{children:["Enter files and folders to ignore in the relevant ",(0,i.jsx)(n.strong,{children:"Path Ignores"})," box."]}),"\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"Save changes"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.img,{alt:"Set ignore paths for a project in Semgrep AppSec Platform.",src:r(89238).A+"#md-width",width:"2508",height:"1752"}),"\n",(0,i.jsxs)(n.em,{children:[(0,i.jsx)(n.strong,{children:"Figure"}),". Set ignore paths for a project in Semgrep AppSec Platform."]})]}),"\n",(0,i.jsx)(n.h3,{id:"define-files-and-folders-for-all-projects-of-an-organization",children:"Define files and folders for all projects of an organization"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Sign in to ",(0,i.jsxs)(n.a,{href:"https://semgrep.dev/login?return_path=/manage/projects",children:[(0,i.jsx)("i",{class:"fas fa-external-link fa-xs"})," Semgrep AppSec Platform"]}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"Settings"}),". This takes you to the ",(0,i.jsx)(n.strong,{children:"General > Global"})," settings tab."]}),"\n",(0,i.jsxs)(n.li,{children:["Enter files and folders to ignore in the ",(0,i.jsx)(n.strong,{children:"Ignore paths"})," box for the product to which the changes should apply."]}),"\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"Save changes"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.img,{alt:"Set global ignore paths for all projects of an organization in Semgrep AppSec Platform.",src:r(79678).A+"#md-width",width:"1982",height:"1418"}),"\n",(0,i.jsxs)(n.em,{children:[(0,i.jsx)(n.strong,{children:"Figure"}),". Set global ignore paths for all projects of an organization in Semgrep AppSec Platform."]})]}),"\n",(0,i.jsxs)(n.h3,{id:"add-items-to-semgrepignore-during-findings-triage",children:["Add items to ",(0,i.jsx)(n.code,{children:".semgrepignore"})," during findings triage"]}),"\n",(0,i.jsxs)(n.p,{children:["You can also add files to ",(0,i.jsx)(n.code,{children:".semgrepignore"})," while triaging individual findings using Semgrep AppSec Platform:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["On the Semgrep Code ",(0,i.jsx)(n.a,{href:"https://semgrep.dev/orgs/-/findings?tab=open",children:"Findings"})," page, click the ",(0,i.jsx)(n.strong,{children:"Status"})," filter, and then select the ",(0,i.jsx)(n.strong,{children:"Open"})," status to see all open findings."]}),"\n",(0,i.jsxs)(n.li,{children:["Click the finding you want ignored to open its ",(0,i.jsx)(n.strong,{children:"Details"})," page."]}),"\n",(0,i.jsxs)(n.li,{children:["Select ",(0,i.jsx)(n.strong,{children:"Ignored"}),", and optionally, select an ",(0,i.jsx)(n.strong,{children:"Ignore reason"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Click to expand ",(0,i.jsx)(n.strong,{children:"Ignore files in future scans..."}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Select the files you want ignored in future scans."}),"\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"Change status"})," to save."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"ignore-code-through-nosemgrep",children:"Ignore code through nosemgrep"}),"\n",(0,i.jsxs)(n.p,{children:["To ignore blocks of code, define an ",(0,i.jsx)(n.strong,{children:"inline comment"}),", followed by the word ",(0,i.jsx)(n.code,{children:"nosemgrep"}),", at either the ",(0,i.jsx)(n.strong,{children:"first line"})," or ",(0,i.jsx)(n.strong,{children:"the line preceding"})," the potential match. Semgrep ignores all rule pattern matches. This functionality works across all supported languages."]}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.p,{children:["Ignoring code through this method still generates a finding. The finding is automatically set to the ",(0,i.jsx)(n.strong,{children:"Ignored"})," triage state."]})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"nosemgrep"})," in Python:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"\nbad_func1()  # nosemgrep\n\n# nosemgrep\nbad_func2()\n\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"nosemgrep"})," in JavaScript:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"\n// nosemgrep\nbad_func1()\n\nbad_func2(); // nosemgrep\n\nbad_func3(   // nosemgrep\n    arg\n);\n\n"})}),"\n",(0,i.jsxs)(n.p,{children:["To ignore blocks of code for a ",(0,i.jsx)(n.strong,{children:"particular rule"}),", enter its ",(0,i.jsx)(n.code,{children:"rule-id"})," as follows: ",(0,i.jsx)(n.code,{children:"nosemgrep: RULE_ID"}),". To ignore ",(0,i.jsx)(n.strong,{children:"multiple rules"}),", use a comma-delimited list. ",(0,i.jsx)(n.code,{children:"rule-ids"})," must be referenced with their namespace."]}),"\n",(0,i.jsx)(n.p,{children:"Python examples:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"\nbad_func1()  # nosemgrep: rule-id-1\n\n# nosemgrep: rule-id-1, rule-id-2\nbad_func2()\n\n"})}),"\n",(0,i.jsxs)(n.p,{children:["JavaScript examples wherein rules are stored in a ",(0,i.jsx)(n.code,{children:"configs"})," subdirectory:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"\n// nosemgrep: configs.rule-id-3\nbad_func1()\n\nbad_func2(); // nosemgrep: configs.rule-id-3\n\nbad_func3(   // nosemgrep: configs.rule-id-3, configs.rule-id-4\n    arg\n);\n\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Previous annotations for ignoring code inline, such as ",(0,i.jsx)(n.code,{children:"nosem"}),", are deprecated."]})}),"\n",(0,i.jsx)(n.h2,{id:"disable-rules-on-semgrep-appsec-platform",children:"Disable rules on Semgrep AppSec Platform"}),"\n",(0,i.jsxs)(n.p,{children:["Semgrep AppSec Platform users can disable rules and rulesets through the Policies page. See ",(0,i.jsx)(n.a,{href:"/semgrep-code/policies#disable-rules",children:"Disable rules"})," and ",(0,i.jsx)(n.a,{href:"/semgrep-code/triage-remediation/#disable-a-ruleset-or-a-rule",children:"Disable rulesets"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"ignore-findings",children:"Ignore findings"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Ignoring"})," can also be a triage action. In this case, the code is scanned rather than excluded, and if a pattern match occurs, a finding record is generated that you can then triage as ",(0,i.jsx)(n.strong,{children:"Ignored"}),". See ",(0,i.jsx)(n.a,{href:"/semgrep-code/triage-remediation/#ignore-findings",children:"Triage and remediate Semgrep Code findings in Semgrep AppSec Platform"})," to learn how to:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/semgrep-code/triage-remediation#manage-findings",children:"Manage findings"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/semgrep-code/triage-remediation#triage-findings-through-pr-and-mr-comments",children:"Ignore findings through PR and MR comments"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"tips-to-prevent-unexpected-ignore-behavior",children:"Tips to prevent unexpected ignore behavior"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"This section focuses on ignoring as excluding or skipping files, not as a triage action."})}),"\n",(0,i.jsx)(n.p,{children:"Because Semgrep ignore logic is configured at the file, repository, and platform level, you may sometimes encounter unexpected behavior."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["It is recommended to only create an custom, user-defined ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file if you are ",(0,i.jsx)(n.strong,{children:"overriding"})," the Semgrep defaults, if possible. This means defining all other items to ignore through the global or project path ignores.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["This method works well if your organization primarily scans using the ",(0,i.jsx)(n.code,{children:"semgrep ci"})," command."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Be aware that creating a user-defined ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file enables developers to edit it."]}),"\n",(0,i.jsxs)(n.li,{children:["Include the ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file in Git tracking to keep a log of changes and ensure it's applied consistently."]}),"\n",(0,i.jsxs)(n.li,{children:["To ",(0,i.jsx)(n.strong,{children:"include"})," a file or folder for scanning, ensure it's not in any of the following places:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Global path ignores"}),"\n",(0,i.jsx)(n.li,{children:"Project path ignores"}),"\n",(0,i.jsxs)(n.li,{children:["User-defined ",(0,i.jsx)(n.code,{children:".semgrepignore"})]}),"\n",(0,i.jsxs)(n.li,{children:["Semgrep defaults (implicit) ",(0,i.jsx)(n.code,{children:".semgrepignore"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"sast_excluded_paths",children:(0,i.jsx)(n.code,{children:"SAST_EXCLUDED_PATHS"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"For GitLab users"}),": if you use ",(0,i.jsxs)(n.a,{href:"https://docs.gitlab.com/ee/user/application_security/sast/#vulnerability-filters",children:["the ",(0,i.jsx)(n.code,{children:"SAST_EXCLUDED_PATHS"})," variable"]})," to specify paths excluded from analysis, you may find that Semgrep doesn't honor these items. This is due to default Semgrep behavior. To explicitly exclude files, you must do one of the following steps:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Create a ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file that lists the files you want excluded."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.a,{href:"#define-ignored-files-and-folders-in-semgrep-appsec-platform",children:["Update the ",(0,i.jsx)(n.strong,{children:"Path Ignores"})," box"]})," in Semgrep AppSec Platform."]}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);