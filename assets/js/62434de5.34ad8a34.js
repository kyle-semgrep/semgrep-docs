"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[89918],{26476:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"kb/semgrep-code/semgrep-scan-troubleshooting","title":"A Semgrep scan is having a problem - what next?","description":"Troubleshoot common issues with Semgrep scans.","source":"@site/docs/kb/semgrep-code/semgrep-scan-troubleshooting.md","sourceDirName":"kb/semgrep-code","slug":"/kb/semgrep-code/semgrep-scan-troubleshooting","permalink":"/semgrep-docs/kb/semgrep-code/semgrep-scan-troubleshooting","draft":false,"unlisted":false,"editUrl":"https://github.com/kyle-semgrep/semgrep-docs/edit/main/docs/kb/semgrep-code/semgrep-scan-troubleshooting.md","tags":[{"inline":true,"label":"Semgrep Supply Chain","permalink":"/semgrep-docs/tags/semgrep-supply-chain"},{"inline":true,"label":"Semgrep Code","permalink":"/semgrep-docs/tags/semgrep-code"}],"version":"current","lastUpdatedAt":1752504841000,"frontMatter":{"tags":["Semgrep Supply Chain","Semgrep Code"],"description":"Troubleshoot common issues with Semgrep scans."},"sidebar":"kbSidebar","previous":{"title":"Troubleshoot monorepo scan failures","permalink":"/semgrep-docs/kb/semgrep-code/scan-engine-kill"},"next":{"title":"Why am I getting findings in files that should be ignored?","permalink":"/semgrep-docs/kb/semgrep-code/semgrepignore-ignored"}}');var r=n(74848),o=n(28453);const t={tags:["Semgrep Supply Chain","Semgrep Code"],description:"Troubleshoot common issues with Semgrep scans."},l="A Semgrep scan is having a problem - what next?",a={},c=[{value:"Memory usage issues (OOM errors)",id:"memory-usage-issues-oom-errors",level:2},{value:"Slow scans",id:"slow-scans",level:2},{value:"Adjusting timeouts",id:"adjusting-timeouts",level:3},{value:"401 error when scanning with Semgrep Registry rules",id:"401-error-when-scanning-with-semgrep-registry-rules",level:2},{value:"Scan failures with analysis errors",id:"scan-failures-with-analysis-errors",level:2},{value:"Reporting crashes or analysis errors",id:"reporting-crashes-or-analysis-errors",level:2}];function h(e){const s={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"a-semgrep-scan-is-having-a-problem---what-next",children:"A Semgrep scan is having a problem - what next?"})}),"\n",(0,r.jsx)(s.p,{children:"If a Semgrep scan is failing or running slowly, try the following steps to investigate:"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"/docs/update",children:"Update Semgrep"})," to the latest version, if you are not currently running the latest version. Some errors result from an older version of Semgrep being used with newer rules."]}),"\n",(0,r.jsxs)(s.li,{children:["Re-run the scan with either the ",(0,r.jsx)(s.code,{children:"-v"}),"/",(0,r.jsx)(s.code,{children:"--verbose"})," or ",(0,r.jsx)(s.code,{children:"--debug"})," (extremely verbose) flags. These options provide more information about what is failing."]}),"\n"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["When using verbose logs, also set ",(0,r.jsx)(s.code,{children:"--max-log-list-entries"})," to ",(0,r.jsx)(s.code,{children:"0"})," or any negative value to see the full output; otherwise lists of rules and files are suppressed if there are more than 100 entries in the list."]}),"\n"]}),"\n",(0,r.jsxs)(s.ol,{start:"3",children:["\n",(0,r.jsxs)(s.li,{children:["If you are running cross-file (interfile) analysis in the scan, remove any options starting with ",(0,r.jsx)(s.code,{children:"--pro"}),", or run Semgrep with ",(0,r.jsx)(s.code,{children:"--oss-only"}),". This allows isolation of any issues related to cross-file analysis, and often speeds up a scan or reduces memory usage."]}),"\n"]}),"\n",(0,r.jsx)(s.admonition,{type:"info",children:(0,r.jsxs)(s.p,{children:["Semgrep verbose or debug logs can be quite lengthy. To prevent flooding your terminal and preserve the logs for analysis, you can redirect all output to a file with ",(0,r.jsx)(s.code,{children:"semgrep [OPTIONS] [TARGETS]... &> semgrep.log"}),". See also ",(0,r.jsx)(s.a,{href:"/docs/kb/semgrep-code/collect-cli-logs",children:"How to collect logs when running Semgrep in CLI"}),"."]})}),"\n",(0,r.jsx)(s.h2,{id:"memory-usage-issues-oom-errors",children:"Memory usage issues (OOM errors)"}),"\n",(0,r.jsx)(s.p,{children:"Memory usage is a common issue with scans, especially in memory-constrained environments such as continuous integration (CI) providers. Semgrep may exit with code -11 (or -9), which are the POSIX signals raised to cause the crash."}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Try increasing the memory available if you are working in a container or managed instance where you can manage the amount of memory."}),"\n",(0,r.jsxs)(s.li,{children:["Use the ",(0,r.jsx)(s.code,{children:"--max-memory LIMIT"})," option for your Semgrep run. This option stops a rule/file scan if it reaches the set limit, and moves to the next rule / file.","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"If you are running an interfile scan, this option also falls back to the OSS engine if the interfile pre-processing stage requires more than this amount of memory."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["Run Semgrep in single-threaded mode with ",(0,r.jsx)(s.code,{children:"--jobs 1"}),". This reduces the amount of memory used compared to running multiple jobs."]}),"\n",(0,r.jsxs)(s.li,{children:["Try increasing your stack limit, if a limit is set for the context where you invoke Semgrep (",(0,r.jsx)(s.code,{children:"ulimit -s [limit]"}),")."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"slow-scans",children:"Slow scans"}),"\n",(0,r.jsxs)(s.p,{children:["The first step to improving Semgrep's speed is limiting its run to only the files you care about. Most commonly, it's limited using a ",(0,r.jsx)(s.code,{children:".semgrepignore"})," file. See ",(0,r.jsx)(s.a,{href:"/ignoring-files-folders-code",children:"Ignoring files, folders, or parts of code"}),"."]}),"\n",(0,r.jsx)(s.p,{children:"After addressing files to ignore:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["If you suspect the presence of a large file slowing Semgrep's analysis, decrease the maximum size of files scanned with ",(0,r.jsx)(s.code,{children:"--max-target-bytes BYTES"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["Run ",(0,r.jsx)(s.code,{children:"semgrep scan --time"})," locally. This outputs a list of the rules and files that took the longest.","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Identify the slowest files from the list. You may find that you can add some of those files to your ignore list as well."}),"\n",(0,r.jsx)(s.li,{children:"Identify the slowest rules from the list. You may find that some of them don't apply to your codebase and can be skipped."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"adjusting-timeouts",children:"Adjusting timeouts"}),"\n",(0,r.jsx)(s.p,{children:"Semgrep has several timeout settings that affect scan duration and can be adjusted to optimize scan behavior:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"--timeout"}),": Similar to ",(0,r.jsx)(s.code,{children:"--max-memory"}),", ",(0,r.jsx)(s.code,{children:"--timeout"})," affects the behavior of the scan when running a single rule on a single file. It defaults to 5 seconds. Typical values range from 3 seconds (favors faster scans, but more timeouts) to 30 seconds (slower scans, fewer timeouts)."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"--timeout-threshold"}),": The number of attempts made to run a single rule on a single file, if it times out due to the ",(0,r.jsx)(s.code,{children:"--timeout"})," limit. It defaults to 3. Decreasing the value may speed up scans but cause more timeouts."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"--interfile-timeout"}),": If you are running an interfile scan, this is the maximum amount of time in seconds to spend on interfile analysis before falling back to the OSS Engine. Defaults to 3 hours (10800 seconds) for scans using ",(0,r.jsx)(s.code,{children:"semgrep ci"}),". Otherwise, the default is no maximum time (continue with cross-file analysis until the scan completes)."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"401-error-when-scanning-with-semgrep-registry-rules",children:"401 error when scanning with Semgrep Registry rules"}),"\n",(0,r.jsxs)(s.p,{children:["If you receive a 401 when scanning using registry rules (for example, with ",(0,r.jsx)(s.code,{children:"--config auto"}),"), try the following:"]}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["Run ",(0,r.jsx)(s.code,{children:"semgrep logout"}),"."]}),"\n",(0,r.jsx)(s.li,{children:"Attempt the scan again."}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["If this is successful, your stored local token was invalid. Use ",(0,r.jsx)(s.code,{children:"semgrep login"})," to log in again and receive a fresh token."]}),"\n",(0,r.jsx)(s.h2,{id:"scan-failures-with-analysis-errors",children:"Scan failures with analysis errors"}),"\n",(0,r.jsx)(s.p,{children:"Analysis or parsing errors usually only affect a particular rule, file, or language. If your scan encounters an analysis issue, using verbose logging can provide you with helpful error details, such as:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"metavariable-pattern failed because we lack range info for $X, please file a bug report\n"})}),"\n",(0,r.jsx)(s.p,{children:"If the error you receive is not that specific, try one of these options:"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["Use ",(0,r.jsx)(s.code,{children:"--exclude-rule"})," to exclude a rule from the scan. This allows isolating the problem to the particular rule."]}),"\n"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["If you are running Semgrep in CI with Semgrep AppSec Platform, and don't need to run the rule, you can also ",(0,r.jsx)(s.a,{href:"/docs/semgrep-code/policies/#disable-rules",children:"disable the rule"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.ol,{start:"2",children:["\n",(0,r.jsxs)(s.li,{children:["Use ",(0,r.jsx)(s.code,{children:"--exclude"})," to exclude a file or files from the scan. You can use wildcards in file exclusions to exclude files matching particular patterns."]}),"\n",(0,r.jsxs)(s.li,{children:["Use ",(0,r.jsx)(s.code,{children:"--include"})," with a pattern specifying a path or an extension for a particular language, to limit the scan to that path, or to files in that language."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"reporting-crashes-or-analysis-errors",children:"Reporting crashes or analysis errors"}),"\n",(0,r.jsx)(s.p,{children:"Once you have isolated the issue:"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsx)(s.li,{children:"Identify the rule, file, and lines (if available) where Semgrep encountered the error."}),"\n",(0,r.jsx)(s.li,{children:"Determine whether you can share a minimal example of the code or rule that is causing the issue."}),"\n"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["If the issue occurs with cross-file analysis, or the code is internal or sensitive and cannot be sufficiently redacted, ",(0,r.jsx)(s.a,{href:"/support",children:"reach out for help"}),", and include what you've determined so far."]}),"\n",(0,r.jsxs)(s.li,{children:["Otherwise, share the issue details and related code with Semgrep via ",(0,r.jsx)(s.a,{href:"https://github.com/semgrep/semgrep/issues",children:"https://github.com/semgrep/semgrep/issues"}),"."]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"If you are encountering memory usage issues, please include in your report:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"The total size of the files"}),"\n",(0,r.jsx)(s.li,{children:"The number of files being scanned"}),"\n",(0,r.jsxs)(s.li,{children:["The maximum memory used by Semgrep (an estimate from ",(0,r.jsx)(s.code,{children:"top"})," is fine)"]}),"\n",(0,r.jsx)(s.li,{children:"The system specifications"}),"\n"]})]})}function d(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>l});var i=n(96540);const r={},o=i.createContext(r);function t(e){const s=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(o.Provider,{value:s},e.children)}}}]);