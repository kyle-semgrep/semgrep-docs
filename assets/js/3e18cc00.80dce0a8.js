"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[72238],{14345:(e,n,r)=>{r.d(n,{A:()=>o});r(96540);var t=r(34164);const i={tabItem:"tabItem_Ymn6"};var s=r(74848);function o(e){let{children:n,hidden:r,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.A)(i.tabItem,o),hidden:r,children:n})}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var t=r(96540);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}},62464:(e,n,r)=>{r.d(n,{A:()=>S});var t=r(96540),i=r(34164),s=r(80052),o=r(56347),l=r(35793),a=r(99025),c=r(4430),d=r(44148);function h(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:r,attributes:t,default:i}}=e;return{value:n,label:r,attributes:t,default:i}}))}(r);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function u(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:r}=e;const i=(0,o.W6)(),s=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,a.aZ)(s),(0,t.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(i.location.search);n.set(s,e),i.replace({...i.location,search:n.toString()})}),[s,i])]}function f(e){const{defaultValue:n,queryString:r=!1,groupId:i}=e,s=p(e),[o,a]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!u({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=r.find((e=>e.default))??r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s}))),[c,h]=g({queryString:r,groupId:i}),[f,m]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,s]=(0,d.Dv)(r);return[i,(0,t.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:i}),x=(()=>{const e=c??f;return u({value:e,tabValues:s})?e:null})();(0,l.A)((()=>{x&&a(x)}),[x]);return{selectedValue:o,selectValue:(0,t.useCallback)((e=>{if(!u({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);a(e),h(e),m(e)}),[h,m,s]),tabValues:s}}var m=r(75251);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=r(74848);function v(e){let{className:n,block:r,selectedValue:t,selectValue:o,tabValues:l}=e;const a=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),d=e=>{const n=e.currentTarget,r=a.indexOf(n),i=l[r].value;i!==t&&(c(n),o(i))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=a.indexOf(e.currentTarget)+1;n=a[r]??a[0];break}case"ArrowLeft":{const r=a.indexOf(e.currentTarget)-1;n=a[r]??a[a.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":r},n),children:l.map((e=>{let{value:n,label:r,attributes:s}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>{a.push(e)},onKeyDown:h,onClick:d,...s,className:(0,i.A)("tabs__item",x.tabItem,s?.className,{"tabs__item--active":t===n}),children:r??n},n)}))})}function b(e){let{lazy:n,children:r,selectedValue:s}=e;const o=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===s));return e?(0,t.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=f(e);return(0,j.jsxs)("div",{className:(0,i.A)("tabs-container",x.tabList),children:[(0,j.jsx)(v,{...n,...e}),(0,j.jsx)(b,{...n,...e})]})}function S(e){const n=(0,m.A)();return(0,j.jsx)(y,{...e,children:h(e.children)},String(n))}},80131:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"semgrepignore-v2-reference","title":"Semgrepignore v2","description":"Reference of the semgrepignore file fitering mechanism for Semgrep\\n","source":"@site/docs/semgrepignore-v2-reference.md","sourceDirName":".","slug":"/semgrepignore-v2-reference","permalink":"/semgrep-docs/semgrepignore-v2-reference","draft":false,"unlisted":false,"editUrl":"https://github.com/kyle-semgrep/semgrep-docs/edit/main/docs/docs/semgrepignore-v2-reference.md","tags":[],"version":"current","lastUpdatedAt":1752259747000,"frontMatter":{"slug":"semgrepignore-v2-reference","append_help_link":true,"description":"Reference of the semgrepignore file fitering mechanism for Semgrep\\n","hide_title":true,"title":"Semgrepignore v2"},"sidebar":"scanSidebar","previous":{"title":"Experimental features","permalink":"/semgrep-docs/category/experimental-features"},"next":{"title":"CLI reference","permalink":"/semgrep-docs/cli-reference"}}');var i=r(74848),s=r(28453);r(62464),r(14345);const o={slug:"semgrepignore-v2-reference",append_help_link:!0,description:"Reference of the semgrepignore file fitering mechanism for Semgrep\n",hide_title:!0,title:"Semgrepignore v2"},l="Semgrepignore v2 reference",a={},c=[{value:"The target filtering process",id:"the-target-filtering-process",level:2},{value:"Sources of Semgrepignore patterns",id:"sources-of-semgrepignore-patterns",level:2},{value:"Semgrepignore pattern syntax",id:"semgrepignore-pattern-syntax",level:2},{value:"Legacy Semgrepignore v1",id:"legacy-semgrepignore-v1",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"semgrepignore-v2-reference",children:"Semgrepignore v2 reference"})}),"\n",(0,i.jsxs)(n.p,{children:["This document covers the Semgrepignore ",(0,i.jsx)(n.strong,{children:"v2"})," target filtering system that is\ncurrently available with the ",(0,i.jsx)(n.code,{children:"--experimental"})," option of the ",(0,i.jsx)(n.code,{children:"semgrep"}),"\ncommand. It differs from the legacy ",(0,i.jsx)(n.strong,{children:"v1"}),' implementation.\nreferred to as "v1".']}),"\n",(0,i.jsx)(n.h2,{id:"the-target-filtering-process",children:"The target filtering process"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"semgrep scan"})," command takes one or more scan roots as\narguments. The default scan root is the current folder, ",(0,i.jsx)(n.code,{children:"."}),".\nScan roots are folders, individual files, or named pipes that should be\nexpanded into a list of regular files to be analyzed. Symbolic links are\nallowed as scan roots."]}),"\n",(0,i.jsx)(n.p,{children:"Expanding a folder consists of listing its contents recursively with\nthe following exceptions:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Symbolic links other than the original scan roots are ignored."}),"\n",(0,i.jsx)(n.li,{children:"In Git projects, Git submodules are ignored."}),"\n",(0,i.jsx)(n.li,{children:"Paths excluded via Semgrepignore patterns are ignored. Semgrepignore\npatterns can be of different sources which are detailed in the\nupcoming section."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The list of files obtained by expanding the scan roots are called\n",(0,i.jsx)(n.strong,{children:"target files"}),". To obtain target files, Semgrep follows a\nnumber of fixed rules and some configurable filters."]}),"\n",(0,i.jsxs)(n.p,{children:["For each scan root, Semgrep infers a ",(0,i.jsx)(n.strong,{children:"project root"})," (v2 only). The\nproject root determines the location of applicable ",(0,i.jsx)(n.code,{children:".semgrepignore"}),"\nfiles as well as ",(0,i.jsx)(n.code,{children:".gitignore"})," files in Git projects. In v1 where is no\nnotion of a project root, the ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file is unique and\nlooked up in the current folder."]}),"\n",(0,i.jsxs)(n.p,{children:["Semgrep determines the project root for each scan root by first\nobtaining the real path (physical path) to the scan root. Then,\nSemgrep searches up the file hierarchy for a ",(0,i.jsx)(n.code,{children:".git"})," folder or\nsimilar used by one of the popular file version control systems\n(Git, Mercurial, etc.) indicating a project root.\nIf no project root is found this way, it\ndefaults to the scan root itself if it is a folder or to its containing\nfolder if it is a regular file."]}),"\n",(0,i.jsxs)(n.admonition,{type:"caution",children:[(0,i.jsxs)(n.p,{children:["As an experimental debugging aid, Semgrep provides the ",(0,i.jsx)(n.code,{children:"--x-ls"})," option\nto list the target files. ",(0,i.jsx)(n.code,{children:"--x-ls-long"})," additionally prints excluded\nfiles and a brief justification. Beware that these two options are\nlikely to be renamed or change their behavior in the\nfuture. Meanwhile, its typical usage is:"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"semgrep --x-ls\n"})}),(0,i.jsx)(n.p,{children:"or"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"semgrep --x-ls --experimental\n"})})]}),"\n",(0,i.jsx)(n.h2,{id:"sources-of-semgrepignore-patterns",children:"Sources of Semgrepignore patterns"}),"\n",(0,i.jsx)(n.p,{children:"A Semgrepignore pattern is a glob pattern that is matched by Semgrep\nagainst file paths to determine whether these paths should be allowed or\ndisallowed as target files."}),"\n",(0,i.jsx)(n.p,{children:"Semgrep looks up Semgrepignore patterns in the following places:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["command-line ",(0,i.jsx)(n.code,{children:"--exclude"})," and ",(0,i.jsx)(n.code,{children:"--include"})," filters;"]}),"\n",(0,i.jsxs)(n.li,{children:["the ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file in the current folder (v1 only);"]}),"\n",(0,i.jsxs)(n.li,{children:["all the ",(0,i.jsx)(n.code,{children:".semgrepignore"})," files in the project (v2 only);"]}),"\n",(0,i.jsxs)(n.li,{children:["all the ",(0,i.jsx)(n.code,{children:".gitignore"})," files in the project in Git projects (v2 only);"]}),"\n",(0,i.jsx)(n.li,{children:"default Semgrepignore patterns."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"These sources of filters are grouped into precedence levels.\nWithin a precedence level, a path can be deselected and reselected\nany number of times. After applying all the filters within a\nprecedence level, only the selected paths make it to the next\nlevel. There are two precedence levels:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["command-line ",(0,i.jsx)(n.code,{children:"--exclude"})," and ",(0,i.jsx)(n.code,{children:"--include"})," filters;"]}),"\n",(0,i.jsxs)(n.li,{children:["default Semgrepignore patterns, ",(0,i.jsx)(n.code,{children:".gitignore"})," files,\n",(0,i.jsx)(n.code,{children:".semgrepignore"})," files."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["For example, consider this ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"*.c\n!hello.c\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In the absence of ",(0,i.jsx)(n.code,{children:"--exclude"})," or ",(0,i.jsx)(n.code,{children:"--include"})," filters,\n",(0,i.jsx)(n.code,{children:"hello.c"})," will be first deselected by ",(0,i.jsx)(n.code,{children:"*.c"})," and then\nreselected by the negated pattern ",(0,i.jsx)(n.code,{children:"!hello.c"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["However, if we move the ",(0,i.jsx)(n.code,{children:"*.c"})," exclusion pattern to the command line by\ninvoking ",(0,i.jsx)(n.code,{children:"semgrep --exclude *.c"}),",\nthe file ",(0,i.jsx)(n.code,{children:"hello.c"})," is deselected and ignored even if\nthe ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file contains ",(0,i.jsx)(n.code,{children:"!hello.c"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["In a Git project under Semgrepignore v2, ",(0,i.jsx)(n.code,{children:".gitignore"})," and\n",(0,i.jsx)(n.code,{children:".semgrepignore"})," files are consulted in the same order as in the\nGitignore specification. In a folder containing both a ",(0,i.jsx)(n.code,{children:".gitignore"}),"\nand a ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file, the ",(0,i.jsx)(n.code,{children:".gitignore"})," file is read before the\n",(0,i.jsx)(n.code,{children:".semgrepignore"})," file."]}),"\n",(0,i.jsxs)(n.p,{children:["Default Semgrepignore patterns apply in projects that lack a main\n",(0,i.jsx)(n.code,{children:".semgrepignore"})," file. In v1, the main ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file is\nexpected in the current folder. In v2, it is expected at the project\nroot. These default patterns are:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"# Common large paths\nnode_modules/\nbuild/\ndist/\nvendor/\n.env/\n.venv/\n.tox/\n*.min.js\n.npm/\n.yarn/\n\n# Common test paths\ntest/\ntests/\ntestsuite/\n*_test.go\n\n# Semgrep rules folder\n.semgrep\n\n# Semgrep-action log folder\n.semgrep_logs/\n"})}),"\n",(0,i.jsx)(n.h2,{id:"semgrepignore-pattern-syntax",children:"Semgrepignore pattern syntax"}),"\n",(0,i.jsxs)(n.p,{children:["In Semgrepignore v2, the pattern syntax conforms to the\n",(0,i.jsx)(n.a,{href:"https://git-scm.com/docs/gitignore#_pattern_format",children:"Gitignore pattern\nsyntax"}),".\nThey are glob patterns which support ",(0,i.jsx)(n.code,{children:"*"})," and ",(0,i.jsx)(n.code,{children:"**"})," with their usual\nmeanings. For example, pattern ",(0,i.jsx)(n.code,{children:"**/tmp/*.js"})," matches paths ",(0,i.jsx)(n.code,{children:"tmp/foo.js"})," and\n",(0,i.jsx)(n.code,{children:"src/tmp/bar.js"}),".\nNote that the Gitignore specification contains subtleties associated\nwith determining whether a pattern is anchored (relative to the folder\ncontaining the pattern) or floating (relative to the folder containing\nthe pattern or any of its subfolders). For\nexample, ",(0,i.jsx)(n.code,{children:"/a"})," and ",(0,i.jsx)(n.code,{children:"a/b"})," are anchored patterns but not ",(0,i.jsx)(n.code,{children:"a/"}),". Please\nconsult the Gitignore documentation for details."]}),"\n",(0,i.jsxs)(n.p,{children:["As a deviation from the Gitignore syntax, Semgrepignore syntax supports\n",(0,i.jsx)(n.code,{children:":include"})," directives. ",(0,i.jsx)(n.code,{children:":include"})," followed by an unquoted file path\nrelative to the path of folder of the source ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file\n(the current folder in v1) inserts patterns from that file.\nA common use case is to insert the line ",(0,i.jsx)(n.code,{children:":include .gitignore"})," at the\nbeginning of a ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file so as to avoid duplicating the\nGitignore patterns. Included files may not contain include\ndirectives."]}),"\n",(0,i.jsx)(n.h2,{id:"legacy-semgrepignore-v1",children:"Legacy Semgrepignore v1"}),"\n",(0,i.jsx)(n.p,{children:"In Semgrepignore v1, the following exceptions to the v2\nspecification apply:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["unsupported: pattern negation with ",(0,i.jsx)(n.code,{children:"!"})]}),"\n",(0,i.jsxs)(n.li,{children:["unsupported: character ranges such as ",(0,i.jsx)(n.code,{children:"[a-z]"})]}),"\n",(0,i.jsxs)(n.li,{children:["only one ",(0,i.jsx)(n.code,{children:".semgrepignore"})," file is supported and it must be in the\ncurrent folder"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);