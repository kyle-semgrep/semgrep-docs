"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[34144],{7972:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var i=s(39961),r=s(74848),t=s(28453);const o={slug:"may-2023",append_help_link:!0,hide_title:!0,description:"Release notes include the changes, fixes, and additions in specific versions of Semgrep.",toc_max_heading_level:3,tags:["Release notes"],hide_table_of_contents:!1,date:"2023-05-30T10:00",title:"May 2023"},a="May 2023",l={authorsImageUrls:[]},d=[{value:"Semgrep tiers",id:"semgrep-tiers",level:2},{value:"Semgrep Cloud Platform",id:"semgrep-cloud-platform",level:2},{value:"Semgrep OSS Engine",id:"semgrep-oss-engine",level:2},{value:"Semgrep Supply Chain",id:"semgrep-supply-chain",level:2},{value:"Semgrep Visual Studio Code",id:"semgrep-visual-studio-code",level:2},{value:"Semgrep Code",id:"semgrep-code",level:2},{value:"Pro rules",id:"pro-rules",level:2},{value:"Semgrep Pro Engine",id:"semgrep-pro-engine",level:2},{value:"Documentation updates",id:"documentation-updates",level:2},{value:"Additions",id:"additions",level:3},{value:"Changes",id:"changes",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"The following updates were made to Semgrep in May 2023."}),"\n",(0,r.jsx)(n.admonition,{title:"Release notes from May until June 9",type:"info",children:(0,r.jsx)(n.p,{children:"These release notes include updates made by Semgrep, Inc. from May 2023 until June 9. Due to the importance of the launch week at the beginning of June 2023, we decided to include the most important updates from the launch also on the release notes page that you are now reading."})}),"\n",(0,r.jsx)(n.h2,{id:"semgrep-tiers",children:"Semgrep tiers"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Semgrep\u2019s Community Tier has been sunsetted. Existing and new users now have access to ",(0,r.jsx)(n.strong,{children:"all"})," Semgrep Team tier features for free, subject to ",(0,r.jsx)(n.a,{href:"/usage-and-billing",children:"usage limits"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"semgrep-cloud-platform",children:"Semgrep Cloud Platform"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Semgrep Playground ",(0,r.jsx)(n.strong,{children:"Turbo mode"})," is now in beta. This new mode enables users to create rules using the Semgrep OSS engine which will automatically run upon detecting any change in the rule or sample code. There is ",(0,r.jsx)(n.strong,{children:"no need to click a Run button"})," in Turbo mode."]}),"\n",(0,r.jsxs)(n.li,{children:["Semgrep Zero-config Scanning for GitHub.com is now in beta. Onboard or add many repositories to the Semgrep Cloud Platform without having to commit a CI file for every repository! Reach out to ",(0,r.jsx)(n.a,{href:"mailto:sales@semgrep.com",children:"sales@semgrep.com"})," to try it out."]}),"\n",(0,r.jsx)(n.li,{children:"Role-based access control (RBAC) is now available to all Team tier users, subject to usage limits."}),"\n",(0,r.jsx)(n.li,{children:"Single Sign-On (SSO) is now available to all Team tier users, subject to usage limits."}),"\n",(0,r.jsxs)(n.li,{children:["Improved the UI on the ",(0,r.jsx)(n.strong,{children:"Settings"})," page."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"semgrep-oss-engine",children:"Semgrep OSS Engine"}),"\n",(0,r.jsx)(n.p,{children:"This section of release notes includes upgrades of Semgrep OSS Engine for versions ranging between 1.21.0 and 1.26.0."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Kotlin language support update: Kotlin now upgraded from beta support to full GA support! Additionally, as a part of this update for Kotlin:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Added named ellipses, as ",(0,r.jsx)(n.code,{children:"$...X"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Added literal metavariables, from patterns like ",(0,r.jsx)(n.code,{children:'"$FOO"'}),". You can still match strings that only contain a single interpolated ident by using the brace notation, e.g. ",(0,r.jsx)(n.code,{children:'"${FOO}"'}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Interpolated identifiers in strings, such as ",(0,r.jsx)(n.code,{children:"$foo"}),", are now properly able to match explicitly interpolated expressions, such as ",(0,r.jsx)(n.code,{children:"${...}"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Added experimental support for the programming language Cairo 1.0. Thanks to ",(0,r.jsx)(n.a,{href:"https://github.com/Frostweeds",children:"Frostweeds"})," (Romain Jufer) for his contribution!"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Added experimental support for the programming language Julia."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Java support improvement: Semgrep OSS Engine now includes heuristics based on the Java standard library and common naming patterns. As a result, Semgrep OSS Engine can now determine more types of Java expressions, for use with ",(0,r.jsx)(n.a,{href:"/writing-rules/pattern-syntax#typed-metavariables",children:"Typed Metavariables"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["We are introducing a new experimental generic matching engine ",(0,r.jsx)(n.a,{href:"/writing-rules/experiments/aliengrep",children:"Aliengrep"})," as an alternative to the default generic mode engine (Spacegrep). Generic mode is used for languages that are not supported by Semgrep OSS Engine. Try out ",(0,r.jsx)(n.a,{href:"/writing-rules/experiments/aliengrep",children:"Aliengrep"})," and let us know what you think about it!"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Taint analysis updates:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["In Java, Semgrep OSS Engine can now track taint through more get and set methods (getters and setters). Before this update, taint analysis of Semgrep OSS Engine could already relate setters to getters (for example: ",(0,r.jsx)(n.code,{children:"o.setX(taint); o.getX()"}),". With this update, it can relate setters and getters to properties (for example ",(0,r.jsx)(n.code,{children:"o.setX(taint); o.x"}),")."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Added experimental options ",(0,r.jsx)(n.code,{children:"taint_assume_safe_booleans"})," and ",(0,r.jsx)(n.code,{children:"taint_assume_safe_numbers"})," to avoid propagating taint that comes from expressions with boolean or number (integer, float) types."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Semgrep OSS Engine can recognize that an object constructed by ",(0,r.jsx)(n.code,{children:'new Obj("tainted", "safe")'})," has its ",(0,r.jsx)(n.code,{children:"x"})," attribute tainted, whereas its ",(0,r.jsx)(n.code,{children:"y"})," attribute is safe."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Extract mode: users can now choose to include or exclude rules to run on, similar to ",(0,r.jsx)(n.code,{children:"paths:"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, to only run the rules on ",(0,r.jsx)(n.code,{children:"example-1"})," and ",(0,r.jsx)(n.code,{children:"example-2"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"rules:\n  - id: test-rule\n    mode: extract\n    rules:\n        include:\n        - example-1\n        - example-2\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["To run the rule on everything except ",(0,r.jsx)(n.code,{children:"example-1"})," and ",(0,r.jsx)(n.code,{children:"example-2"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"rules:\n  - id: test-rule\n    mode: extract\n    rules:\n        exclude:\n        - example-1\n        - example-2\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["(GitHub issue ",(0,r.jsx)(n.a,{href:"https://github.com/semgrep/semgrep/issues/7858",children:"#7858"}),")"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Semgrep OSS Engine Language Server updates. The following two updates are also related to ",(0,r.jsx)(n.a,{href:"#semgrep-visual-studio-code",children:"Semgrep Visual Studio Code extension"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Support for search and replace with rule patterns through semgrep/search."}),"\n",(0,r.jsx)(n.li,{children:"Language Server now notifies you about errors and includes a reason for the crash."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Relaxed restrictions on symbolic propagation so that symbolic values survive branching statements. Now (with symbolic-propagation enabled) ",(0,r.jsx)(n.code,{children:"foo(bar())"}),"  matches the following code:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def test():\n  x = bar()\n  if cond:\n    exit()\n  foo(x)\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The Semgrep OSS Engine section of release notes mentions only selected additions and changes, for specific bug fixes, see ",(0,r.jsx)(n.a,{href:"https://github.com/semgrep/semgrep/blob/develop/CHANGELOG.md",children:"Semgrep OSS Engine GitHub"})," changelog and search for Fixed sections under each version."]}),"\n",(0,r.jsx)(n.h2,{id:"semgrep-supply-chain",children:"Semgrep Supply Chain"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Semgrep Supply Chain\u2019s ",(0,r.jsx)(n.strong,{children:"License compliance"})," feature is now in beta. This feature enables developers to view the licenses of dependencies in all repositories that are scanned by Semgrep Supply Chain. Read the documentation: ",(0,r.jsx)(n.a,{href:"/semgrep-supply-chain/license-compliance",children:"License compliance"}),".","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["This feature also enables security engineers to ",(0,r.jsx)(n.strong,{children:"Block,"})," leave a ",(0,r.jsx)(n.strong,{children:"Comment,"})," or ",(0,r.jsx)(n.strong,{children:"Allow"})," dependencies when a PR introducing the dependency is first opened, based on the license of the dependency."]}),"\n",(0,r.jsxs)(n.li,{children:["License compliance supports many popular Copyleft, Weak-copyleft, and Permissive licenses. Other licenses can also be detected.\n",(0,r.jsx)(n.img,{alt:"Screenshot of Semgrep Supply Chain Dependencies tab with licenses listed",src:s(8933).A+"",width:"1920",height:"1066"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Semgrep Supply Chain is now available for free to Team tier users, subject to usage limits."}),"\n",(0,r.jsxs)(n.li,{children:["Improvements to Semgrep Supply Chain ",(0,r.jsx)(n.strong,{children:"Dependencies"})," page."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"semgrep-visual-studio-code",children:"Semgrep Visual Studio Code"}),"\n",(0,r.jsxs)(n.p,{children:["Semgrep Visual Studio Code extension received new updates! Try to scan your code using the extension and let us know what we can improve. See more in ",(0,r.jsx)(n.a,{href:"/extensions/semgrep-vs-code",children:"Semgrep Visual Studio Code extension"})," documentation. This extension allows you to check your code for vulnerabilities within seconds, with every line of code changed in the editor. The extension is built on Language Server Protocol, so you can hack it for other editors of your choice. The extension also has a dedicated ",(0,r.jsx)(n.a,{href:"https://github.com/semgrep/semgrep-vscode/blob/master/CHANGELOG.md",children:"changelog on GitHub"})," so you can always see the latest updates."]}),"\n",(0,r.jsx)(n.h2,{id:"semgrep-code",children:"Semgrep Code"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["There is a new Policies page that is going to replace the Rule board in Semgrep Code! Switch to the new version by clicking ",(0,r.jsx)(n.strong,{children:"Try new version"})," in the Rule board header. The new page gives the rule overview a noticeable facelift and many optimizations, you can now easily filter for various types of rule metadata, and specific types of rules and make bulk edits which would have been hardly achievable with the old Rule board. Read more in ",(0,r.jsx)(n.a,{href:"/semgrep-code/policies",children:"Policies"})," documentation."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Screenshot of the default state of the Policies page",src:s(98971).A+"",width:"2702",height:"1616"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"You can now rename Projects in the Semgrep Cloud Platform. Before this update, when you renamed a repository in your Source Code Manager (SCM), for example in GitHub, GitLab, or Bitbucket, all of your previous Semgrep findings and triage data were lost as Semgrep recognized the renamed repository only as a new repository. With this update, you can now manually rename the project in Semgrep Code. This is the first step before we will bring you an automated solution (as this update still requires manual action). But now you can rename a project in Semgrep Code to match the new repository name without losing your findings data!\nTo rename a repository:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["On the ",(0,r.jsx)(n.a,{href:"https://semgrep.dev/orgs/-/projects",children:"Projects"})," page of Semgrep Cloud Platform, click the gear icon ",(0,r.jsx)("i",{class:"fa-solid fa-gear"})," ",(0,r.jsx)(n.strong,{children:"Settings"}),". of the repository where you want to change the repository name.\n",(0,r.jsx)(n.img,{alt:"Screenshot of the settings icon on Projects page",src:s(83262).A+"",width:"2668",height:"638"})]}),"\n",(0,r.jsxs)(n.li,{children:["Click the three dots \u2026, and then click Rename project.\n",(0,r.jsx)(n.img,{alt:"Screenshot of the three dots options menu on Projects page",src:s(19989).A+"",width:"1584",height:"1074"})]}),"\n",(0,r.jsxs)(n.li,{children:["Create a name that matches the name in your SCM, and then click ",(0,r.jsx)(n.strong,{children:"Rename"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"pro-rules",children:"Pro rules"}),"\n",(0,r.jsx)(n.p,{children:"Recently released rules bring a total of:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["61 Pro rules for\xa0",(0,r.jsx)(n.strong,{children:"Kotlin"}),"\xa0(with support frameworks like Spring and Ktor)"]}),"\n",(0,r.jsxs)(n.li,{children:["69 Pro rules for\xa0",(0,r.jsx)(n.strong,{children:"Go"}),"\xa0(with support frameworks such as Gin, Gorilla, gRPC, net/HTTP, and more)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["These rules are available through the ",(0,r.jsx)(n.a,{href:"https://semgrep.dev/explore",children:"Semgrep Registry"}),", in rulesets such as\xa0",(0,r.jsx)(n.code,{children:"p/default"}),"\xa0and\xa0",(0,r.jsx)(n.code,{children:"p/comment"}),", as well as language-specific rulesets such as\xa0",(0,r.jsx)(n.code,{children:"p/kotlin"}),"\xa0and\xa0",(0,r.jsx)(n.code,{children:"p/golang"}),". In total, there are now\xa0more than 500 Pro rules available."]}),"\n",(0,r.jsx)(n.h2,{id:"semgrep-pro-engine",children:"Semgrep Pro Engine"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Semgrep Pro Engine now provides cross-function support for Go and Kotlin!"}),"\n",(0,r.jsxs)(n.li,{children:["Semgrep Pro Engine allows you to visualize the flow of tainted data (dataflow traces) in Semgrep Code. With this update, you can also receive findings with the visualized flow of tainted data in a pull request (PR) or merge request (MR) Semgrep comments. For more information, see the following documentation:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/semgrep-appsec-platform/github-pr-comments/#dataflow-traces-in-pr-comments",children:"Dataflow traces in PR comments"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/semgrep-appsec-platform/gitlab-mr-comments/#dataflow-traces-in-mr-comments",children:"Dataflow traces in MR comments"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Taint analysis:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Taint labels now mostly work cross-function (interprocedural) analysis, except for labeled propagators.\nNote that taint labels are experimental!"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Taint analysis now supports cross-function (interprocedural) field sensitivity for JavaScript and TypeScript."}),"\n",(0,r.jsx)(n.p,{children:"For example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"class Obj {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Semgrep Pro Engine taint analysis can now perform field-sensitive analysis of class constructors in Java. For example, if the default constructor of a class ",(0,r.jsx)(n.code,{children:"C"})," sets its field ",(0,r.jsx)(n.code,{children:"x"})," to a tainted value, given ",(0,r.jsx)(n.code,{children:"o = new C()"}),", Semgrep knows that ",(0,r.jsx)(n.code,{children:"o.getX()"})," is tainted."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"documentation-updates",children:"Documentation updates"}),"\n",(0,r.jsx)(n.h3,{id:"additions",children:"Additions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Added a new ",(0,r.jsx)(n.a,{href:"/usage-and-billing",children:"Usage limits"})," FAQ page."]}),"\n",(0,r.jsxs)(n.li,{children:["Added a new document about ",(0,r.jsx)(n.a,{href:"/semgrep-supply-chain/license-compliance",children:"License compliance"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Added a new document ",(0,r.jsx)(n.a,{href:"/semgrep-supply-chain/dependency-search",children:"Searching through your dependencies"})," in Semgrep Supply Chain documentation."]}),"\n",(0,r.jsxs)(n.li,{children:["Added a new section ",(0,r.jsx)(n.a,{href:"/semgrep-code/semgrep-pro-engine-intro#update-cross-file-analysis-in-the-cli",children:"Updating Semgrep Pro Engine in CLI"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["There is a new section ",(0,r.jsx)(n.a,{href:"/docs/writing-rules/experiments/symbolic-propagation#limitations-of-symbolic-propagation",children:"Limitations of symbolic propagation"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Added dataflow traces in PRs and MRs documentation.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/semgrep-appsec-platform/github-pr-comments#dataflow-traces-in-pr-comments",children:"Dataflow traces in PR comments"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/semgrep-appsec-platform/gitlab-mr-comments#dataflow-traces-in-mr-comments",children:"Dataflow traces in MR comments"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Add executing commands as strings and many more updates to the ",(0,r.jsx)(n.a,{href:"/cheat-sheets/ruby-command-injection",children:"Command injection prevention for Ruby"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Added ",(0,r.jsx)(n.a,{href:"/semgrep-code/semgrep-pro-engine-intro#run-cross-file-analysis-in-the-cli",children:"Semgrep Pro Engine CI scans"})," section."]}),"\n",(0,r.jsxs)(n.li,{children:["Added new ",(0,r.jsx)(n.a,{href:"/semgrep-code/policies",children:"Policies"})," page documentation, also updated ",(0,r.jsx)(n.strong,{children:"Rule board"})," documentation with an admonition about Policies page."]}),"\n",(0,r.jsxs)(n.li,{children:["Added ",(0,r.jsx)(n.a,{href:"/extensions/semgrep-vs-code",children:"Semgrep Visual Studio Code extension"})," documentation."]}),"\n",(0,r.jsxs)(n.li,{children:["Added ",(0,r.jsx)(n.a,{href:"/writing-rules/experiments/aliengrep",children:"Aliengrep"})," reference documentation."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"changes",children:"Changes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Updated ",(0,r.jsx)(n.a,{href:"/writing-rules/experiments/join-mode/overview",children:"Join mode"})," documentation."]}),"\n",(0,r.jsxs)(n.li,{children:["Admonitions regarding the new Turbo mode were added to Playground and Editor documentation. Go to ",(0,r.jsx)(n.a,{href:"/semgrep-code/editor",children:"Playground"})," documentation and search for turbo mode."]}),"\n",(0,r.jsxs)(n.li,{children:["Updated ",(0,r.jsx)(n.a,{href:"/deployment/sso",children:"Single-sign on (SSO) configuration"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Updated ",(0,r.jsx)(n.a,{href:"/semgrep-appsec-platform/dashboard/",children:"Evaluating your security posture through the Dashboard"})," document."]}),"\n",(0,r.jsxs)(n.li,{children:["Our Rule syntax document now shows that focus metavariables can be a list of more focus metavariables. See the rule example in ",(0,r.jsx)(n.a,{href:"/writing-rules/rule-syntax/#including-multiple-focus-metavariables-using-set-intersection-semantics",children:"Including multiple focus metavariables using set intersection semantics"})," section."]}),"\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.a,{href:"/contributing/contributing-to-semgrep-rules-repository/#general-rule-requirements",children:"General rule requirements"})," section of Contributing rules document now includes a more precise definition of the ",(0,r.jsx)(n.code,{children:"severity"})," YAML rules key."]}),"\n",(0,r.jsx)(n.li,{children:"Our docs search now includes heading information to better contextualize search results and other fixes to optimize the documentation search."}),"\n",(0,r.jsxs)(n.li,{children:["Code samples in ",(0,r.jsx)(n.a,{href:"/semgrep-ci/sample-ci-configs",children:"Sample continuous integration (CI) configurations"})," document now includes workflow dispatch and other additional updates to various code snippets on this page."]}),"\n",(0,r.jsxs)(n.li,{children:["Updated source paths in ",(0,r.jsx)(n.a,{href:"/contributing/contributing-code/",children:"Contributing code"})," documentation."]}),"\n",(0,r.jsxs)(n.li,{children:["Rule syntax table Language extensions and tags has been renamed to ",(0,r.jsx)(n.a,{href:"/writing-rules/rule-syntax/#language-extensions-and-languages-key-values",children:"Language extensions and languages key values"}),". The table has also been updated and is now accompanied by an introductory information and admonition."]}),"\n",(0,r.jsxs)(n.li,{children:["Removed ",(0,r.jsx)(n.code,{children:"pattern-where-python"})," documentation as it was deprecated in Semgrep OSS Engine version 0.61.0."]}),"\n",(0,r.jsxs)(n.li,{children:["There were also numerous typos fixed, many other docs pages improved, and some screenshots updated. All this is to improve your experience with our docs. Also big thanks to ",(0,r.jsx)(n.a,{href:"https://github.com/parsiya",children:"Parsia Hakimian"})," for helping us to fix some of these typos!"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8933:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/sc-license-scanning-3f912a0589dcbe04cbeff9e9c84d7ab6.png"},19989:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/release-notes-rename-project2-710d87f273e86d549e1b763fe4c4e55a.png"},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var i=s(96540);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}},39961:e=>{e.exports=JSON.parse('{"permalink":"/semgrep-docs/release-notes/may-2023","source":"@site/release-notes/may-2023.md","title":"May 2023","description":"Release notes include the changes, fixes, and additions in specific versions of Semgrep.","date":"2023-05-30T10:00:00.000Z","tags":[{"inline":true,"label":"Release notes","permalink":"/semgrep-docs/release-notes/tags/release-notes"}],"readingTime":9.215,"hasTruncateMarker":true,"authors":[],"frontMatter":{"slug":"may-2023","append_help_link":true,"hide_title":true,"description":"Release notes include the changes, fixes, and additions in specific versions of Semgrep.","toc_max_heading_level":3,"tags":["Release notes"],"hide_table_of_contents":false,"date":"2023-05-30T10:00","title":"May 2023"},"unlisted":false,"prevItem":{"title":"June 2023","permalink":"/semgrep-docs/release-notes/june-2023"},"nextItem":{"title":"April 2023","permalink":"/semgrep-docs/release-notes/april-2023"}}')},83262:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/release-notes-rename-project1-2818d8eaab431123cab25e1921aab052.png"},98971:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/policies-4a611dec93f05102de0ca3135bd85def.png"}}]);