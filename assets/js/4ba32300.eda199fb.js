"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[6580],{28453:(e,r,s)=>{s.d(r,{R:()=>t,x:()=>a});var n=s(96540);const l={},i=n.createContext(l);function t(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),n.createElement(i.Provider,{value:r},e.children)}},34296:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>t,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"running-rules","title":"Run rules","description":"Learn about Semgrep rules, how to add your custom rules and rules from Semgrep Registry, a community-contributed repository of rules to help enforce security.","source":"@site/docs/running-rules.md","sourceDirName":".","slug":"/running-rules","permalink":"/docs/running-rules","draft":false,"unlisted":false,"editUrl":"https://github.com/kyle-semgrep/semgrep-docs/edit/main?base=kyle-semgrep:main/docs/running-rules.md","tags":[{"inline":true,"label":"Semgrep Code","permalink":"/docs/tags/semgrep-code"}],"version":"current","lastUpdatedAt":1752253235000,"frontMatter":{"slug":"running-rules","append_help_link":true,"description":"Learn about Semgrep rules, how to add your custom rules and rules from Semgrep Registry, a community-contributed repository of rules to help enforce security.","title":"Run rules","tags":["Semgrep Code"],"hide_title":true},"sidebar":"scanSidebar","previous":{"title":"Local CLI scans","permalink":"/docs/getting-started/cli"},"next":{"title":"Update Semgrep","permalink":"/docs/update"}}');var l=s(74848),i=s(28453);const t={slug:"running-rules",append_help_link:!0,description:"Learn about Semgrep rules, how to add your custom rules and rules from Semgrep Registry, a community-contributed repository of rules to help enforce security.",title:"Run rules",tags:["Semgrep Code"],hide_title:!0},a="Run rules",o={},c=[{value:"Running Semgrep Registry rules locally",id:"running-semgrep-registry-rules-locally",level:2},{value:"Creating and using local rules",id:"creating-and-using-local-rules",level:2},{value:"Ephemeral rules",id:"ephemeral-rules",level:3},{value:"YAML-defined rules",id:"yaml-defined-rules",level:3},{value:"Running multiple rules simultaneously",id:"running-multiple-rules-simultaneously",level:2},{value:"Findings",id:"findings",level:2},{value:"Next steps",id:"next-steps",level:2},{value:"Number of Semgrep Registry rules",id:"number-of-semgrep-registry-rules",level:2}];function d(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(r.header,{children:(0,l.jsx)(r.h1,{id:"run-rules",children:"Run rules"})}),"\n",(0,l.jsxs)(r.p,{children:["Semgrep performs static application security testing (SAST) scans through the use of ",(0,l.jsx)(r.strong,{children:"rules"}),". Rules are instructions based on which Semgrep detects patterns in code."]}),"\n",(0,l.jsxs)(r.p,{children:["When Semgrep reports code using specified rules, the detected code is called a ",(0,l.jsx)(r.strong,{children:"finding"}),". The process of scanning and detecting a piece of code is also called ",(0,l.jsx)(r.strong,{children:"matching"}),", as Semgrep matches the code using rules to report a finding."]}),"\n",(0,l.jsx)(r.p,{children:"Semgrep findings can help you find security, performance, or correctness issues, and enforce best practices. You can define custom rules through Semgrep's rule syntax or rely on rules created by the community or Semgrep, Inc."}),"\n",(0,l.jsxs)(r.p,{children:["Public rules are stored in the ",(0,l.jsxs)(r.a,{href:"https://semgrep.dev/explore",children:[(0,l.jsx)("i",{class:"fas fa-external-link fa-xs"})," Semgrep Registry"]})," which enables you to scan code without the need to write anything custom. Semgrep-maintained rules are stored in ",(0,l.jsx)(r.a,{href:"https://github.com/semgrep/semgrep-rules",children:(0,l.jsxs)("code",{children:[(0,l.jsx)("i",{class:"fas fa-external-link fa-xs"})," semgrep-rules"]})}),"."]}),"\n",(0,l.jsxs)(r.p,{children:["Rules can be organized in ",(0,l.jsx)(r.strong,{children:"rulesets"}),". Rulesets are rules related through a programming language, OWASP category, or framework. The rulesets are curated by the team at Semgrep and updated as new rules are added to the ",(0,l.jsx)(r.a,{href:"https://semgrep.dev/explore",children:"Semgrep Registry"}),"."]}),"\n",(0,l.jsx)(r.p,{children:"The list below covers different kinds of Semgrep rules:"}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["Existing ",(0,l.jsx)(r.a,{href:"#running-semgrep-registry-rules-locally",children:"Semgrep Registry rules"}),". You can also contribute to the open source Semgrep Registry, see ",(0,l.jsx)(r.a,{href:"/contributing/contributing-to-semgrep-rules-repository",children:"Contributing rules"}),"."]}),"\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.a,{href:"#creating-and-using-local-rules",children:"Local rules"}),":","\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["One-off ",(0,l.jsx)(r.a,{href:"#ephemeral-rules",children:"ephemeral rules"})," passed into the command line."]}),"\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.a,{href:"#yaml-defined-rules",children:"YAML-defined rules"}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(r.li,{children:["A combination of ",(0,l.jsx)(r.a,{href:"#running-multiple-rules-simultaneously",children:"local rules and Semgrep Registry rules"})," or a combination of multiple rules in general."]}),"\n"]}),"\n",(0,l.jsx)(r.h2,{id:"running-semgrep-registry-rules-locally",children:"Running Semgrep Registry rules locally"}),"\n",(0,l.jsx)(r.p,{children:"You can run a SAST scan in your Git environment with pre-selected Semgrep Registry rules:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{children:"semgrep scan --config=auto\n"})}),"\n",(0,l.jsx)(r.admonition,{type:"info",children:(0,l.jsxs)(r.p,{children:["By default, when Semgrep Registry is used, Semgrep collects ",(0,l.jsx)(r.a,{href:"/docs/metrics",children:"usage metrics"}),"."]})}),"\n",(0,l.jsx)(r.p,{children:"Explore the Semgrep Registry by following these steps:"}),"\n",(0,l.jsxs)(r.ol,{children:["\n",(0,l.jsxs)(r.li,{children:["See the ",(0,l.jsx)(r.a,{href:"https://semgrep.dev/explore",children:"Semgrep Registry"}),", click a ruleset, and then choose a rule."]}),"\n",(0,l.jsxs)(r.li,{children:["On the page of the rule, click ",(0,l.jsx)(r.strong,{children:"Run Locally"}),"."]}),"\n",(0,l.jsxs)(r.li,{children:["Copy the code for local install, and then add the path to the source code you want to scan in your terminal:\n",(0,l.jsx)("pre",{class:"language-bash",children:(0,l.jsxs)("code",{children:['semgrep scan --config="',(0,l.jsx)("span",{className:"placeholder",children:"RULESET-ID"}),'" ',(0,l.jsx)("span",{className:"placeholder",children:"PATH/TO/SRC"})]})})]}),"\n",(0,l.jsxs)(r.li,{children:["Optional: Run registry rules simultaneously with local rules:\n",(0,l.jsx)("pre",{class:"language-bash",children:(0,l.jsxs)("code",{children:['semgrep scan --config="',(0,l.jsx)("span",{className:"placeholder",children:"RULESET-ID"}),'" --config=',(0,l.jsx)("span",{className:"placeholder",children:"PATH/TO/MYRULE.YAML PATH/TO/SRC"})]})})]}),"\n"]}),"\n",(0,l.jsx)(r.h2,{id:"creating-and-using-local-rules",children:"Creating and using local rules"}),"\n",(0,l.jsx)(r.p,{children:"Local rules can be either:"}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.a,{href:"#ephemeral-rules",children:"Ephemeral rules"})," with the ",(0,l.jsx)(r.code,{children:"-e"})," or ",(0,l.jsx)(r.code,{children:"--pattern"})," flags for use in a single command."]}),"\n",(0,l.jsxs)(r.li,{children:["Configured in ",(0,l.jsx)(r.a,{href:"#yaml-defined-rules",children:"YAML rule files"})," that conform to the ",(0,l.jsx)(r.a,{href:"/writing-rules/rule-syntax",children:"Rule syntax"})," schema."]}),"\n"]}),"\n",(0,l.jsx)(r.admonition,{type:"tip",children:(0,l.jsxs)(r.p,{children:["See ",(0,l.jsx)(r.a,{href:"/writing-rules/overview/",children:"Writing rules > Getting started"})," to learn how to write rules."]})}),"\n",(0,l.jsx)(r.h3,{id:"ephemeral-rules",children:"Ephemeral rules"}),"\n",(0,l.jsxs)(r.p,{children:["Use the ",(0,l.jsx)(r.code,{children:"-e"})," or ",(0,l.jsx)(r.code,{children:"--pattern"})," flags in your terminal for ephemeral rules that are used once."]}),"\n",(0,l.jsxs)(r.p,{children:["For example: Check for Python ",(0,l.jsx)(r.code,{children:"=="})," where the left and right sides are the same (often a bug):\n",(0,l.jsx)("pre",{class:"language-bash",children:(0,l.jsxs)("code",{children:["semgrep -e '$X == $X' --lang=py ",(0,l.jsx)("span",{className:"placeholder",children:"PATH/TO/SRC"})]})}),"\nSubstitute the optional placeholder ",(0,l.jsx)("code",{children:(0,l.jsx)("span",{className:"placeholder",children:"PATH/TO/SRC"})})," with the path to your source code."]}),"\n",(0,l.jsx)(r.admonition,{type:"info",children:(0,l.jsxs)(r.p,{children:["Both local ",(0,l.jsx)(r.code,{children:"rule.yaml"})," files and ephemeral rules are called ",(0,l.jsx)(r.em,{children:"local rules"}),"."]})}),"\n",(0,l.jsx)(r.h3,{id:"yaml-defined-rules",children:"YAML-defined rules"}),"\n",(0,l.jsx)(r.p,{children:"To create a local YAML file where you define your own rules and run them with Semgrep, follow these steps:"}),"\n",(0,l.jsxs)(r.ol,{children:["\n",(0,l.jsxs)(r.li,{children:["Create a ",(0,l.jsx)(r.code,{children:"rule.yaml"})," file."]}),"\n",(0,l.jsxs)(r.li,{children:["Below is a simple example rule for Python which you can paste into your ",(0,l.jsx)(r.code,{children:"rule.yaml"})," file.","\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-yaml",children:"rules:\n- id: is-comparison\n  languages:\n    - python\n  message: The operator 'is' is for reference equality, not value equality! Use\n  `==` instead!\n  pattern: $SOMEVAR is \"...\"\n  severity: ERROR\n"})}),"\n"]}),"\n",(0,l.jsxs)(r.li,{children:["Run the following command to run local YAML rule files:\n",(0,l.jsx)("pre",{class:"language-bash",children:(0,l.jsxs)("code",{children:["semgrep scan --config ",(0,l.jsx)("span",{className:"placeholder",children:"PATH/TO/MYRULE.YAML"})]})})]}),"\n"]}),"\n",(0,l.jsxs)(r.p,{children:["Rules stored under a hidden directory, such as ",(0,l.jsx)(r.code,{children:"dir/.hidden/myrule.yml"}),", are processed by Semgrep when scanning with the ",(0,l.jsx)(r.code,{children:"--config"})," flag."]}),"\n",(0,l.jsxs)(r.p,{children:["For more information on defining custom rules, see ",(0,l.jsx)(r.a,{href:"/writing-rules/overview/",children:"Writing rules"}),"."]}),"\n",(0,l.jsx)(r.h2,{id:"running-multiple-rules-simultaneously",children:"Running multiple rules simultaneously"}),"\n",(0,l.jsxs)(r.p,{children:["To run multiple rules simultaneously, use ",(0,l.jsx)(r.code,{children:"--config"})," before every YAML URL, or Semgrep registry entry name. This option lets you include your local rules as well as Semgrep Registry rules. See the following code example (substitute the colored values as necessary):"]}),"\n",(0,l.jsx)("pre",{class:"language-bash",children:(0,l.jsxs)("code",{children:["semgrep scan --config ",(0,l.jsx)("span",{className:"placeholder",children:"p/python"})," --config ",(0,l.jsx)("span",{className:"placeholder",children:"PATH/TO/MYRULE.YAML"})]})}),"\n",(0,l.jsx)(r.h2,{id:"findings",children:"Findings"}),"\n",(0,l.jsxs)(r.p,{children:["See ",(0,l.jsx)(r.a,{href:"/ignoring-files-folders-code/",children:"Ignoring findings"})," for details on suppressing rule output."]}),"\n",(0,l.jsx)(r.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,l.jsxs)(r.p,{children:["Find out how to contribute to the ",(0,l.jsx)(r.a,{href:"https://github.com/semgrep/semgrep-rules",children:"Semgrep Registry"})," by reading ",(0,l.jsx)(r.a,{href:"/contributing/contributing-to-semgrep-rules-repository",children:"Contributing rules"})," guide."]}),"\n",(0,l.jsx)(r.h2,{id:"number-of-semgrep-registry-rules",children:"Number of Semgrep Registry rules"}),"\n",(0,l.jsx)(r.p,{children:"Semgrep supports a large number of languages and rules! Their number is continuously expanding."}),"\n",(0,l.jsx)("div",{className:"lang-container",style:{marginBottom:"20px"},children:(0,l.jsx)("iframe",{width:"900",height:"400",frameBorder:"0",src:"https://dashboard.semgrep.dev/metric/registry.rules.num/graph"})})]})}function u(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,l.jsx)(r,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}}}]);