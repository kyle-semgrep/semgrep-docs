"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[40165],{8754:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"contributing/contributing-code","title":"Contributing code","description":"Semgrep welcomes contributions from anyone. If you have an idea for a feature","source":"@site/docs/contributing/contributing-code.md","sourceDirName":"contributing","slug":"/contributing/contributing-code","permalink":"/semgrep-docs/contributing/contributing-code","draft":false,"unlisted":false,"editUrl":"https://github.com/kyle-semgrep/semgrep-docs/edit/main/docs/contributing/contributing-code.md","tags":[],"version":"current","lastUpdatedAt":1753214405000,"frontMatter":{},"sidebar":"aboutSidebar","previous":{"title":"Contribute rules to the Semgrep Registry","permalink":"/semgrep-docs/contributing/contributing-to-semgrep-rules-repository"},"next":{"title":"semgrep-core contributing","permalink":"/semgrep-docs/contributing/semgrep-core-contributing"}}');var o=r(74848),s=r(28453);const t={},c="Contributing code",l={},d=[{value:"File structure",id:"file-structure",level:2},{value:"Code relationship",id:"code-relationship",level:2},{value:"Making a change",id:"making-a-change",level:2},{value:"Only <code>semgrep-cli</code>",id:"only-semgrep-cli",level:3},{value:"Only <code>semgrep-core</code>",id:"only-semgrep-core",level:3},{value:"Both <code>semgrep</code> and <code>semgrep-core</code>",id:"both-semgrep-and-semgrep-core",level:3},{value:"Development workflow",id:"development-workflow",level:2},{value:"Explaining code",id:"explaining-code",level:3},{value:"Adding a changelog entry",id:"adding-a-changelog-entry",level:3},{value:"Quick reference",id:"quick-reference",level:4},{value:"When to add a changelog entry",id:"when-to-add-a-changelog-entry",level:4},{value:"Troubleshooting pre-commit",id:"troubleshooting-pre-commit",level:3},{value:"Working with git submodules",id:"working-with-git-submodules",level:3}];function a(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"contributing-code",children:"Contributing code"})}),"\n",(0,o.jsxs)(n.p,{children:["Semgrep welcomes contributions from anyone. If you have an idea for a feature\nor notice a bug please ",(0,o.jsx)(n.a,{href:"https://github.com/semgrep/semgrep/issues/new/choose",children:"open an issue"}),".\nCreating an issue first is preferable to moving directly to a pull request so\nthat we can ensure you're on the right track without any wasted effort. This\nis also a great way to contribute to Semgrep even if you're not making changes\nyourself."]}),"\n",(0,o.jsxs)(n.p,{children:["This README gives an overview of the repository. For further information on building, you will be directed to ",(0,o.jsx)(n.a,{href:"/semgrep-docs/contributing/semgrep-core-contributing",children:"semgrep-core contributing"})," and/or ",(0,o.jsx)(n.a,{href:"/semgrep-docs/contributing/semgrep-contributing",children:"semgrep-cli contributing"})," in ",(0,o.jsx)(n.a,{href:"#making-a-change",children:"Making a Change"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"file-structure",children:"File structure"}),"\n",(0,o.jsxs)(n.p,{children:["Semgrep consists of a Python wrapper (",(0,o.jsx)(n.code,{children:"semgrep-cli"}),") around an OCaml engine (",(0,o.jsx)(n.code,{children:"semgrep-core"}),") which performs the core parsing/matching work. Within ",(0,o.jsx)(n.code,{children:"semgrep-core"}),", there are two sources of parsers, ",(0,o.jsx)(n.code,{children:"pfff"})," and ",(0,o.jsx)(n.code,{children:"tree-sitter-lang"})," using ",(0,o.jsx)(n.a,{href:"https://github.com/tree-sitter/tree-sitter",children:"tree-sitter"}),". Additionally, ",(0,o.jsx)(n.code,{children:"semgrep-core"})," contains a subengine, ",(0,o.jsx)(n.code,{children:"spacegrep"}),", for generic matching."]}),"\n",(0,o.jsxs)(n.p,{children:["You may also be interested in ",(0,o.jsx)(n.code,{children:"perf"}),", which contains our code for running repositories against specific rulesets."]}),"\n",(0,o.jsx)(n.p,{children:"There are many other files, but the below diagram broadly displays the file structure."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:".\n\u251c\u2500\u2500 cli/  (Python wrapper)\n\u2502   \u2514\u2500\u2500 src/\n\u2502       \u2514\u2500\u2500 semgrep/\n\u2502 \n\u251c\u2500\u2500 src/  (semgrep-core)\n\u2502   \u2502\u2500\u2500 analyzing/  (Dataflow analysis)\n\u2502   \u2502\u2500\u2500 core_cli/  (Entrypoint for semgrep-core)\n\u2502   \u2514\u2500\u2500 matching/  (Matching engine)\n\u2502\n\u251c\u2500\u2500 languages/  (Language parsers)\n\u2502\n\u251c\u2500\u2500 libs/  (Library components)\n\u2502   \u2502\u2500\u2500 ast_generic/  (Generic AST)\n\u2502   \u2514\u2500\u2500 spacegrep/  (Generic matching)\n\u2502\n\u2514\u2500\u2500 perf/  (Performance benchmarking)\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Most of Semgrep's logic is in ",(0,o.jsx)(n.code,{children:"cli/src"})," and ",(0,o.jsx)(n.code,{children:"src"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"code-relationship",children:"Code relationship"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"semgrep-core"})," binary stands alone. Once built, it is possible to run ",(0,o.jsx)(n.code,{children:"semgrep-core"})," on a semgrep rule for a given language with a file/directory and receive matches."]}),"\n",(0,o.jsxs)(n.p,{children:["For example, say you create the config file ",(0,o.jsx)(n.code,{children:"unsafe-exec.yaml"})," and the program ",(0,o.jsx)(n.code,{children:"unsafe-exec.py"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"rules:\n- id: unsafe-exec\n  pattern: exec(...);\n  message: Avoid use of exec; it can lead to a remote code execution.\n  severity: WARNING\n  languages: [python]\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'exec("ls");\n'})}),"\n",(0,o.jsxs)(n.p,{children:["If you run ",(0,o.jsx)(n.code,{children:"semgrep-core -config unsafe-exec.yaml unsafe-exec.py -lang python"}),", it will output"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'unsafe-exec.py:1 with rule unsafe-exec\n exec("ls");\n'})}),"\n",(0,o.jsxs)(n.p,{children:["If you run ",(0,o.jsx)(n.code,{children:"semgrep --config unsafe-exec.yaml unsafe-exec.py"}),", it will output"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'running 1 rules...\nunsafe-exec.py\nseverity:warning rule:unsafe-exec: Avoid use of exec; it can lead to a remote code execution.\n1:exec("ls");\nran 1 rules on 1 files: 1 findings\n'})}),"\n",(0,o.jsxs)(n.p,{children:["The matched code is the same, but with ",(0,o.jsx)(n.code,{children:"semgrep-cli"})," the output is more polished and includes the message."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"semgrep-cli"})," invokes the ",(0,o.jsx)(n.code,{children:"semgrep-core"})," binary as a subprocess, with a flag to request JSON output. It reads the ",(0,o.jsx)(n.code,{children:"semgrep-core"})," output and transforms it appropriately."]}),"\n",(0,o.jsxs)(n.p,{children:["Currently, depending on the flags used, ",(0,o.jsx)(n.code,{children:"spacegrep"})," is invoked both independently by ",(0,o.jsx)(n.code,{children:"semgrep-cli"})," as a subprocess and by ",(0,o.jsx)(n.code,{children:"semgrep-core"})," as a subfolder. Therefore, ",(0,o.jsx)(n.code,{children:"semgrep-cli"})," requires the ",(0,o.jsx)(n.code,{children:"spacegrep"})," binary, but building ",(0,o.jsx)(n.code,{children:"semgrep-core"})," will build ",(0,o.jsx)(n.code,{children:"spacegrep"})," as well."]}),"\n",(0,o.jsx)(n.h2,{id:"making-a-change",children:"Making a change"}),"\n",(0,o.jsx)(n.p,{children:"Semgrep runs on Python versions >= 3.8. If you don't have one of these versions installed, please do so before proceeding."}),"\n",(0,o.jsxs)(n.p,{children:["Because the Python and OCaml development paths are relatively independent, the instructions are divided into Python (",(0,o.jsx)(n.a,{href:"/semgrep-docs/contributing/semgrep-contributing",children:"semgrep-cli contributing"}),") and OCaml (",(0,o.jsx)(n.a,{href:"/semgrep-docs/contributing/semgrep-core-contributing",children:"semgrep-core contributing"}),")."]}),"\n",(0,o.jsxs)(n.p,{children:["To fully build Semgrep from source, start at ",(0,o.jsx)(n.a,{href:"/semgrep-docs/contributing/semgrep-core-contributing",children:"semgrep-core contributing"}),". It will direct you to ",(0,o.jsx)(n.a,{href:"/semgrep-docs/contributing/semgrep-contributing",children:"semgrep-cli contributing"})," when appropriate."]}),"\n",(0,o.jsxs)(n.p,{children:["Depending on what change you want to make, it might be simpler to build only ",(0,o.jsx)(n.code,{children:"semgrep-cli"})," or only ",(0,o.jsx)(n.code,{children:"semgrep-core"}),". For example, if you only want to modify Python code, you can skip installing OCaml by downloading binaries for the OCaml parts. Similarly, if you only want to modify OCaml code, you can work on ",(0,o.jsx)(n.code,{children:"semgrep-core"}),"/",(0,o.jsx)(n.code,{children:"spacegrep"})," directly."]}),"\n",(0,o.jsxs)(n.p,{children:["If you only want to build ",(0,o.jsx)(n.code,{children:"semgrep-cli"}),", go straight to ",(0,o.jsx)(n.a,{href:"/semgrep-docs/contributing/semgrep-contributing",children:"semgrep-cli contributing"}),". Otherwise, follow the instructions in ",(0,o.jsx)(n.a,{href:"/semgrep-docs/contributing/semgrep-core-contributing",children:"semgrep-core contributing"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Below is a guide for what functionality each of ",(0,o.jsx)(n.code,{children:"semgrep-cli"})," and ",(0,o.jsx)(n.code,{children:"semgrep-core"})," controls."]}),"\n",(0,o.jsxs)(n.h3,{id:"only-semgrep-cli",children:["Only ",(0,o.jsx)(n.code,{children:"semgrep-cli"})]}),"\n",(0,o.jsxs)(n.p,{children:["The python code for Semgrep performs pre and post-processing work. You likely need to touch only ",(0,o.jsx)(n.code,{children:"semgrep-cli"})," if you want to affect"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"How output is formatted"}),"\n",(0,o.jsx)(n.li,{children:"What files are scanned for each language"}),"\n",(0,o.jsx)(n.li,{children:"The message that is displayed"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Go to ",(0,o.jsx)(n.a,{href:"/semgrep-docs/contributing/semgrep-contributing",children:"semgrep-cli contributing"})]}),"\n",(0,o.jsxs)(n.h3,{id:"only-semgrep-core",children:["Only ",(0,o.jsx)(n.code,{children:"semgrep-core"})]}),"\n",(0,o.jsxs)(n.p,{children:["The OCaml code for Semgrep performs all the parsing and matching work. You likely need to touch only ",(0,o.jsx)(n.code,{children:"semgrep-core"})," if you want to"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Fix a parse error"}),"\n",(0,o.jsx)(n.li,{children:"Fix a matching error"}),"\n",(0,o.jsx)(n.li,{children:"Improve Semgrep's performance"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Go to ",(0,o.jsx)(n.a,{href:"/semgrep-docs/contributing/semgrep-core-contributing",children:"semgrep-core contributing"})]}),"\n",(0,o.jsxs)(n.h3,{id:"both-semgrep-and-semgrep-core",children:["Both ",(0,o.jsx)(n.code,{children:"semgrep"})," and ",(0,o.jsx)(n.code,{children:"semgrep-core"})]}),"\n",(0,o.jsxs)(n.p,{children:["There are some features that cross through both OCaml and Python code. You will likely need to touch both ",(0,o.jsx)(n.code,{children:"semgrep-cli"})," and ",(0,o.jsx)(n.code,{children:"semgrep-core"})," if you want to"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Fix an autofix error"}),"\n",(0,o.jsx)(n.li,{children:"Add a new language"}),"\n",(0,o.jsx)(n.li,{children:"Change error reporting"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Go to ",(0,o.jsx)(n.a,{href:"/semgrep-docs/contributing/semgrep-core-contributing",children:"semgrep-core contributing"}),". It will direct you to ",(0,o.jsx)(n.a,{href:"/semgrep-docs/contributing/semgrep-contributing",children:"semgrep-cli contributing"})," when appropriate."]}),"\n",(0,o.jsx)(n.h2,{id:"development-workflow",children:"Development workflow"}),"\n",(0,o.jsxs)(n.p,{children:["Before each commit Semgrep will run ",(0,o.jsx)(n.a,{href:"https://pre-commit.com/",children:(0,o.jsx)(n.code,{children:"pre-commit"})})," to\nensure files are well-formatted and check for basic linting bugs. If you don't\nhave ",(0,o.jsx)(n.code,{children:"pre-commit"})," installed the following command will do so for you:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"python -m pip install pre-commit\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Our ",(0,o.jsx)(n.code,{children:"pre-commit"})," configuration uses Docker images. Please ensure you have\n",(0,o.jsx)(n.a,{href:"https://docs.docker.com/get-docker/",children:"Docker installed"})," before running\n",(0,o.jsx)(n.code,{children:"pre-commit"}),". Install the ",(0,o.jsx)(n.code,{children:"pre-commit"})," hooks with the following command:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"pre-commit install\n"})}),"\n",(0,o.jsxs)(n.p,{children:["To ensure ",(0,o.jsx)(n.code,{children:"pre-commit"})," is working as expected, run the following command:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"pre-commit run --all\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Once ",(0,o.jsx)(n.code,{children:"pre-commit"})," is working you may commit code and create pull requests as\nyou would expect. Pull requests require approval of at least one maintainer and\n",(0,o.jsx)(n.a,{href:"https://github.com/semgrep/semgrep/actions",children:"CI to be passing"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"explaining-code",children:"Explaining code"}),"\n",(0,o.jsx)(n.p,{children:"It's important for code to be easy to maintain. This allows all of us to\nspend more time on new features rather than spending it on studying\nlegacy code. As a general rule of thumb, assume that all context that\nis not written down will be lost and forgotten. Useful context includes:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Why does this code exist?"}),"\n",(0,o.jsx)(n.li,{children:"What or who uses this code?"}),"\n",(0,o.jsx)(n.li,{children:"What does this code achieve?"}),"\n",(0,o.jsx)(n.li,{children:"Could this code be replaced by an off-the-shelf component? Why not?"}),"\n",(0,o.jsx)(n.li,{children:"Does it implement a formal specification or a well-known pattern? Where can\nwe learn more about it?"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["We ask that ",(0,o.jsx)(n.strong,{children:"each source file start with one comment"})," that\nconcisely answers these questions."]}),"\n",(0,o.jsx)(n.p,{children:"Here's a short example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"(*\n   Generate unique names with a given prefix.\n*)\n"})}),"\n",(0,o.jsx)(n.p,{children:"It can be improved by explaining the code's uses:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"(*\n   Generate unique names with a given prefix. This is used to\n   name new grammar rules and new OCaml variables.\n*)\n"})}),"\n",(0,o.jsx)(n.h3,{id:"adding-a-changelog-entry",children:"Adding a changelog entry"}),"\n",(0,o.jsx)(n.h4,{id:"quick-reference",children:"Quick reference"}),"\n",(0,o.jsxs)(n.p,{children:["Add a new file named like ",(0,o.jsx)(n.code,{children:"changelog.d/gh-1234.fixed"})," that contains\na single paragraph of Markdown text such as:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Fix emojis absorbed by the fleeb generator\n"})}),"\n",(0,o.jsx)(n.p,{children:"File name format:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'gh-1234.fixed\n   ^^^^ ^^^^^\n   |    |\n   |    one of: "added", "changed", "fixed", "infra"\n   GitHub issue or pull request ID\n'})}),"\n",(0,o.jsx)(n.p,{children:"Valid changelog file suffixes are:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"added"})," - New features or other previously non-existing functionality"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"changed"})," - Items that have changed the way Semgrep functions"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"fixed"})," - Bug fixes or other improvements"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"infra"})," - Workflow improvements or other non-code updates"]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"when-to-add-a-changelog-entry",children:"When to add a changelog entry"}),"\n",(0,o.jsxs)(n.p,{children:["If you contribute code that affects users, you must add an entry\nto the changelog, in the ",(0,o.jsxs)(n.a,{href:"https://github.com/semgrep/semgrep/tree/develop/changelog.d",children:[(0,o.jsx)(n.code,{children:"changelog.d"}),"\nfolder"]}),". At\neach Semgrep release, these files are automatically gathered and formatted to\nproduce ",(0,o.jsx)(n.a,{href:"https://github.com/semgrep/semgrep/blob/develop/CHANGELOG.md",children:"release notes"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"A changelog entry is required if you are:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Adding new features or other previously non-existing functionality."}),"\n",(0,o.jsx)(n.li,{children:"Including important changes in the way Semgrep functions."}),"\n",(0,o.jsx)(n.li,{children:"Submitting bug fixes or other improvements."}),"\n",(0,o.jsx)(n.li,{children:"Creating workflow improvements or other non-code updates."}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["A tool called ",(0,o.jsx)(n.a,{href:"https://github.com/twisted/towncrier",children:(0,o.jsx)(n.code,{children:"towncrier"})})," is\nused for changelog management."]}),"\n",(0,o.jsx)(n.h3,{id:"troubleshooting-pre-commit",children:"Troubleshooting pre-commit"}),"\n",(0,o.jsxs)(n.p,{children:["On M1 macs some ",(0,o.jsx)(n.code,{children:"pre-commit"})," tests may fail."]}),"\n",(0,o.jsxs)(n.p,{children:["If those checks are running in docker containers (such as ",(0,o.jsx)(n.code,{children:"hadolint"}),") and exit with code 137, this means they are running into a memory limit.\nThis is because for running x86_64 images on an M1 mac, docker will utilize an emulation with qemu that can cause higher memory consumption.\nTo fix this, change the memory limit in Docker Desktop in the Resources section of the Preferences, 8.00GB should be sufficient."]}),"\n",(0,o.jsx)(n.h3,{id:"working-with-git-submodules",children:"Working with git submodules"}),"\n",(0,o.jsx)(n.p,{children:"A submodule is a reference to a specific commit in another git\nrepository. This results in a subfolder containing a checkout of that\nrepository at that particular commit. Submodules have a reputation of\nbeing tricky to use. To minimize problems, make sure to follow these\nguidelines:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["When checking out a new branch or commit, update the submodules\nusing the command ",(0,o.jsx)(n.code,{children:"git submodule update --init --recursive"}),".\nAdding a shortcut to your shell can be useful. The following is a\nBash function that lets you call ",(0,o.jsx)(n.code,{children:"gitup"}),". It goes into your ",(0,o.jsx)(n.code,{children:"~/.bashrc"}),":"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'gitup() {\n  echo "git submodule update --init --recursive"\n  git submodule update --init --recursive\n}\n'})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["When modifying both a parent repo A and one of its submodules B,\nmake one pull request for each (PR A, PR B).","\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Before merging PR B, make sure the branch on repo B is ",(0,o.jsx)(n.strong,{children:"not\nlagging behind"})," the main branch. This ensures that the submodule\nincludes all the latest changes made by others."]}),"\n",(0,o.jsxs)(n.li,{children:["Make sure PR B is merged ",(0,o.jsx)(n.strong,{children:"before"})," PR A.\nThis ensures that other developers will pick up the changes on B\nwhen making their own changes."]}),"\n",(0,o.jsx)(n.li,{children:"After merging PR A, check that submodule B is still up-to-date\nwith respect to its main branch, especially if PR B was merged\nmore than an hour ago.\nGood to know:"}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Merging in B can be done with a merge commit or by squashing the\ncommits."}),"\n",(0,o.jsxs)(n.li,{children:["If squashing commits in B, you must know that the original commit\nreferenced by A becomes orphaned when the branch is deleted but\nremains cached by git for a while. This is usually sufficient to\nnot require A to point to the newly-squashed commit. ",(0,o.jsx)(n.em,{children:"If this turns\nout to be problematic in practice, we may have to disallow\ncommit squashing in the future."})]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>c});var i=r(96540);const o={},s=i.createContext(o);function t(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);