"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[28430],{16556:e=>{e.exports=JSON.parse('{"tag":{"label":"Semgrep in CI","permalink":"/semgrep-docs/tags/semgrep-in-ci","allTagsPath":"/semgrep-docs/tags","count":15,"items":[{"id":"kb/semgrep-ci/collect-gha-logs","title":"Collecting Semgrep GitHub Actions logs from GitHub","description":"Collect logs from GitHub Actions to troubleshoot Semgrep CI scans.","permalink":"/semgrep-docs/kb/semgrep-ci/collect-gha-logs"},{"id":"kb/semgrep-ci/using-nonroot-docker-image-with-gha","title":"Configure GitHub Actions to use the nonroot Semgrep docker image","description":"How to properly configure your GitHub Actions workflow to use the `nonroot` Semgrep docker image","permalink":"/semgrep-docs/kb/semgrep-ci/using-nonroot-docker-image-with-gha"},{"id":"kb/semgrep-ci/scan-compressed-files-artifacts","title":"Does Semgrep scan compressed files or other non-code files?","description":"Options to scan compressed files or other artifacts with Semgrep.","permalink":"/semgrep-docs/kb/semgrep-ci/scan-compressed-files-artifacts"},{"id":"kb/semgrep-ci/git-command-errors","title":"Failed to run a git command during a pull request or merge request scan","description":"When running Semgrep in CI with a pull request or merge request as the triggering event, Semgrep runs some additional git commands to determine the behavior for the scan. The scan exits with an error if these commands fail. A message like the following shows in the output:","permalink":"/semgrep-docs/kb/semgrep-ci/git-command-errors"},{"id":"kb/semgrep-ci/collect-gitlab-logs","title":"GitLab \\"Job\'s log exceeded limit\\" error","description":"Collect verbose logs from GitLab to troubleshoot Semgrep CI scans.","permalink":"/semgrep-docs/kb/semgrep-ci/collect-gitlab-logs"},{"id":"kb/semgrep-code/run-specific-version","title":"How to run different versions of Semgrep","description":"How to test scans with different versions of Semgrep.","permalink":"/semgrep-docs/kb/semgrep-code/run-specific-version"},{"id":"kb/semgrep-ci/mr-comments-through-gitlab-runner","title":"Receive Semgrep MR comments through a GitLab runner","description":"Set additional environment variables to receive Semgrep MR comments through a GitLab runner.","permalink":"/semgrep-docs/kb/semgrep-ci/mr-comments-through-gitlab-runner"},{"id":"kb/semgrep-ci/scan-monorepo-in-parts","title":"Scanning a monorepo in parts","description":"How to scan a monorepo in parts for better CI performance and clearer findings organization","permalink":"/semgrep-docs/kb/semgrep-ci/scan-monorepo-in-parts"},{"id":"kb/semgrep-ci/ci-vs-cli","title":"Semgrep in CI vs CLI: align your SAST scan results and understand differences","description":"How to align your scan results between CI and CLI and understand differences in behavior.","permalink":"/semgrep-docs/kb/semgrep-ci/ci-vs-cli"},{"id":"kb/semgrep-ci/github-reusable-workflows-semgrep","title":"Set up reusable GitHub workflows for Semgrep scans","description":"Learn how to set up reusable GitHub workflows for Semgrep scans.","permalink":"/semgrep-docs/kb/semgrep-ci/github-reusable-workflows-semgrep"},{"id":"kb/semgrep-ci/why-duplicate-findings","title":"Why are duplicate findings appearing after running Semgrep in CI?","description":"To prevent duplicated findings, perform full scans only on the main branch of your repository.","permalink":"/semgrep-docs/kb/semgrep-ci/why-duplicate-findings"},{"id":"kb/semgrep-ci/new-scm-connections","title":"Why are there new source code manager (SCM) connections that I didn\'t manually configure listed in Semgrep AppSec Platform?","description":"Learn why there are new SCMs listed in Semgrep AppSec Platform.","permalink":"/semgrep-docs/kb/semgrep-ci/new-scm-connections"},{"id":"kb/semgrep-ci/github-upload-findings-in-security-dashboard","title":"Why aren\'t findings populating in the GitHub Advanced Security Dashboard after running Semgrep in CI?","description":"To prevent \\"resource not accessible by integration\\" error when running job to upload findings to GitHub\'s Advanced Security Dashboard","permalink":"/semgrep-docs/kb/semgrep-ci/github-upload-findings-in-security-dashboard"},{"id":"kb/semgrep-appsec-platform/inline-pr-comments","title":"Why did the comments on a PR or MR not appear inline?","description":"When Semgrep comments on PR or MR findings, the comments are usually posted on the line of code where the finding is identified (inline). However, there are two common reasons why comments may not appear inline.","permalink":"/semgrep-docs/kb/semgrep-appsec-platform/inline-pr-comments"},{"id":"kb/semgrep-appsec-platform/missing-pr-comments","title":"Why is my repository not receiving PR or MR comments?","description":"Use this reference to check why you may not be receiving Semgrep comments on PRs or MRs.","permalink":"/semgrep-docs/kb/semgrep-appsec-platform/missing-pr-comments"}],"unlisted":false}}')}}]);