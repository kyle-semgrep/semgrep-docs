"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[4434],{28453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>a});var l=n(96540);const i={},s=l.createContext(i);function o(e){const r=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),l.createElement(s.Provider,{value:r},e.children)}},34894:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>t,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>u});const l=JSON.parse('{"id":"kb/rules/run-all-available-rules","title":"Run all available rules on a repository","description":"Learn how to run all available rules on your repository.","source":"@site/docs/kb/rules/run-all-available-rules.md","sourceDirName":"kb/rules","slug":"/kb/rules/run-all-available-rules","permalink":"/docs/kb/rules/run-all-available-rules","draft":false,"unlisted":false,"editUrl":"https://github.com/kyle-semgrep/semgrep-docs/edit/main?base=kyle-semgrep:main/docs/kb/rules/run-all-available-rules.md","tags":[{"inline":true,"label":"Rules","permalink":"/docs/tags/rules"},{"inline":true,"label":"Semgrep Registry","permalink":"/docs/tags/semgrep-registry"},{"inline":true,"label":"Semgrep Code","permalink":"/docs/tags/semgrep-code"}],"version":"current","lastUpdatedAt":1752253235000,"frontMatter":{"description":"Learn how to run all available rules on your repository.","tags":["Rules","Semgrep Registry","Semgrep Code"],"append_help_link":true},"sidebar":"kbSidebar","previous":{"title":"Why do new rules keep appearing in Comment or Block mode?","permalink":"/docs/kb/rules/ruleset-default-mode"},"next":{"title":"How does Semgrep assign severity levels to rules?","permalink":"/docs/kb/rules/understand-severities"}}');var i=n(74848),s=n(28453);const o={description:"Learn how to run all available rules on your repository.",tags:["Rules","Semgrep Registry","Semgrep Code"],append_help_link:!0},a="Run all available rules on a repository",t={},u=[{value:"Error: &quot;invalid configuration file found&quot;",id:"error-invalid-configuration-file-found",level:2}];function d(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"run-all-available-rules-on-a-repository",children:"Run all available rules on a repository"})}),"\n",(0,i.jsxs)(r.p,{children:["To scan your repository with all of the rules available in the ",(0,i.jsx)(r.a,{href:"https://semgrep.dev/explore",children:"Semgrep Registry"}),", navigate to the root of your repository and run:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"semgrep --config=r/all .\n"})}),"\n",(0,i.jsxs)(r.p,{children:["If you are ",(0,i.jsx)(r.em,{children:"not"})," logged in, ",(0,i.jsx)(r.code,{children:"--config=r/all"})," runs all public rules from the Semgrep Registry, including community-authored rules."]}),"\n",(0,i.jsxs)(r.p,{children:["If you are logged in, ",(0,i.jsx)(r.code,{children:"--config=r/all"})," runs all public rules from the Semgrep Registry, including community-authored rules, plus:"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Your organization's private rules in the Registry, excluding unlisted private rules","\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"This excludes unlisted private rules"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(r.li,{children:"Semgrep Pro rules, if you have a Team or Enterprise subscription"}),"\n"]}),"\n",(0,i.jsx)(r.admonition,{type:"warning",children:(0,i.jsx)(r.p,{children:"Running all rules is likely to produce many findings and generate noise in the form of false positives."})}),"\n",(0,i.jsx)(r.h2,{id:"error-invalid-configuration-file-found",children:'Error: "invalid configuration file found"'}),"\n",(0,i.jsx)(r.p,{children:"If you encounter the following error, there is a syntax error in one of your custom rules."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-console",children:"[ERROR] invalid configuration file found (1 configs were invalid)\n"})}),"\n",(0,i.jsx)(r.p,{children:"To work around this error, while you correct the issues in the affected configuration file, run:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"semgrep --config r/all . -d\nsemgrep --config ~/.semgrep/semgrep_rules.json .\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The first command creates a cache of rules in ",(0,i.jsx)(r.code,{children:"semgrep_rules.json"})," within the ",(0,i.jsx)(r.code,{children:".semgrep"})," directory in your home folder that omits the invalid rule. The second command runs a Semgrep scan using the local rule cache."]})]})}function c(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);