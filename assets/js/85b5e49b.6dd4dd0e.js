"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[88931],{11711:(e,n,i)=>{i.d(n,{Ay:()=>d,RM:()=>t});var s=i(74848),r=i(28453);const t=[];function o(e){const n={em:"em",img:"img",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Semgrep findings are typically posted in your PR or MR. The following image displays the parts of a Semgrep PR comment in GitHub; this example appears in a similar form in GitLab and other SCMs:"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.img,{alt:"An example of a PR comment with various sections annotated.",src:i(17710).A+"#md-width",width:"1316",height:"1670"}),"\n",(0,s.jsxs)(n.em,{children:[(0,s.jsx)(n.strong,{children:"Figure"}),". An example of a PR comment with various sections annotated."]})]}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"A - Block indicator"}),(0,s.jsx)("dd",{children:"This appears if a finding fails the CI job. Organizations typically block PRs or MRs with failed jobs."}),(0,s.jsx)("dt",{children:"B - Finding description"}),(0,s.jsxs)("dd",{children:["A human-written description always appears in a PR or MR comment, describing why your code is flagged. ",(0,s.jsx)(n.strong,{children:"References"})," may also be included to help you learn more about the finding."]}),(0,s.jsx)("dt",{children:"C - Dataflow graph"}),(0,s.jsxs)("dd",{children:["Some Code findings have a dataflow graph, which indicates that the finding was detected through ",(0,s.jsx)("a",{href:"/docs/writing-rules/glossary#taint-analysis",children:"taint analysis"}),". The dataflow graph provides the lines of code identifying sources, sinks, and traces of unsanitized data flowing through your program. You can click the links on the boxes to take you to the lines of code."]}),(0,s.jsx)("dt",{children:"D - Resolution or remediation section"}),(0,s.jsxs)("dd",{children:["Various options are provided to help your resolve the finding. Depending on the ",(0,s.jsx)("a",{href:"#type-of-findings-by-resolution",children:"type of finding"}),", resolution options may vary."]}),(0,s.jsx)("dt",{children:"E - Ignore instructions"}),(0,s.jsx)("dd",{children:"Click to view instructions about how to ignore the finding by replying to the comment."})]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},17710:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/dataflow-graph-comment-ab14b5c2e56fdb5d5ec3b549e4a19b41.png"},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>d});var s=i(96540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}},46716:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/ai-assessment-tp-fp-05bcf0049a441a1a4c8a1c905ae190d6.png"},74920:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/pr-comment-triage-response-28597fb003b04c21f57912ad9f11802a.png"},78552:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/comment-with-ai-fix-86248efcb10ba15ea007ba8bbc506675.png"},81273:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/semgrep-app-comment-github-beta-60a515fe87feaa9d54a84c22cb8c7971.png"},90422:(e,n,i)=>{i.d(n,{Ay:()=>d,RM:()=>t});var s=i(74848),r=i(28453);const t=[{value:"Removed findings",id:"removed-findings",level:3},{value:"Triage behavior across refs and branches",id:"triage-behavior-across-refs-and-branches",level:3}];function o(e){const n={a:"a",code:"code",em:"em",h3:"h3",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Status"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Open"})}),(0,s.jsx)(n.td,{children:"Findings are open by default. A finding is open if it was present the last time Semgrep scanned the code and has not been ignored. An open finding represents a match between the code and a rule enabled in the repository. Open findings require action, such as rewriting the code to eliminate the detected vulnerability."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Reviewing"})}),(0,s.jsx)(n.td,{children:"Indicates that the finding requires investigation to determine what the next steps in the triage process should be."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Fixing"})}),(0,s.jsx)(n.td,{children:"Findings for which you have decided to fix. Commonly used to indicate that these findings are tracked in Jira or assigned to developers for further work."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Fixed"})}),(0,s.jsx)(n.td,{children:"Fixed findings were detected in a previous scan but are no longer detected in the most recent scan of that same branch due to changes in the code."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Ignored"})}),(0,s.jsxs)(n.td,{children:["Findings that are ignored are present in the code but have been labeled as unimportant. Ignore findings that are false positives or deprioritized issues. Mark findings as ",(0,s.jsx)(n.a,{href:"/semgrep-code/triage-remediation",children:"ignored through Semgrep AppSec Platform"})," or by adding a ",(0,s.jsx)(n.a,{href:"/ignoring-files-folders-code/#reference-summary",children:"nosemgrep code comment"}),". You can also provide a reason for why you are ignoring a finding: ",(0,s.jsx)(n.strong,{children:"False positive"}),", ",(0,s.jsx)(n.strong,{children:"Acceptable risk"}),", ",(0,s.jsx)(n.strong,{children:"No time to fix"}),"."]})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"removed-findings",children:"Removed findings"}),"\n",(0,s.jsxs)(n.p,{children:["Findings can also be ",(0,s.jsx)(n.strong,{children:"removed"}),". Semgrep considers a finding removed if it is not found in the most recent scan of the branch where Semgrep initially detected it due to any of the following conditions:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The rule that detected the finding isn't enabled in the policy anymore."}),"\n",(0,s.jsx)(n.li,{children:"The rule that detected the finding was updated such that it no longer detects the finding."}),"\n",(0,s.jsxs)(n.li,{children:["The file path where the finding appeared is no longer found. The file path was deleted, renamed, added to a ",(0,s.jsx)(n.code,{children:".semgrepignore"})," file, added to a ",(0,s.jsx)(n.code,{children:".gitignore"})," file, or added to the list of ignored paths in Semgrep AppSec Platform."]}),"\n",(0,s.jsx)(n.li,{children:"For GitHub organization accounts: the PR or MR where the finding was detected has been closed without merging."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Your removed findings do not count toward the fix rate or the number of findings. The removed findings also do not appear in Semgrep AppSec Platform."}),"\n",(0,s.jsx)(n.h3,{id:"triage-behavior-across-refs-and-branches",children:"Triage behavior across refs and branches"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["When you triage a finding as ignored, reviewing, fixing, or reopened, Semgrep always triages across other branches and ",(0,s.jsx)(n.a,{href:"https://git-scm.com/book/en/v2/Git-Internals-Git-References",children:"Git references"})," (refs)."]}),"\n",(0,s.jsxs)(n.li,{children:["At scan time, there's automatic triaging that occurs in specific cases, and the behavior changes depending on the type of scan:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Full scans"}),": if the current branch includes a finding that was","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Previously introduced in another branch ",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"and"})})]}),"\n",(0,s.jsx)(n.li,{children:"Triaged to a specific state\nThen the finding in the current branch is triaged to that same state."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Diff-aware scan"}),": findings introduced in a diff-aware scan are ",(0,s.jsx)(n.strong,{children:"not"})," automatically triaged at scan time, even if there are other instances of that finding on branches that have been triaged."]}),"\n"]}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},92914:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/pr-comment-autofix-c902c853dfc541efeec9b69e6a3726ca.png"},95011:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"for-developers/resolve-findings-through-comments","title":"Resolve findings in your pull request or merge request","description":"Learn to resolve or triage Semgrep findings through PR or MR comments.","source":"@site/docs/for-developers/resolve-findings-through-comments.md","sourceDirName":"for-developers","slug":"/for-developers/resolve-findings-through-comments","permalink":"/semgrep-docs/for-developers/resolve-findings-through-comments","draft":false,"unlisted":false,"editUrl":"https://github.com/kyle-semgrep/semgrep-docs/edit/main/docs/for-developers/resolve-findings-through-comments.md","tags":[{"inline":true,"label":"Developer education","permalink":"/semgrep-docs/tags/developer-education"}],"version":"current","lastUpdatedAt":1753214405000,"frontMatter":{"slug":"resolve-findings-through-comments","title":"Resolve findings in your pull request or merge request","hide_title":true,"description":"Learn to resolve or triage Semgrep findings through PR or MR comments.","tags":["Developer education"]},"sidebar":"devSidebar","previous":{"title":"Sign in to Semgrep","permalink":"/semgrep-docs/for-developers/signin"},"next":{"title":"Resolve findings through the Semgrep web app","permalink":"/semgrep-docs/for-developers/resolve-findings-through-app"}}');var r=i(74848),t=i(28453),o=i(90422),d=i(11711);const a={slug:"resolve-findings-through-comments",title:"Resolve findings in your pull request or merge request",hide_title:!0,description:"Learn to resolve or triage Semgrep findings through PR or MR comments.",tags:["Developer education"]},l="Resolve findings in your pull request or merge request",c={},h=[{value:"Prerequisites and optional features",id:"prerequisites-and-optional-features",level:2},{value:"Parts of a PR or MR comment",id:"parts-of-a-pr-or-mr-comment",level:2},...d.RM,{value:"Resolve findings",id:"resolve-findings",level:2},{value:"Autofix",id:"autofix",level:3},{value:"Semgrep Assistant remediations",id:"semgrep-assistant-remediations",level:3},{value:"Ignore findings",id:"ignore-findings",level:2},{value:"Re-run a job or workflow",id:"re-run-a-job-or-workflow",level:3},{value:"Appendix: triage statuses",id:"appendix-triage-statuses",level:2},...o.RM];function g(e){const n={a:"a",admonition:"admonition",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"resolve-findings-in-your-pull-request-or-merge-request",children:"Resolve findings in your pull request or merge request"})}),"\n",(0,r.jsxs)(n.p,{children:["Findings resolution involves the assessment of a finding, then either fixing or ignoring it. You can fix or triage findings from your source code manager (SCM); fixing or triaging (ignoring) does ",(0,r.jsx)(n.strong,{children:"not"})," require a Semgrep AppSec Platform account."]}),"\n",(0,r.jsxs)(n.p,{children:["Findings are primarily presented to developers through ",(0,r.jsx)(n.strong,{children:"pull request (PR) or merge request (MR) comments"}),". These findings are generated from rules that your AppSec team has vetted or approved."]}),"\n",(0,r.jsxs)(n.p,{children:["Findings from these rules are meant to be ",(0,r.jsx)(n.strong,{children:"fixed"})," or ",(0,r.jsx)(n.strong,{children:"remediated"})," rather than ignored unless the finding is a false positive."]}),"\n",(0,r.jsxs)(n.p,{children:["In ",(0,r.jsx)(n.strong,{children:"typical coding workflows"}),", it is recommended to fix or ignore findings as part of your ",(0,r.jsx)(n.strong,{children:"code review"})," process; the results of triage or remediation in your SCM are synchronized with Semgrep AppSec Platform."]}),"\n",(0,r.jsxs)(n.p,{children:["However, if you have accumulated many findings to ignore, it may be faster to perform bulk triage actions in Semgrep AppSec Platform. See ",(0,r.jsx)(n.a,{href:"/for-developers/resolve-findings-through-app",children:"Resolve findings through the Semgrep web app"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites-and-optional-features",children:"Prerequisites and optional features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The procedures described in this guide rely on PR or MR comments. Ensure that your security team has enabled this feature."}),"\n",(0,r.jsxs)(n.li,{children:["To receive AI-assisted remediation, your security team must enable the ",(0,r.jsx)(n.strong,{children:"Semgrep Assistant"})," feature."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Your SCM is the most common environment in which to fix findings. Semgrep provides several features to help you fix findings quickly."}),"\n",(0,r.jsx)(n.h2,{id:"parts-of-a-pr-or-mr-comment",children:"Parts of a PR or MR comment"}),"\n",(0,r.jsx)(d.Ay,{}),"\n",(0,r.jsx)(n.h2,{id:"resolve-findings",children:"Resolve findings"}),"\n",(0,r.jsx)(n.p,{children:"Different types of findings require different remediations. The following sections describe how Semgrep can help you resolve a finding."}),"\n",(0,r.jsx)(n.h3,{id:"autofix",children:"Autofix"}),"\n",(0,r.jsxs)(n.p,{children:["Some Semgrep Code findings provide an ",(0,r.jsx)(n.strong,{children:"autofix"}),", which can be human-written or generated by Semgrep Assistant. The fix can be committed directly, such as by clicking ",(0,r.jsx)(n.strong,{children:"Commit suggestion"})," in GitHub repositories. This is the fastest way to fix a finding."]}),"\n",(0,r.jsx)(n.p,{children:"All Semgrep-supported SCMs provide this feature."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"GitHub PR comment with fix suggestion.",src:i(92914).A+"#md-width",width:"992",height:"670"}),"\n",(0,r.jsxs)(n.em,{children:[(0,r.jsx)(n.strong,{children:"Figure"}),". GitHub enables you to commit the suggestion from Semgrep directly, fixing the finding."]})]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["If a line of code contains several findings, Semgrep does not provide the autofix or ",(0,r.jsx)(n.strong,{children:"Commit suggestion"})," feature to prevent fixes from conflicting."]})}),"\n",(0,r.jsx)(n.h3,{id:"semgrep-assistant-remediations",children:"Semgrep Assistant remediations"}),"\n",(0,r.jsx)(n.p,{children:"Semgrep Assistant provides the following AI-powered security recommendations:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Step-by-step instructions."}),"\n",(0,r.jsx)(n.li,{children:"AI-written code fixes if a human-written autofix is not available and a code fix can resolve the finding."}),"\n",(0,r.jsx)(n.li,{children:'"Safe to ignore" suggestions.'}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"PR comment with an AI-written fix.",src:i(78552).A+"#md-width",width:"1516",height:"1500"}),"\n",(0,r.jsxs)(n.em,{children:[(0,r.jsx)(n.strong,{children:"Figure"}),". PR comment with an AI-written fix and step-by-step instructions."]})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"Semgrep Assistant suggesting that a finding is safe to ignore.",src:i(46716).A+"#md-width",width:"1607",height:"1288"}),"\n",(0,r.jsxs)(n.em,{children:[(0,r.jsx)(n.strong,{children:"Figure"}),". Semgrep Assistant suggesting that a finding is safe to ignore."]})]}),"\n",(0,r.jsx)(n.h2,{id:"ignore-findings",children:"Ignore findings"}),"\n",(0,r.jsxs)(n.p,{children:["If the finding is a false positive, acceptable risk, or similar, you can choose to ignore the finding. You can ignore findings directly from your SCM by ",(0,r.jsx)(n.strong,{children:"replying"})," to the finding comment."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Find an open comment created by Semgrep AppSec Platform in your pull request or merge request:\n",(0,r.jsx)(n.img,{alt:"Screenshot of Semgrep AppSec Platform comment in GitHub",src:i(81273).A+"#md-width",width:"1254",height:"621"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["In a subsequent comment, reply with the action you want to take. You must provide a ",(0,r.jsx)(n.strong,{children:"reason"})," to help the reader understand why the finding has been triaged as ",(0,r.jsx)(n.strong,{children:"ignored"}),":"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Comment"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsxs)("code",{children:["/fp ",(0,r.jsx)("span",{className:"placeholder",children:"<REASON>"})]})}),(0,r.jsxs)(n.td,{children:["Triage a finding as ",(0,r.jsx)(n.strong,{children:"Ignored"})," with the triage reason ",(0,r.jsx)(n.strong,{children:"false positive"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsxs)("code",{children:["/ar ",(0,r.jsx)("span",{className:"placeholder",children:"<REASON>"})]})}),(0,r.jsxs)(n.td,{children:["Triage a finding as ",(0,r.jsx)(n.strong,{children:"Ignored"})," with the triage reason ",(0,r.jsx)(n.strong,{children:"acceptable risk"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsxs)("code",{children:["/other ",(0,r.jsx)("span",{className:"placeholder",children:"<REASON>"})]})}),(0,r.jsxs)(n.td,{children:["Triage a finding as ",(0,r.jsx)(n.strong,{children:"Ignored"})," without specifying the reason; the triage reason value is set to ",(0,r.jsx)(n.strong,{children:"No triage reason"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsxs)("code",{children:["/open ",(0,r.jsx)("span",{className:"placeholder",children:"<REASON>"})]})}),(0,r.jsxs)(n.td,{children:["Reopen a finding that has been triaged as ",(0,r.jsx)(n.strong,{children:"Ignored"}),". The comment is optional."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsxs)("code",{children:["/remember ",(0,r.jsx)("span",{className:"placeholder",children:"<REASON>"})]})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.a,{href:"/semgrep-assistant/customize#add-memories",children:"Add Assistant Memories"}),"."]})]})]})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"A completed triage flow.",src:i(74920).A+"#md-width",width:"1356",height:"1450"}),"\n",(0,r.jsxs)(n.em,{children:[(0,r.jsx)(n.strong,{children:"Figure"}),". A completed triage flow."]})]}),"\n",(0,r.jsx)(n.h3,{id:"re-run-a-job-or-workflow",children:"Re-run a job or workflow"}),"\n",(0,r.jsx)(n.p,{children:"After resolving or triaging the findings in your PR or MR, you must re-run the Semgrep job or workflow. See the following list for a link to your CI provider's documentation:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.a,{href:"https://docs.github.com/en/actions/managing-workflow-runs-and-deployments/managing-workflow-runs/re-running-workflows-and-jobs",children:[(0,r.jsx)("i",{class:"fas fa-external-link fa-xs"})," Re-run a job in GitHub Actions"]})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.a,{href:"https://docs.gitlab.com/ee/ci/pipelines/#view-pipelines",children:[(0,r.jsx)("i",{class:"fas fa-external-link fa-xs"})," View pipelines in GitLab CI/CD"]})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.a,{href:"https://support.atlassian.com/bitbucket-cloud/docs/view-your-pipeline/#Viewyourpipeline-CI_RerunStep",children:[(0,r.jsx)("i",{class:"fas fa-external-link fa-xs"})," View your pipeline in Bitbucket Pipelines"]})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.a,{href:"https://learn.microsoft.com/en-us/azure/devops/release-notes/2024/pipelines/sprint-235-update",children:[(0,r.jsx)("i",{class:"fas fa-external-link fa-xs"})," Re-run a single stage in Azure DevOps"]})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.a,{href:"https://www.jenkins.io/doc/book/pipeline/running-pipelines/#restarting-or-rerunning-a-pipeline",children:[(0,r.jsx)("i",{class:"fas fa-external-link fa-xs"})," Restarting or rerunning a pipeline in Jenkins"]})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.a,{href:"https://circleci.com/docs/rerun-failed-tests/",children:[(0,r.jsx)("i",{class:"fas fa-external-link fa-xs"})," Re-run a job in CircleCI"]})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.a,{href:"https://buildkite.com/resources/changelog/231-retry-failed-jobs-while-builds-are-running/",children:[(0,r.jsx)("i",{class:"fas fa-external-link fa-xs"})," ",(0,r.jsx)(n.strong,{children:"Retry a job"})]})," from the ",(0,r.jsx)(n.a,{href:"https://buildkite.com/docs/pipelines/dashboard-walkthrough",children:(0,r.jsx)(n.strong,{children:"Dashboard > Build view"})})," in Buildkite."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"appendix-triage-statuses",children:"Appendix: triage statuses"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Click to view all triage statuses."}),(0,r.jsx)(o.Ay,{})]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}}}]);