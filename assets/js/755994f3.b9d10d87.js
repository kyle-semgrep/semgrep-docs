"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[33983],{20571:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"deployment/customize-ci-jobs","title":"Customize CI jobs","description":"Customize your CI job to fit your organization\'s workflows.","source":"@site/docs/deployment/customize-ci-jobs.md","sourceDirName":"deployment","slug":"/deployment/customize-ci-jobs","permalink":"/semgrep-docs/deployment/customize-ci-jobs","draft":false,"unlisted":false,"editUrl":"https://github.com/kyle-semgrep/semgrep-docs/edit/main/docs/deployment/customize-ci-jobs.md","tags":[{"inline":true,"label":"Deployment","permalink":"/semgrep-docs/tags/deployment"}],"version":"current","lastUpdatedAt":1752504841000,"frontMatter":{"slug":"customize-ci-jobs","title":"Customize CI jobs","hide_title":true,"description":"Customize your CI job to fit your organization\'s workflows.","tags":["Deployment"]},"sidebar":"scanSidebar","previous":{"title":"Add Semgrep to other CI providers","permalink":"/semgrep-docs/deployment/add-semgrep-to-other-ci-providers"},"next":{"title":"Configure blocking findings","permalink":"/semgrep-docs/semgrep-ci/configuring-blocking-and-errors-in-ci"}}');var t=s(74848),i=s(28453),o=(s(47445),s(37658));s(47136);const c={slug:"customize-ci-jobs",title:"Customize CI jobs",hide_title:!0,description:"Customize your CI job to fit your organization's workflows.",tags:["Deployment"]},a="Customize your CI job",l={},d=[{value:"Set up diff-aware scans",id:"set-up-diff-aware-scans",level:2},{value:"Set a scan schedule",id:"set-a-scan-schedule",level:2},...o.RM,{value:"Set a custom timeout",id:"set-a-custom-timeout",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"customize-your-ci-job",children:"Customize your CI job"})}),"\n",(0,t.jsx)(n.admonition,{title:"Your deployment journey",type:"note",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You have gained the necessary ",(0,t.jsx)(n.a,{href:"/deployment/checklist",children:"resource access and permissions"})," required for deployment."]}),"\n",(0,t.jsxs)(n.li,{children:["You have ",(0,t.jsx)(n.a,{href:"/deployment/create-account-and-orgs",children:"created a Semgrep account and organization"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["For GitHub and GitLab users: You have ",(0,t.jsx)(n.a,{href:"/deployment/connect-scm",children:"connected your source code manager"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Optionally, you have ",(0,t.jsx)(n.a,{href:"/deployment/sso",children:"set up SSO"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["You have successfully added a ",(0,t.jsx)(n.a,{href:"/deployment/add-semgrep-to-ci",children:"Semgrep job"})," to your CI workflow."]}),"\n"]})}),"\n",(0,t.jsx)(n.p,{children:"Customize your CI job to achieve the following goals:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Run Semgrep on a schedule"}),". Run full scans on main or trunk branches at the least intrusive time on developer teams."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Run Semgrep when an event triggers"}),". Run Semgrep when a pull request or merge request (PR or MR) is created."]}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Set a timeout to increase or decrease Semgrep's overall runtime."})," If scans are taking too long, or rules aren't running, customize your per-rule timeout."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"set-up-diff-aware-scans",children:"Set up diff-aware scans"}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.p,{children:"Follow the steps in this section only for the following CI providers:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Jenkins"}),"\n",(0,t.jsx)(n.li,{children:"CI providers without guidance from Semgrep AppSec Platform"}),"\n"]})]}),"\n",(0,t.jsxs)(n.p,{children:["Some Semgrep CI jobs require manual configuration of ",(0,t.jsx)(n.a,{href:"/semgrep-code/glossary#diff-aware-scan",children:"diff-aware scans"}),", which scan pull requests or merge requests in feature branches. For the CI providers outlined in the preceding list, you can configure a diff-aware job by performing the following steps:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Create a separate CI job following the steps in ",(0,t.jsx)(n.a,{href:"/deployment/add-semgrep-to-ci/#add-semgrep-to-ci-1",children:"Add Semgrep to CI through Semgrep AppSec Platform"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Set the ",(0,t.jsx)(n.code,{children:"SEMGREP_BASELINE_REF"})," variable in your CI configuration file. The value of this environment variable is typically your trunk branch, such as ",(0,t.jsx)(n.code,{children:"main"})," or ",(0,t.jsx)(n.code,{children:"master"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"set-a-scan-schedule",children:"Set a scan schedule"}),"\n",(0,t.jsx)(o.Ay,{}),"\n",(0,t.jsx)(n.h2,{id:"set-a-custom-timeout",children:"Set a custom timeout"}),"\n",(0,t.jsxs)(n.p,{children:["By default, Semgrep spends a maximum of ",(0,t.jsx)(n.strong,{children:"5 seconds"})," to scan with ",(0,t.jsx)(n.strong,{children:"each rule"})," on each ",(0,t.jsx)(n.a,{href:"/semgrep-code/glossary#scan-target",children:"targeted"})," file. To ",(0,t.jsx)(n.strong,{children:"set a different timeout"}),", set the ",(0,t.jsx)(n.code,{children:"SEMGREP_TIMEOUT"})," environment variable (the value is in seconds). Decreasing this value speeds up your scans, but with the possibility of skipping some rules. Alternatively, increasing this value ensures that your most complex rules finish running. For example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'SEMGREP_TIMEOUT="3" # Sets the per-rule timeout to 3 seconds.\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["Setting this variable to ",(0,t.jsx)(n.strong,{children:"0"})," removes the time limit, meaning that rules can take any amount of time to run. This is not recommended."]})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var r=s(96540);const t={},i=r.createContext(t);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(i.Provider,{value:n},e.children)}},37658:(e,n,s)=>{s.d(n,{Ay:()=>c,RM:()=>i});var r=s(74848),t=s(28453);const i=[];function o(e){const n={a:"a",code:"code",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"The following table is a summary of methods and resources to set up schedules for different CI providers."}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"CI provider"}),(0,r.jsx)(n.th,{children:"Where to set schedule"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"GitHub Actions"}),(0,r.jsxs)(n.td,{children:["See ",(0,r.jsx)(n.a,{href:"/semgrep-ci/sample-ci-configs#sample-github-actions-configuration-file",children:"Sample CI configs"})," for information on how to modify your ",(0,r.jsx)(n.code,{children:"semgrep.yml"})," file"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"GitLab CI/CD"}),(0,r.jsxs)(n.td,{children:["Refer to ",(0,r.jsx)(n.a,{href:"https://docs.gitlab.com/ee/ci/pipelines/schedules.html",children:"GitLab documentation"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Jenkins"}),(0,r.jsxs)(n.td,{children:["Refer to ",(0,r.jsx)(n.a,{href:"https://www.jenkins.io/doc/book/pipeline/running-pipelines/#scheduling-jobs-in-jenkins",children:"Jenkins documentation"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Bitbucket Pipelines"}),(0,r.jsxs)(n.td,{children:["Refer to ",(0,r.jsx)(n.a,{href:"https://support.atlassian.com/bitbucket-cloud/docs/pipeline-triggers/",children:"Bitbucket documentation"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CircleCI"}),(0,r.jsxs)(n.td,{children:["Refer to ",(0,r.jsx)(n.a,{href:"https://circleci.com/docs/scheduled-pipelines#get-started-with-scheduled-pipelines-in-circleci",children:"CircleCI documentation"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Buildkite"}),(0,r.jsxs)(n.td,{children:["Refer to ",(0,r.jsx)(n.a,{href:"https://buildkite.com/docs/pipelines/scheduled-builds",children:"Buildkite documentation"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Azure Pipelines"}),(0,r.jsxs)(n.td,{children:["Refer to ",(0,r.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/azure/devops/pipelines/process/scheduled-triggers?view=azure-devops&tabs=yaml",children:"Azure documentation"})]})]})]})]})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},47136:(e,n,s)=>{s.d(n,{Ay:()=>c,RM:()=>i});var r=s(74848),t=s(28453);const i=[];function o(e){const n={a:"a",admonition:"admonition",li:"li",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsx)(n.admonition,{title:"Your deployment journey",type:"note",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["You have gained the necessary ",(0,r.jsx)(n.a,{href:"/deployment/checklist",children:"resource access and permissions"})," required for deployment."]}),"\n",(0,r.jsxs)(n.li,{children:["You have ",(0,r.jsx)(n.a,{href:"/deployment/create-account-and-orgs",children:"created a Semgrep account and organization"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["You have ",(0,r.jsx)(n.a,{href:"/deployment/connect-scm",children:"connected your source code manager"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Optionally, you have ",(0,r.jsx)(n.a,{href:"/deployment/sso",children:"set up SSO"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["You have successfully added a ",(0,r.jsx)(n.a,{href:"/deployment/add-semgrep-to-ci",children:"Semgrep job"})," to your CI workflow with ",(0,r.jsx)(n.a,{href:"/deployment/customize-ci-jobs/#set-up-diff-aware-scans",children:"diff-aware scanning"}),"."]}),"\n"]})})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},47445:(e,n,s)=>{s.d(n,{Ay:()=>c,RM:()=>i});var r=s(74848),t=s(28453);const i=[];function o(e){const n={p:"p",strong:"strong",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Semgrep scans can be classified by ",(0,r.jsx)(n.strong,{children:"scope"}),". The scope of a scan refers to what lines of code are scanned in a codebase. When classifying scans by scope, there are two types of scans:"]}),"\n",(0,r.jsxs)("dl",{children:[(0,r.jsx)("dt",{children:"Full scan"}),(0,r.jsx)("dd",{children:(0,r.jsx)("p",{children:(0,r.jsxs)(n.p,{children:["A full scan runs on your entire codebase and reports every finding in the\ncodebase. It is recommended to perform a full scan of your default branch,\nsuch as ",(0,r.jsx)("code",{children:"main"})," or ",(0,r.jsx)("code",{children:"master"})," at a regular cadence,\nsuch as every night or every week. This ensures that Semgrep AppSec\nPlatform has a full list of all findings in your code base, regardless of\nwhen they were introduced. To run a full scan, run ",(0,r.jsx)("code",{children:"semgrep ci"})," ","\nwithout setting the ",(0,r.jsx)("code",{children:"SEMGREP_BASELINE_REF"})," environment\nvariable. Full scans are triggered at a scheduled time, when the"," ","\n",(0,r.jsx)("code",{children:"semgrep.yml"})," file is edited, or manually by a user."]})})}),(0,r.jsx)("dt",{children:"Diff-aware scan"}),(0,r.jsxs)("dd",{children:[(0,r.jsx)("p",{children:(0,r.jsx)(n.p,{children:'A diff-aware scan runs on your code before and after some "baseline" and\nonly reports findings that are newly introduced in the commits after that\nbaseline. Typically, Semgrep runs diff-aware scans upon the creation of a\nnew pull request or merge request.'})}),(0,r.jsx)("p",{children:(0,r.jsxs)(n.p,{children:["For example, imagine a hypothetical repository with 10 commits. You set\ncommit number 8 as the baseline. Consequently, Semgrep only returns scan\nresults introduced by changes in commits 9 and 10. This is how"," ","\n",(0,r.jsx)("code",{children:"semgrep ci"})," can run in pull requests and merge requests, since\nit reports only the findings that are created by those code changes."]})}),(0,r.jsx)("p",{children:(0,r.jsxs)(n.p,{children:["To run a diff-aware scan, use ",(0,r.jsxs)("code",{children:["SEMGREP_BASELINE_REF=",(0,r.jsx)("span",{class:"placeholder",children:"REF "}),"semgrep ci"]}),"\nwhere ",(0,r.jsx)("span",{class:"placeholder",children:"REF"})," can be a commit hash, branch\nname, or other Git reference. Note that the ",(0,r.jsx)("code",{children:"SEMGREP_BASELINE_REF"}),"\ndoes not apply to GitHub Actions and GitLab CI/CD environments. This variable\ncannot be set to turn a diff-aware scan in GitHub Actions or GitLab CI/CD into\na full scan."]})})]})]})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);