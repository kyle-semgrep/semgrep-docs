"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[57318],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(96540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}},72456:e=>{e.exports=JSON.parse('{"permalink":"/semgrep-docs/release-notes/may-2021","source":"@site/release-notes/may-2021.md","title":"May 2021","description":"Release notes include the changes, fixes, and additions in specific versions of Semgrep.","date":"2021-05-30T10:00:00.000Z","tags":[{"inline":true,"label":"Release notes","permalink":"/semgrep-docs/release-notes/tags/release-notes"}],"readingTime":1.965,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"May 2021","slug":"may-2021","append_help_link":true,"hide_title":true,"description":"Release notes include the changes, fixes, and additions in specific versions of Semgrep.","toc_max_heading_level":3,"tags":["Release notes"],"hide_table_of_contents":false,"date":"2021-05-30T10:00"},"unlisted":false,"prevItem":{"title":"June 2021","permalink":"/semgrep-docs/release-notes/june-2021"},"nextItem":{"title":"April 2021","permalink":"/semgrep-docs/release-notes/april-2021"}}')},98114:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var i=s(72456),t=s(74848),r=s(28453);const l={title:"May 2021",slug:"may-2021",append_help_link:!0,hide_title:!0,description:"Release notes include the changes, fixes, and additions in specific versions of Semgrep.",toc_max_heading_level:3,tags:["Release notes"],hide_table_of_contents:!1,date:"2021-05-30T10:00"},o="May 2021",a={authorsImageUrls:[]},d=[{value:"Version 0.52.0",id:"version-0520",level:2},{value:"Additions",id:"additions",level:3},{value:"Fixes",id:"fixes",level:3},{value:"Version 0.51.0",id:"version-0510",level:2},{value:"Additions",id:"additions-1",level:3},{value:"Fixes",id:"fixes-1",level:3},{value:"Changes",id:"changes",level:3},{value:"Version 0.50.1",id:"version-0501",level:2},{value:"Additions",id:"additions-2",level:3},{value:"Fixes",id:"fixes-2",level:3},{value:"Changes",id:"changes-1",level:3},{value:"Removed",id:"removed",level:3}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"The following updates were made to Semgrep in May 2021."}),"\n",(0,t.jsx)(n.h2,{id:"version-0520",children:"Version 0.52.0"}),"\n",(0,t.jsx)(n.p,{children:"This version also includes release notes for Semgrep version 0.53.0."}),"\n",(0,t.jsx)(n.h3,{id:"additions",children:"Additions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Alpha support for C#"}),"\n",(0,t.jsxs)(n.li,{children:["Metavariables match both a constant variable occurrence and that same constant value (",(0,t.jsx)(n.a,{href:"https://github.com/semgrep/semgrep/pull/3058",children:"#3058"}),")"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"fixes",children:"Fixes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"OCaml: fix useless-else false positives by generating appropriate AST for if without an else."}),"\n",(0,t.jsx)(n.li,{children:"JavaScript/TypeScript: Propagate constant definitions without declaration"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"version-0510",children:"Version 0.51.0"}),"\n",(0,t.jsx)(n.h3,{id:"additions-1",children:"Additions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Keep track of and report rule parse time in addition to file parse time"}),"\n",(0,t.jsx)(n.li,{children:"v0 of opt-in, anonymous aggregate metrics"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"fixes-1",children:"Fixes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["JavaScript/TypeScript: allow the deep expression operator ",(0,t.jsx)(n.code,{children:"<... ...>"})," in expression statement position, for example:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\nARG = [$V];\n\n...\n\n<... $O[$ARG] ...>; // this works now\n\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"PHP arrays with dots inside parse"}),"\n",(0,t.jsx)(n.li,{children:"Propagate constants in nested lvalues such as y in x[y]"}),"\n",(0,t.jsx)(n.li,{children:"Experimental support for C#"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"changes",children:"Changes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Show log messages from semgrep-core when running semgrep with --debug"}),"\n",(0,t.jsx)(n.li,{children:"By default, targets larger than 1 MB are now excluded from Semgrep scans. The new option --max-target-bytes 0 restores the previous behavior."}),"\n",(0,t.jsx)(n.li,{children:"Report relative path instead of absolute when using --time"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"version-0501",children:"Version 0.50.1"}),"\n",(0,t.jsx)(n.h3,{id:"additions-2",children:"Additions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["JS/TS: Infer global constants even if the const qualifier is missing (",(0,t.jsx)(n.a,{href:"https://github.com/semgrep/semgrep/pull/2978",children:"#2978"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"PHP: Resolve names and infer global constants in the same way as for Python"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"fixes-2",children:"Fixes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Empty yaml files do not crash"}),"\n",(0,t.jsxs)(n.li,{children:["Autofix does not insert newline characters for patterns from semgrep.live (",(0,t.jsx)(n.a,{href:"https://github.com/semgrep/semgrep/pull/3045",children:"#3045"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Autofix printout is grouped with its own finding rather than the one below it (",(0,t.jsx)(n.a,{href:"https://github.com/semgrep/semgrep/pull/3046",children:"#3046"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Do not assign constant values to assigned variables (",(0,t.jsx)(n.a,{href:"https://github.com/semgrep/semgrep/issues/2805",children:"#2805"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"A --time flag instead of --json-time which shows a summary of the timing information when invoked with normal output and adds a time field to the json output when --json is also present"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"changes-1",children:"Changes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Moved some debug logging to verbose logging"}),"\n",(0,t.jsxs)(n.li,{children:["$...ARGS can now match an empty list of arguments, just like ... (",(0,t.jsx)(n.a,{href:"https://github.com/semgrep/semgrep/issues/3177",children:"#3177"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"JSON and SARIF outputs sort keys for predictable results"}),"\n",(0,t.jsx)(n.li,{children:".git/ directories are ignored when scanning"}),"\n",(0,t.jsx)(n.li,{children:"External Python API (semgrep_main.invoke_semgrep) now takes an optional OutputSettings argument for controlling output"}),"\n",(0,t.jsx)(n.li,{children:"json_time has moved to OutputSettings.output_time, this and many other OutputSettings arguments have been made optional"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"removed",children:"Removed"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--json-time"})," flag in favor of ",(0,t.jsx)(n.code,{children:"--json"})," + ",(0,t.jsx)(n.code,{children:"--time"})]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}}}]);