"use strict";(self.webpackChunkmegadocs=self.webpackChunkmegadocs||[]).push([[8633],{28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var s=i(96540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}},67803:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"contributing/semgrep-contributing","title":"semgrep-cli contributing","description":"The following explains how to build semgrep-cli so that you can make and test changes to the Python wrapper.","source":"@site/docs/contributing/semgrep-contributing.md","sourceDirName":"contributing","slug":"/contributing/semgrep-contributing","permalink":"/semgrep-docs/contributing/semgrep-contributing","draft":false,"unlisted":false,"editUrl":"https://github.com/kyle-semgrep/semgrep-docs/edit/main/docs/contributing/semgrep-contributing.md","tags":[],"version":"current","lastUpdatedAt":1753214405000,"frontMatter":{},"sidebar":"aboutSidebar","previous":{"title":"semgrep-core contributing","permalink":"/semgrep-docs/contributing/semgrep-core-contributing"},"next":{"title":"Add support for a new language","permalink":"/semgrep-docs/contributing/adding-a-language"}}');var r=i(74848),t=i(28453);const o={},c="semgrep-cli contributing",l={},d=[{value:"Prerequisite",id:"prerequisite",level:2},{value:"Set up the environment",id:"set-up-the-environment",level:2},{value:"Get the <code>semgrep-core</code> binary",id:"get-the-semgrep-core-binary",level:2},{value:"The Homebrew shortcut",id:"the-homebrew-shortcut",level:3},{value:"The manual shortcut",id:"the-manual-shortcut",level:3},{value:"Run <code>semgrep-cli</code>",id:"run-semgrep-cli",level:2},{value:"Install <code>semgrep</code>",id:"install-semgrep",level:2},{value:"Add Python packages to <code>semgrep</code>",id:"add-python-packages-to-semgrep",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Testing",id:"testing",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsxs)(n.h1,{id:"semgrep-cli-contributing",children:[(0,r.jsx)(n.code,{children:"semgrep-cli"})," contributing"]})}),"\n",(0,r.jsxs)(n.p,{children:["The following explains how to build ",(0,r.jsx)(n.code,{children:"semgrep-cli"})," so that you can make and test changes to the Python wrapper.\nThe ",(0,r.jsx)(n.code,{children:"semgrep-cli"})," name refers to the project which exposes the actual ",(0,r.jsx)(n.code,{children:"semgrep"})," command.\nYou may want to read the README first to understand the relationship between ",(0,r.jsx)(n.code,{children:"semgrep-cli"})," and ",(0,r.jsx)(n.code,{children:"semgrep-core"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"prerequisite",children:"Prerequisite"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Python >= 3.8 installed in your local machine."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/pypa/pipenv",children:(0,r.jsx)(n.code,{children:"pipenv"})})," for managing your virtual\nenvironment. Install it by following the ",(0,r.jsx)(n.code,{children:"pipenv"})," ",(0,r.jsx)(n.a,{href:"https://pipenv.pypa.io/en/latest/installation.html",children:"documentation"}),". Ensure ",(0,r.jsx)(n.code,{children:"pipenv"})," is on your ",(0,r.jsx)(n.code,{children:"$PATH"})," before proceeding."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"set-up-the-environment",children:"Set up the environment"}),"\n",(0,r.jsxs)(n.p,{children:["Most Python development is done inside the ",(0,r.jsx)(n.code,{children:"cli"})," directory:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd cli\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Next, initialize and enter the virtual environment. The following command installs developer dependencies such as ",(0,r.jsx)(n.code,{children:"pytest"})," and also installs ",(0,r.jsx)(n.code,{children:"semgrep"})," in editable mode in the virtual environment. From the ",(0,r.jsx)(n.code,{children:"cli"})," directory, enter:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pipenv shell\n"})}),"\n",(0,r.jsxs)(n.p,{children:["By convention, your shell prompt is prepended with ",(0,r.jsx)(n.code,{children:"(cli)"})," when the virtual environment is active."]}),"\n",(0,r.jsx)(n.p,{children:"Next, install the Python dependencies:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"SEMGREP_SKIP_BIN=true pipenv install --dev\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"SEMGREP_SKIP_BIN"})," tells the installer that you'll use your own ",(0,r.jsx)(n.code,{children:"semgrep-core"}),"; see below.*"]})}),"\n",(0,r.jsxs)(n.p,{children:["Running ",(0,r.jsx)(n.code,{children:"which semgrep"})," should return a path within your virtual environment. On MacOS, this is likely contained within ",(0,r.jsx)(n.code,{children:"$HOME/.local/share/virtualenvs/"}),"."]}),"\n",(0,r.jsxs)(n.h2,{id:"get-the-semgrep-core-binary",children:["Get the ",(0,r.jsx)(n.code,{children:"semgrep-core"})," binary"]}),"\n",(0,r.jsxs)(n.p,{children:["Almost all usages of ",(0,r.jsx)(n.code,{children:"semgrep-cli"})," require the ",(0,r.jsx)(n.code,{children:"semgrep-core"})," binary.\nTo get this binary, your safest bet is to follow the instructions in ",(0,r.jsxs)(n.a,{href:"/semgrep-docs/contributing/semgrep-core-contributing#building-semgrep-core",children:["Building ",(0,r.jsx)(n.code,{children:"semgrep-core"})]}),", which takes around 20 minutes."]}),"\n",(0,r.jsx)(n.p,{children:"Two shortcuts are available as alternatives, where you use a pre-compiled binary. The downsides of using a pre-compiled binary are:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["You are not able to make edits to ",(0,r.jsx)(n.code,{children:"semgrep-core"}),", for example to fix a parse error."]}),"\n",(0,r.jsxs)(n.li,{children:["Semgrep fails if the interface between ",(0,r.jsx)(n.code,{children:"semgrep-cli"})," and ",(0,r.jsx)(n.code,{children:"semgrep-core"})," has changed since the binary was compiled. This has historically been happening around every two months, but can happen at any time without notice."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"With that in mind, the available shortcuts are:"}),"\n",(0,r.jsx)(n.h3,{id:"the-homebrew-shortcut",children:"The Homebrew shortcut"}),"\n",(0,r.jsxs)(n.p,{children:["If you installed Semgrep through Homebrew with ",(0,r.jsx)(n.code,{children:"brew install semgrep"}),", a ",(0,r.jsx)(n.code,{children:"semgrep-core"})," binary was bundled within that installation, but is not made available on your ",(0,r.jsx)(n.code,{children:"$PATH"})," by default."]}),"\n",(0,r.jsxs)(n.p,{children:["You can add the bundled binary to your ",(0,r.jsx)(n.code,{children:"$PATH"})," with this series of commands, provided you have ",(0,r.jsx)(n.code,{children:"jq"})," installed:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'export SEMGREP_BREW_INSTALLED_VERSION="$(brew info --json semgrep | jq \'.[0].installed[0].version\' -r)"\nexport SEMGREP_BREW_INSTALL_PATH="$(brew --cellar semgrep)/${SEMGREP_BREW_INSTALLED_VERSION}"\nexport SEMGREP_BREW_PYTHON_PACKAGE_PATH="$(${SEMGREP_BREW_INSTALL_PATH}/libexec/bin/python -m pip list -v | grep \'^semgrep\\b\' | awk \'{ print $3 }\')"\nexport SEMGREP_BREW_CORE_BINARY_PATH="${SEMGREP_BREW_PYTHON_PACKAGE_PATH}/semgrep/bin"\nexport PATH="${SEMGREP_BREW_CORE_BINARY_PATH}:${PATH}"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"the-manual-shortcut",children:"The manual shortcut"}),"\n",(0,r.jsxs)(n.p,{children:["Visit the ",(0,r.jsx)(n.a,{href:"https://github.com/semgrep/semgrep/releases",children:"releases page"})," and grab the latest zipfile or tarball for your platform. Extract this archive and inside should be the necessary binaries. You can confirm this by running:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"./semgrep-core --help\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Copy this file to somewhere in your ",(0,r.jsx)(n.code,{children:"$PATH"})," so ",(0,r.jsx)(n.code,{children:"semgrep-cli"})," can find them. For example, you may create a ",(0,r.jsx)(n.code,{children:"~/bin/"})," directory within the repository. ",(0,r.jsxs)(n.a,{href:"https://unix.stackexchange.com/questions/26047/how-to-correctly-add-a-path-to-path",children:["Include it in your ",(0,r.jsx)(n.code,{children:"$PATH"})]})," and run the binary from there."]}),"\n",(0,r.jsxs)(n.p,{children:["Alternatively, you may include it somewhere like ",(0,r.jsx)(n.code,{children:"/usr/local/bin/"}),"."]}),"\n",(0,r.jsxs)(n.h2,{id:"run-semgrep-cli",children:["Run ",(0,r.jsx)(n.code,{children:"semgrep-cli"})]}),"\n",(0,r.jsxs)(n.p,{children:["Ensure that you are in ",(0,r.jsx)(n.code,{children:"cli/"})," directory, and then issue the following command:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"pipenv run semgrep --help\n"})}),"\n",(0,r.jsx)(n.p,{children:"To try a simple analysis, you can run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"echo 'if 1 == 1: pass' | semgrep --lang python --pattern '$X == $X' -\n"})}),"\n",(0,r.jsx)(n.p,{children:"Congratulations, you have Semgrep running locally!"}),"\n",(0,r.jsxs)(n.h2,{id:"install-semgrep",children:["Install ",(0,r.jsx)(n.code,{children:"semgrep"})]}),"\n",(0,r.jsxs)(n.p,{children:["You can always run ",(0,r.jsx)(n.code,{children:"semgrep"})," from ",(0,r.jsx)(n.code,{children:"cli/"}),", which will use your latest changes in that directory, but you may also want to install the ",(0,r.jsx)(n.code,{children:"semgrep"})," binary. To do this, run"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"pipenv install --dev\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Some people have encountered difficulties with the above. If it fails, you can reach out to the ",(0,r.jsxs)(n.a,{href:"https://go.semgrep.dev/slack",children:[(0,r.jsx)(n.code,{children:"semgrep"})," team on Slack"]}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Now you can run ",(0,r.jsx)(n.code,{children:"semgrep --help"})," from anywhere."]}),"\n",(0,r.jsxs)(n.p,{children:["If you have installed ",(0,r.jsx)(n.code,{children:"semgrep-core"})," from source, there are convenient targets in the root Makefile that let you update all binaries. After you pull, simply run"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"make rebuild\n"})}),"\n",(0,r.jsxs)(n.p,{children:["See the Makefile in ",(0,r.jsx)(n.code,{children:"cli/"})]}),"\n",(0,r.jsxs)(n.h2,{id:"add-python-packages-to-semgrep",children:["Add Python packages to ",(0,r.jsx)(n.code,{children:"semgrep"})]}),"\n",(0,r.jsxs)(n.p,{children:["Semgrep uses ",(0,r.jsx)(n.code,{children:"mypy"})," to do static type-checking of its Python code. Therefore, when adding a new Python package, you also need to add typing stubs for that package. This can be done in three steps. For example, suppose you are adding the package ",(0,r.jsx)(n.code,{children:"pyyaml"})," to Semgrep."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Install the corresponding package with typing stubs. For this ",(0,r.jsx)(n.code,{children:"pyyaml"})," example, the corresponding package is ",(0,r.jsx)(n.code,{children:"types-pyyaml"}),". In the following command, ",(0,r.jsx)(n.code,{children:"--dev"})," specifies that this package is needed for development but not in production. This command updates ",(0,r.jsx)(n.code,{children:"cli/Pipfile"})," with the typing stubs package, and adds both the typing stubs and the package itself to your ",(0,r.jsx)(n.code,{children:"Pipfile.lock"}),". This allows you to import the package in your code (for example, ",(0,r.jsx)(n.code,{children:"import yaml as pyyaml"}),").","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"pipenv install --dev types-pyyaml\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Add the typing stubs package to ",(0,r.jsx)(n.code,{children:".pre-commit-config.yaml"})," so that the pre-commit ",(0,r.jsx)(n.code,{children:"mypy"})," hook can find the package.","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"      - id: mypy\n        additional_dependencies: &mypy-deps\n          - ...\n          - types-PyYAML\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Add the original package to ",(0,r.jsx)(n.code,{children:"cli/setup.py"})," in the ",(0,r.jsx)(n.code,{children:"install_requires"})," list variable. You can find the version number either in the ",(0,r.jsx)(n.code,{children:"Pipfile.lock"})," changes or by looking up online the most recent major version of the package.","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'install_requires = [\n   ...\n   "pyyaml~=6.0",\n]\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["This change makes your package a dependency of published Semgrep. Without this change, if you create a pull request, the CI job called ",(0,r.jsx)(n.code,{children:"build docker image"})," fails with a ",(0,r.jsx)(n.code,{children:"ModuleNotFoundError"}),", indicating that it is unable to find your package."]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsxs)(n.p,{children:["For a reference build that's known to work, consult the root ",(0,r.jsx)(n.code,{children:"Dockerfile"}),"\nto build semgrep inside a container. You can check that it builds with"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"docker build -t semgrep .\n"})}),"\n",(0,r.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"semgrep-cli"})," uses ",(0,r.jsx)(n.a,{href:"https://docs.pytest.org/en/latest/",children:(0,r.jsx)(n.code,{children:"pytest"})})," for testing."]}),"\n",(0,r.jsx)(n.p,{children:"To run tests, run the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"pipenv run pytest\n"})}),"\n",(0,r.jsx)(n.p,{children:"There are some much slower tests which run semgrep on many open source projects. To run these slow tests, run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"pipenv run pytest tests/qa\n"})}),"\n",(0,r.jsx)(n.p,{children:"If you want to update the tests to match to the current output:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"make regenerate-tests\n"})}),"\n",(0,r.jsx)(n.p,{children:"Running a single test file is simple too:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"pipenv run pytest path/to/test.py\n"})}),"\n",(0,r.jsx)(n.p,{children:"Or running an individual test function:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"pipenv run pytest path/to/test.py::test_func_name\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"semgrep-cli"})," also includes ",(0,r.jsx)(n.a,{href:"https://pytest-benchmark.readthedocs.io/en/latest/",children:(0,r.jsx)(n.code,{children:"pytest-benchmark"})}),"\nto allow for basic benchmarking functionality. This can be run like so:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"pipenv run pytest --benchmark-only\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);